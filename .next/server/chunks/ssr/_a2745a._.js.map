{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/ParallaxImage.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ParallaxImage.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ParallaxImage.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/ParallaxImage.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ParallaxImage.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ParallaxImage.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/app/blog/%5Buid%5D/page.tsx"],"sourcesContent":["import { Metadata } from \"next\";\nimport { notFound } from \"next/navigation\";\nimport { PrismicRichText } from \"@prismicio/react\";\n\nimport { createClient } from \"@/prismicio\";\n\nimport Container from \"@/components/Container\";\n\nimport ParallaxImage from \"@/components/ParallaxImage\";\nimport Link from \"next/link\";\nimport { FaChevronLeft } from \"react-icons/fa\";\n\ntype Params = { uid: string };\n\nexport default async function Page({ params }: { params: Promise<Params> }) {\n  const { uid } = await params;\n  const client = createClient();\n  const page = await client.getByUID(\"blog_post\", uid).catch(() => notFound());\n\n  return (\n    <>\n      <ParallaxImage\n        className=\"object-contain\"\n        image={page.data.featured_image}\n      />\n\n      <Container>\n        <Link href=\"/blog\" className=\"btn btn-ghost gap-2\">\n          <FaChevronLeft className=\"h-4 w-4\" />\n          Back to Blog\n        </Link>\n        <PrismicRichText field={page.data.content} />\n        {/* <SliceZone slices={page.data.slices} components={components} /> */}\n      </Container>\n    </>\n  );\n}\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<Params>;\n}): Promise<Metadata> {\n  const { uid } = await params;\n  const client = createClient();\n  const page = await client.getByUID(\"blog_post\", uid).catch(() => notFound());\n\n  return {\n    title: page.data.meta_title,\n    description: page.data.meta_description,\n  };\n}\n\nexport async function generateStaticParams() {\n  const client = createClient();\n  const pages = await client.getAllByType(\"blog_post\");\n\n  return pages.map((page) => {\n    return { uid: page.uid };\n  });\n}\n"],"names":[],"mappings":";;;;;;AACA;AAGA;AAEA;AAEA;AACA;AARA;AASA;AARA;;;;;;;;;AAYe,eAAe,KAAK,EAAE,MAAM,EAA+B;IACxE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM;IACtB,MAAM,SAAS,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAC1B,MAAM,OAAO,MAAM,OAAO,QAAQ,CAAC,aAAa,KAAK,KAAK,CAAC,IAAM,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAExE,qBACE;;0BACE,8OAAC,mIAAA,CAAA,UAAa;gBACZ,WAAU;gBACV,OAAO,KAAK,IAAI,CAAC,cAAc;;;;;;0BAGjC,8OAAC,+HAAA,CAAA,UAAS;;kCACR,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAQ,WAAU;;0CAC3B,8OAAC,8IAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;4BAAY;;;;;;;kCAGvC,8OAAC,kLAAA,CAAA,kBAAe;wBAAC,OAAO,KAAK,IAAI,CAAC,OAAO;;;;;;;;;;;;;;AAKjD;AAEO,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM;IACtB,MAAM,SAAS,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAC1B,MAAM,OAAO,MAAM,OAAO,QAAQ,CAAC,aAAa,KAAK,KAAK,CAAC,IAAM,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAExE,OAAO;QACL,OAAO,KAAK,IAAI,CAAC,UAAU;QAC3B,aAAa,KAAK,IAAI,CAAC,gBAAgB;IACzC;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,CAAA,GAAA,gHAAA,CAAA,eAAY,AAAD;IAC1B,MAAM,QAAQ,MAAM,OAAO,YAAY,CAAC;IAExC,OAAO,MAAM,GAAG,CAAC,CAAC;QAChB,OAAO;YAAE,KAAK,KAAK,GAAG;QAAC;IACzB;AACF"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}