{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/BentoBox.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { type JSX } from \"react\";\n\ninterface BentoBoxProps {\n  children?: React.ReactNode;\n  variant?: \"primary\" | \"secondary\" | \"accent\" | \"neutral\";\n  size?: \"small\" | \"medium\" | \"large\";\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function BentoBox({\n  children,\n\n  size = \"small\",\n  className,\n  onClick,\n}: BentoBoxProps): JSX.Element {\n  const sizeClasses = {\n    small: \"col-span-1 row-span-1\",\n    medium: \"col-span-2 row-span-1\",\n    large: \"col-span-2 row-span-2\",\n  };\n\n\n\n  return (\n    <div\n      className={clsx(\n        \"card transition-all duration-300 group\",\n        \"hover:scale-[1.02] hover:shadow-xl\",\n        \"backdrop-blur-sm bg-opacity-90\",\n        \"border border-base-content/10\",\n        \"break-inside-avoid bg-base-100\",\n        sizeClasses[size],\n\n        className\n      )}\n      onClick={onClick}\n    >\n      <div className=\"card-body\">\n        {children}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAWO,SAAS,SAAS,EACvB,QAAQ,EAER,OAAO,OAAO,EACd,SAAS,EACT,OAAO,EACO;IACd,MAAM,cAAc;QAClB,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAIA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EACZ,0CACA,sCACA,kCACA,iCACA,kCACA,WAAW,CAAC,KAAK,EAEjB;QAEF,SAAS;kBAET,cAAA,8OAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/RecentPostSlider/index.tsx"],"sourcesContent":["import { BentoBox } from \"@/components/BentoBox\";\nimport { Content, BlogPostDocument } from \"@prismicio/client\";\nimport { SliceComponentProps } from \"@prismicio/react\";\nimport Link from \"next/link\";\nimport { PrismicNextImage } from \"@prismicio/next\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nexport type RecentPostSliderProps = SliceComponentProps<Content.RecentPostSliderSlice>;\n\ntype BlogPost = {\n  blog_posts: BlogPostDocument;\n}\n\nconst RecentPostSlider = ({ slice }: RecentPostSliderProps) => {\n  const posts = slice.primary.related_post as unknown as BlogPost[];\n  const [[currentIndex, direction], setCurrentIndex] = useState([0, 0]);\n\n  const slideVariants = {\n    enter: (direction: number) => ({\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    }),\n    center: {\n      zIndex: 1,\n      x: 0,\n      opacity: 1\n    },\n    exit: (direction: number) => ({\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    })\n  };\n\n  const swipeConfidenceThreshold = 10000;\n  const swipePower = (offset: number, velocity: number) => {\n    return Math.abs(offset) * velocity;\n  };\n\n  const paginate = (newDirection: number) => {\n    const nextIndex = (currentIndex + newDirection + posts.length) % posts.length;\n    setCurrentIndex([nextIndex, newDirection]);\n  };\n\n  const currentPost = posts[currentIndex]?.blog_posts;\n  if (!currentPost) return null;\n\n  return (\n    <section data-slice-type={slice.slice_type} data-slice-variation={slice.variation}>\n      <BentoBox className=\"relative overflow-hidden\">\n        <AnimatePresence initial={false} custom={direction}>\n          <motion.div\n            key={currentIndex}\n            custom={direction}\n            variants={slideVariants}\n            initial=\"enter\"\n            animate=\"center\"\n            exit=\"exit\"\n            transition={{\n              x: { type: \"spring\", stiffness: 300, damping: 30 },\n              opacity: { duration: 0.2 }\n            }}\n            drag=\"x\"\n            dragConstraints={{ left: 0, right: 0 }}\n            dragElastic={1}\n            onDragEnd={(e, { offset, velocity }) => {\n              const swipe = swipePower(offset.x, velocity.x);\n              if (swipe < -swipeConfidenceThreshold) {\n                paginate(1);\n              } else if (swipe > swipeConfidenceThreshold) {\n                paginate(-1);\n              }\n            }}\n            className=\"absolute w-full\"\n          >\n            <Link\n              href={`/blog/${currentPost.uid}`}\n              className=\"block group hover:opacity-90 transition-opacity\"\n            >\n              <article className=\"relative\">\n                {currentPost.data.thumbnail && (\n                  <PrismicNextImage\n                    field={currentPost.data.thumbnail}\n                    className=\"w-full h-48 object-cover rounded-lg\"\n                    alt={currentPost.data.page_title || \"\"}\n                  />\n                )}\n                <div className=\"p-4\">\n                  <h3 className=\"text-xl font-bold mb-2\">{currentPost.data.page_title}</h3>\n                  <p className=\"text-gray-600\">{currentPost.data.excerpt}</p>\n                </div>\n              </article>\n            </Link>\n          </motion.div>\n        </AnimatePresence>\n\n        <button\n          className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/80 p-2 rounded-full\"\n          onClick={() => paginate(-1)}\n        >\n          <ChevronLeft size={24} />\n        </button>\n        <button\n          className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/80 p-2 rounded-full\"\n          onClick={() => paginate(1)}\n        >\n          <ChevronRight size={24} />\n        </button>\n      </BentoBox>\n    </section>\n  );\n};\n\nexport default RecentPostSlider;\n"],"names":[],"mappings":";;;;AAAA;AAGA;AAGA;;;;;;AADA;AADA;;;;;;;;AAWA,MAAM,mBAAmB,CAAC,EAAE,KAAK,EAAyB;IACxD,MAAM,QAAQ,MAAM,OAAO,CAAC,YAAY;IACxC,MAAM,CAAC,CAAC,cAAc,UAAU,EAAE,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAC;QAAG;KAAE;IAEpE,MAAM,gBAAgB;QACpB,OAAO,CAAC,YAAsB,CAAC;gBAC7B,GAAG,YAAY,IAAI,OAAO,CAAC;gBAC3B,SAAS;YACX,CAAC;QACD,QAAQ;YACN,QAAQ;YACR,GAAG;YACH,SAAS;QACX;QACA,MAAM,CAAC,YAAsB,CAAC;gBAC5B,QAAQ;gBACR,GAAG,YAAY,IAAI,OAAO,CAAC;gBAC3B,SAAS;YACX,CAAC;IACH;IAEA,MAAM,2BAA2B;IACjC,MAAM,aAAa,CAAC,QAAgB;QAClC,OAAO,KAAK,GAAG,CAAC,UAAU;IAC5B;IAEA,MAAM,WAAW,CAAC;QAChB,MAAM,YAAY,CAAC,eAAe,eAAe,MAAM,MAAM,IAAI,MAAM,MAAM;QAC7E,gBAAgB;YAAC;YAAW;SAAa;IAC3C;IAEA,MAAM,cAAc,KAAK,CAAC,aAAa,EAAE;IACzC,IAAI,CAAC,aAAa,OAAO;IAEzB,qBACE,8OAAC;QAAQ,mBAAiB,MAAM,UAAU;QAAE,wBAAsB,MAAM,SAAS;kBAC/E,cAAA,8OAAC,8HAAA,CAAA,WAAQ;YAAC,WAAU;;8BAClB,8OAAC,wJAAA,CAAA,kBAAe;oBAAC,SAAS;oBAAO,QAAQ;8BACvC,cAAA,8OAAC,wJAAA,CAAA,SAAM,CAAC,GAAG;wBAET,QAAQ;wBACR,UAAU;wBACV,SAAQ;wBACR,SAAQ;wBACR,MAAK;wBACL,YAAY;4BACV,GAAG;gCAAE,MAAM;gCAAU,WAAW;gCAAK,SAAS;4BAAG;4BACjD,SAAS;gCAAE,UAAU;4BAAI;wBAC3B;wBACA,MAAK;wBACL,iBAAiB;4BAAE,MAAM;4BAAG,OAAO;wBAAE;wBACrC,aAAa;wBACb,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE;4BACjC,MAAM,QAAQ,WAAW,OAAO,CAAC,EAAE,SAAS,CAAC;4BAC7C,IAAI,QAAQ,CAAC,0BAA0B;gCACrC,SAAS;4BACX,OAAO,IAAI,QAAQ,0BAA0B;gCAC3C,SAAS,CAAC;4BACZ;wBACF;wBACA,WAAU;kCAEV,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAM,CAAC,MAAM,EAAE,YAAY,GAAG,EAAE;4BAChC,WAAU;sCAEV,cAAA,8OAAC;gCAAQ,WAAU;;oCAChB,YAAY,IAAI,CAAC,SAAS,kBACzB,8OAAC,+JAAA,CAAA,mBAAgB;wCACf,OAAO,YAAY,IAAI,CAAC,SAAS;wCACjC,WAAU;wCACV,KAAK,YAAY,IAAI,CAAC,UAAU,IAAI;;;;;;kDAGxC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA0B,YAAY,IAAI,CAAC,UAAU;;;;;;0DACnE,8OAAC;gDAAE,WAAU;0DAAiB,YAAY,IAAI,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;uBArCvD;;;;;;;;;;8BA4CT,8OAAC;oBACC,WAAU;oBACV,SAAS,IAAM,SAAS,CAAC;8BAEzB,cAAA,8OAAC;wBAAY,MAAM;;;;;;;;;;;8BAErB,8OAAC;oBACC,WAAU;oBACV,SAAS,IAAM,SAAS;8BAExB,cAAA,8OAAC;wBAAa,MAAM;;;;;;;;;;;;;;;;;;;;;;AAK9B;uCAEe"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}