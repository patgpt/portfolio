{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/BentoBox.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { type JSX } from \"react\";\n\ninterface BentoBoxProps {\n  children?: React.ReactNode;\n  variant?: \"primary\" | \"secondary\" | \"accent\" | \"neutral\";\n  size?: \"small\" | \"medium\" | \"large\";\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function BentoBox({\n  children,\n\n  size = \"small\",\n  className,\n  onClick,\n}: BentoBoxProps): JSX.Element {\n  const sizeClasses = {\n    small: \"col-span-1 row-span-1\",\n    medium: \"col-span-2 row-span-1\",\n    large: \"col-span-2 row-span-2\",\n  };\n\n\n\n  return (\n    <div\n      className={clsx(\n        \"card transition-all duration-300 group\",\n        \"hover:scale-[1.02] hover:shadow-xl\",\n        \"backdrop-blur-sm bg-opacity-90\",\n        \"border border-base-content/10\",\n        \"break-inside-avoid bg-base-100\",\n        sizeClasses[size],\n\n        className\n      )}\n      onClick={onClick}\n    >\n      <div className=\"card-body\">\n        {children}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAWO,SAAS,SAAS,EACvB,QAAQ,EAER,OAAO,OAAO,EACd,SAAS,EACT,OAAO,EACO;IACd,MAAM,cAAc;QAClB,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAIA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EACZ,0CACA,sCACA,kCACA,iCACA,kCACA,WAAW,CAAC,KAAK,EAEjB;QAEF,SAAS;kBAET,cAAA,8OAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/CompaniesIHaveWorkedWithSlice/index.tsx"],"sourcesContent":["\"use client\"\nimport { Content } from \"@prismicio/client\";\nimport { PrismicNextImage } from \"@prismicio/next\";\nimport { PrismicRichText, SliceComponentProps } from \"@prismicio/react\";\nimport { BentoBox } from \"@/components/BentoBox\";\nimport { useEffect, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport type { JSX } from \"react\";\n\n/**\n * Props for `CompaniesIHaveWorkedWithSlice`.\n */\nexport type CompaniesIHaveWorkedWithSliceProps =\n  SliceComponentProps<Content.CompaniesIHaveWorkedWithSliceSlice>;\n\n/**\n * Component for \"CompaniesIHaveWorkedWithSlice\" Slices.\n */\nconst CompaniesIHaveWorkedWithSlice = ({\n  slice,\n}: CompaniesIHaveWorkedWithSliceProps): JSX.Element => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentIndex((prevIndex) =>\n        prevIndex === slice.primary.logo.length - 1 ? 0 : prevIndex + 1\n      );\n    }, 3000); // Change slide every 3 seconds\n\n    return () => clearInterval(timer);\n  }, [slice.primary.logo.length]);\n\n  return (\n    <section\n      data-slice-type={slice.slice_type}\n      data-slice-variation={slice.variation}\n      className=\"col-span-1 lg:col-span-2\"\n    >\n      <BentoBox variant=\"primary\" size=\"medium\">\n        <PrismicRichText field={slice.primary.title} />\n        <div className=\"relative h-60 overflow-hidden\">\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={currentIndex}\n              initial={{ x: 300, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              exit={{ x: -300, opacity: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"flex items-center justify-center w-full h-full\"\n            >\n              <PrismicNextImage\n                field={slice.primary.logo[currentIndex].company_logo}\n                className=\"h-60 w-auto object-contain\"\n              />\n            </motion.div>\n          </AnimatePresence>\n        </div>\n      </BentoBox>\n    </section>\n  );\n};\n\nexport default CompaniesIHaveWorkedWithSlice;\n"],"names":[],"mappings":";;;;AAIA;AACA;AAFA;AAGA;AAAA;AAJA;AAFA;;;;;;;AAeA;;CAEC,GACD,MAAM,gCAAgC,CAAC,EACrC,KAAK,EAC8B;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,YAAY;YACxB,gBAAgB,CAAC,YACf,cAAc,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,YAAY;QAElE,GAAG,OAAO,+BAA+B;QAEzC,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM;KAAC;IAE9B,qBACE,8OAAC;QACC,mBAAiB,MAAM,UAAU;QACjC,wBAAsB,MAAM,SAAS;QACrC,WAAU;kBAEV,cAAA,8OAAC,8HAAA,CAAA,WAAQ;YAAC,SAAQ;YAAU,MAAK;;8BAC/B,8OAAC,+JAAA,CAAA,kBAAe;oBAAC,OAAO,MAAM,OAAO,CAAC,KAAK;;;;;;8BAC3C,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,yLAAA,CAAA,kBAAe;wBAAC,MAAK;kCACpB,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BAET,SAAS;gCAAE,GAAG;gCAAK,SAAS;4BAAE;4BAC9B,SAAS;gCAAE,GAAG;gCAAG,SAAS;4BAAE;4BAC5B,MAAM;gCAAE,GAAG,CAAC;gCAAK,SAAS;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;4BAC5B,WAAU;sCAEV,cAAA,8OAAC,+JAAA,CAAA,mBAAgB;gCACf,OAAO,MAAM,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY;gCACpD,WAAU;;;;;;2BATP;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBnB;uCAEe"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/MyStack/index.tsx"],"sourcesContent":["\"use client\"\nimport { BentoBox } from \"@/components/BentoBox\";\nimport { Content } from \"@prismicio/client\";\nimport { PrismicNextImage } from \"@prismicio/next\";\nimport { PrismicRichText, SliceComponentProps } from \"@prismicio/react\";\nimport { motion, useInView } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport type { JSX } from \"react\";\n\n/**\n * Props for `MyStack`.\n */\nexport type MyStackProps = SliceComponentProps<Content.MyStackSlice>;\n\n/**\n * Component for \"MyStack\" Slices.\n */\nconst MyStack = ({ slice }: MyStackProps): JSX.Element => {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true });\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { width: 0 },\n    visible: (value: number) => ({\n      width: `${value}%`,\n      transition: {\n        duration: 1,\n        ease: \"easeOut\"\n      }\n    })\n  };\n\n  return (\n    <section\n      data-slice-type={slice.slice_type}\n      data-slice-variation={slice.variation}\n      ref={ref}\n    >\n      <BentoBox>\n        <PrismicRichText field={slice.primary.my_stack_text} />\n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={isInView ? \"visible\" : \"hidden\"}\n          className=\"space-y-4\"\n        >\n          {slice.primary.stack_items.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-4\">\n              <PrismicNextImage field={item.stack_icon} className=\"w-8 h-8\" />\n              <div className=\"flex-1 space-y-1\">\n                <div className=\"font-medium text-base-content\">\n                  <PrismicRichText field={item.stack_title_text} />\n                </div>\n                <div className=\"bg-base-200 rounded-full h-2 overflow-hidden\">\n                  <motion.div\n                    className=\"h-full bg-primary\"\n                    variants={itemVariants}\n                    custom={item.stack_skill_number}\n                  />\n                </div>\n              </div>\n            </div>\n          ))}\n        </motion.div>\n      </BentoBox>\n    </section>\n  );\n};\n\nexport default MyStack;\n"],"names":[],"mappings":";;;;AACA;AAKA;AADA;AADA;AACA;AAFA;AAHA;;;;;;;AAcA;;CAEC,GACD,MAAM,UAAU,CAAC,EAAE,KAAK,EAAgB;IACtC,MAAM,MAAM,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IACnB,MAAM,WAAW,CAAA,GAAA,6KAAA,CAAA,YAAS,AAAD,EAAE,KAAK;QAAE,MAAM;IAAK;IAE7C,MAAM,oBAAoB;QACxB,QAAQ;YAAE,SAAS;QAAE;QACrB,SAAS;YACP,SAAS;YACT,YAAY;gBACV,iBAAiB;YACnB;QACF;IACF;IAEA,MAAM,eAAe;QACnB,QAAQ;YAAE,OAAO;QAAE;QACnB,SAAS,CAAC,QAAkB,CAAC;gBAC3B,OAAO,GAAG,MAAM,CAAC,CAAC;gBAClB,YAAY;oBACV,UAAU;oBACV,MAAM;gBACR;YACF,CAAC;IACH;IAEA,qBACE,8OAAC;QACC,mBAAiB,MAAM,UAAU;QACjC,wBAAsB,MAAM,SAAS;QACrC,KAAK;kBAEL,cAAA,8OAAC,8HAAA,CAAA,WAAQ;;8BACP,8OAAC,+JAAA,CAAA,kBAAe;oBAAC,OAAO,MAAM,OAAO,CAAC,aAAa;;;;;;8BACnD,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,UAAU;oBACV,SAAQ;oBACR,SAAS,WAAW,YAAY;oBAChC,WAAU;8BAET,MAAM,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,sBACpC,8OAAC;4BAAgB,WAAU;;8CACzB,8OAAC,+JAAA,CAAA,mBAAgB;oCAAC,OAAO,KAAK,UAAU;oCAAE,WAAU;;;;;;8CACpD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC,+JAAA,CAAA,kBAAe;gDAAC,OAAO,KAAK,gBAAgB;;;;;;;;;;;sDAE/C,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gDACT,WAAU;gDACV,UAAU;gDACV,QAAQ,KAAK,kBAAkB;;;;;;;;;;;;;;;;;;2BAV7B;;;;;;;;;;;;;;;;;;;;;AAoBtB;uCAEe"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/RecentPostSlider/index.tsx"],"sourcesContent":["\"use client\"\nimport { BentoBox } from \"@/components/BentoBox\";\nimport { Content } from \"@prismicio/client\";\nimport { SliceComponentProps } from \"@prismicio/react\";\nimport Link from \"next/link\";\nimport { PrismicNextImage } from \"@prismicio/next\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useState, useEffect } from \"react\";\nimport { FaCircleChevronLeft, FaCircleChevronRight } from \"react-icons/fa6\";\nimport type { BlogPostDocument } from \"../../../prismicio-types\";\n\n\nexport type RecentPostSliderProps = SliceComponentProps<Content.RecentPostSliderSlice>;\n\ntype Post = BlogPostDocument;\n\nconst RecentPostSlider = ({ slice }: RecentPostSliderProps) => {\n  const posts = slice.primary.related_post;\n  const [[currentIndex, direction], setCurrentIndex] = useState([0, 0]);\n\n  // Debug log to check the posts data\n  useEffect(() => {\n    console.log('Posts data:', posts);\n  }, [posts]);\n\n  // Verify we have posts before proceeding\n  if (!posts || posts.length === 0) {\n    console.log('No posts found');\n    return null;\n  }\n\n  const slideVariants = {\n    enter: (direction: number) => ({\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    }),\n    center: {\n      zIndex: 1,\n      x: 0,\n      opacity: 1\n    },\n    exit: (direction: number) => ({\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    })\n  };\n\n  const swipeConfidenceThreshold = 10000;\n  const swipePower = (offset: number, velocity: number) => {\n    return Math.abs(offset) * velocity;\n  };\n\n  const paginate = (newDirection: number) => {\n    const nextIndex = (currentIndex + newDirection + posts.length) % posts.length;\n    setCurrentIndex([nextIndex, newDirection]);\n  };\n\n  const currentPost = posts[currentIndex]?.blog_posts\n  if (!currentPost) {\n    console.log('Current post not found:', currentIndex);\n    return null;\n  }\n\n  return (\n    <section\n      data-slice-type={slice.slice_type}\n      data-slice-variation={slice.variation}\n    >\n      <BentoBox className=\"relative overflow-hidden min-h-[400px]\">\n        <AnimatePresence initial={false} custom={direction}>\n          <motion.div\n            key={currentIndex}\n            custom={direction}\n            variants={slideVariants}\n            initial=\"enter\"\n            animate=\"center\"\n            exit=\"exit\"\n            transition={{\n              x: { type: \"spring\", stiffness: 300, damping: 30 },\n              opacity: { duration: 0.2 }\n            }}\n            drag=\"x\"\n            dragConstraints={{ left: 0, right: 0 }}\n            dragElastic={1}\n            onDragEnd={(e, { offset, velocity }) => {\n              const swipe = swipePower(offset.x, velocity.x);\n              if (swipe < -swipeConfidenceThreshold) {\n                paginate(1);\n              } else if (swipe > swipeConfidenceThreshold) {\n                paginate(-1);\n              }\n            }}\n            className=\"absolute w-full h-full\"\n          >\n            <Link\n              href={`/blog/${currentPost.uid}`}\n              className=\"block group hover:opacity-90 transition-opacity h-full\"\n            >\n              <article className=\"relative h-full\">\n                {currentPost.data.thumbnail && (\n                  <PrismicNextImage\n                    field={currentPost.data.thumbnail}\n                    className=\"w-full h-48 object-cover rounded-lg\"\n                    alt={currentPost.data.page_title || \"\"}\n                  />\n                )}\n                <div className=\"p-4\">\n                  <h3 className=\"text-xl font-bold mb-2\">{currentPost.data.page_title}</h3>\n                  <p className=\"text-gray-600\">{currentPost.data.excerpt}</p>\n                </div>\n              </article>\n            </Link>\n          </motion.div>\n        </AnimatePresence>\n\n        {posts.length > 1 && (\n          <>\n            <button\n              className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/80 p-2 rounded-full\"\n              onClick={() => paginate(-1)}\n            >\n              <FaCircleChevronLeft color=\"gray\" size={24} />\n            </button>\n            <button\n              className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/80 p-2 rounded-full\"\n              onClick={() => paginate(1)}\n            >\n              <FaCircleChevronRight color=\"gray\" size={24} />\n            </button>\n          </>\n        )}\n      </BentoBox>\n    </section>\n  );\n};\n\nexport default RecentPostSlider;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}