{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/BentoBox.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { type HTMLAttributes } from \"react\";\n\n// Use const assertion for better type inference\nconst SIZES = {\n  small: \"col-span-1 row-span-1\",\n  medium: \"col-span-2 row-span-1\",\n  large: \"col-span-2 row-span-2\",\n} as const;\n\nconst VARIANTS = {\n  default: \"\",\n  primary: \"bg-primary text-primary-content\",\n  secondary: \"bg-secondary text-secondary-content\",\n  accent: \"bg-accent text-accent-content\",\n} as const;\n\ntype BentoBoxSize = keyof typeof SIZES;\ntype BentoBoxVariant = keyof typeof VARIANTS;\n\nexport interface BentoBoxProps extends HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  size?: BentoBoxSize;\n  variant?: BentoBoxVariant;\n}\n\nexport const BentoBox = React.memo(({\n  children,\n  className,\n  size = 'small',\n  variant = 'default',\n  ...props\n}: BentoBoxProps) => {\n  return (\n    <div\n      className={clsx(\n        \"card transition-all duration-300 group\",\n        \"hover:scale-[1.02] hover:shadow-xl\",\n        \"backdrop-blur-sm bg-opacity-90\",\n        \"border border-base-content/10\",\n        \"break-inside-avoid bg-base-100\",\n        SIZES[size],\n        VARIANTS[variant],\n        className\n      )}\n      {...props}\n    >\n      <div className=\"card-body\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nBentoBox.displayName = 'BentoBox';\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,gDAAgD;AAChD,MAAM,QAAQ;IACZ,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,WAAW;IACf,SAAS;IACT,SAAS;IACT,WAAW;IACX,QAAQ;AACV;AAWO,MAAM,yBAAW,6JAAA,CAAA,UAAK,CAAC,IAAI,MAAC,CAAC,EAClC,QAAQ,EACR,SAAS,EACT,OAAO,OAAO,EACd,UAAU,SAAS,EACnB,GAAG,OACW;IACd,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,0CACA,sCACA,kCACA,iCACA,kCACA,KAAK,CAAC,KAAK,EACX,QAAQ,CAAC,QAAQ,EACjB;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;;AAEA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/MyStack/index.tsx"],"sourcesContent":["\"use client\"\nimport { BentoBox } from \"@/components/BentoBox\";\nimport { Content } from \"@prismicio/client\";\nimport { PrismicNextImage } from \"@prismicio/next\";\nimport { PrismicRichText, SliceComponentProps } from \"@prismicio/react\";\nimport { motion, useInView } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport type { JSX } from \"react\";\n\n/**\n * Props for `MyStack`.\n */\nexport type MyStackProps = SliceComponentProps<Content.MyStackSlice>;\n\n/**\n * Component for \"MyStack\" Slices.\n */\nconst MyStack = ({ slice }: MyStackProps): JSX.Element => {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true });\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { width: 0 },\n    visible: (value: number) => ({\n      width: `${value}%`,\n      transition: {\n        duration: 1,\n        ease: \"easeOut\"\n      }\n    })\n  };\n\n  return (\n    <section\n      data-slice-type={slice.slice_type}\n      data-slice-variation={slice.variation}\n      ref={ref}\n    >\n      <BentoBox>\n        <PrismicRichText field={slice.primary.my_stack_text} />\n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={isInView ? \"visible\" : \"hidden\"}\n          className=\"space-y-4\"\n        >\n          {slice.primary.stack_items.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-4\">\n              <PrismicNextImage field={item.stack_icon} className=\"w-8 h-8\" />\n              <div className=\"flex-1 space-y-1\">\n                <div className=\"font-medium text-base-content\">\n                  <PrismicRichText field={item.stack_title_text} />\n                </div>\n                <div className=\"bg-base-200 rounded-full h-2 overflow-hidden\">\n                  <motion.div\n                    className=\"h-full bg-primary\"\n                    variants={itemVariants}\n                    custom={item.stack_skill_number}\n                  />\n                </div>\n              </div>\n            </div>\n          ))}\n        </motion.div>\n      </BentoBox>\n    </section>\n  );\n};\n\nexport default MyStack;\n"],"names":[],"mappings":";;;;AACA;AAKA;AADA;AADA;AACA;AAFA;;;AAHA;;;;;;AAcA;;CAEC,GACD,MAAM,UAAU,CAAC,EAAE,KAAK,EAAgB;;IACtC,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IACnB,MAAM,WAAW,CAAA,GAAA,gLAAA,CAAA,YAAS,AAAD,EAAE,KAAK;QAAE,MAAM;IAAK;IAE7C,MAAM,oBAAoB;QACxB,QAAQ;YAAE,SAAS;QAAE;QACrB,SAAS;YACP,SAAS;YACT,YAAY;gBACV,iBAAiB;YACnB;QACF;IACF;IAEA,MAAM,eAAe;QACnB,QAAQ;YAAE,OAAO;QAAE;QACnB,SAAS,CAAC,QAAkB,CAAC;gBAC3B,OAAO,GAAG,MAAM,CAAC,CAAC;gBAClB,YAAY;oBACV,UAAU;oBACV,MAAM;gBACR;YACF,CAAC;IACH;IAEA,qBACE,6LAAC;QACC,mBAAiB,MAAM,UAAU;QACjC,wBAAsB,MAAM,SAAS;QACrC,KAAK;kBAEL,cAAA,6LAAC,iIAAA,CAAA,WAAQ;;8BACP,6LAAC,kKAAA,CAAA,kBAAe;oBAAC,OAAO,MAAM,OAAO,CAAC,aAAa;;;;;;8BACnD,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,UAAU;oBACV,SAAQ;oBACR,SAAS,WAAW,YAAY;oBAChC,WAAU;8BAET,MAAM,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,sBACpC,6LAAC;4BAAgB,WAAU;;8CACzB,6LAAC,kKAAA,CAAA,mBAAgB;oCAAC,OAAO,KAAK,UAAU;oCAAE,WAAU;;;;;;8CACpD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,kKAAA,CAAA,kBAAe;gDAAC,OAAO,KAAK,gBAAgB;;;;;;;;;;;sDAE/C,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gDACT,WAAU;gDACV,UAAU;gDACV,QAAQ,KAAK,kBAAkB;;;;;;;;;;;;;;;;;;2BAV7B;;;;;;;;;;;;;;;;;;;;;AAoBtB;GA5DM;;QAEa,gLAAA,CAAA,YAAS;;;KAFtB;uCA8DS"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}