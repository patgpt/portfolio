{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/app/lib/utils.ts"],"sourcesContent":["import { ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/Container.tsx"],"sourcesContent":["import { cn } from \"@/app/lib/utils\";\n\nexport default function Container({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) {\n  return (\n    <div\n      className={cn(\n        \"container prose prose-2xl mx-auto my-8 h-full px-4 prose-a:no-underline\",\n        className,\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,UAAU,EAChC,QAAQ,EACR,SAAS,EAIV;IACC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,6HAAA,CAAA,KAAE,AAAD,EACV,2EACA;kBAGD;;;;;;AAGP;KAjBwB"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/RichTextBlock/index.tsx"],"sourcesContent":["import Container from \"@/components/Container\";\nimport { Content } from \"@prismicio/client\";\nimport { PrismicRichText, SliceComponentProps } from \"@prismicio/react\";\nimport type { JSX } from \"react\";\n\n/**\n * Props for `RichTextBlock`.\n */\nexport type RichTextBlockProps =\n  SliceComponentProps<Content.RichTextBlockSlice>;\n\n/**\n * Component for \"RichTextBlock\" Slices.\n */\nconst RichTextBlock = ({ slice }: RichTextBlockProps): JSX.Element => {\n  return (\n    <Container>\n      <section\n        data-slice-type={slice.slice_type}\n        data-slice-variation={slice.variation}\n      >\n        <PrismicRichText field={slice.primary.content} />\n      </section>\n    </Container>\n  );\n};\n\nexport default RichTextBlock;\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AASA;;CAEC,GACD,MAAM,gBAAgB,CAAC,EAAE,KAAK,EAAsB;IAClD,qBACE,6LAAC,kIAAA,CAAA,UAAS;kBACR,cAAA,6LAAC;YACC,mBAAiB,MAAM,UAAU;YACjC,wBAAsB,MAAM,SAAS;sBAErC,cAAA,6LAAC,kKAAA,CAAA,kBAAe;gBAAC,OAAO,MAAM,OAAO,CAAC,OAAO;;;;;;;;;;;;;;;;AAIrD;KAXM;uCAaS"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}