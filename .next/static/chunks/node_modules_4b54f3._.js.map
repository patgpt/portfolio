{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"throttle.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/lib/throttle.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const throttle = <TFn extends (...args: any[]) => any>(\n\tfn: TFn,\n\tdelay = 16,\n): ((...args: Parameters<TFn>) => void) => {\n\tlet lastExec = 0;\n\tlet timer: NodeJS.Timeout | null = null;\n\n\treturn function (this: unknown, ...args: Parameters<TFn>) {\n\t\tconst now = Date.now();\n\t\tconst delta = now - lastExec;\n\n\t\tif (delta >= delay) {\n\t\t\tfn.apply(this, args);\n\t\t\tlastExec = now;\n\t\t} else {\n\t\t\tif (timer) {\n\t\t\t\tclearTimeout(timer);\n\t\t\t}\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tlastExec = Date.now();\n\t\t\t}, delay - delta);\n\t\t}\n\t};\n};\n"],"names":[],"mappings":";;;AACO,MAAM,WAAW,CACvB,IACA,QAAQ,EAAA,KACiC;IACzC,IAAI,WAAW;IACf,IAAI,QAA+B;IAEnC,OAAO,SAAA,GAA4B,IAAA,EAAqB;QACjD,MAAA,MAAM,KAAK,GAAA;QACjB,MAAM,QAAQ,MAAM;QAEpB,IAAI,SAAS,OAAO;YAChB,GAAA,KAAA,CAAM,IAAA,EAAM,IAAI;YACR,WAAA;QAAA,OACL;YACN,IAAI,OAAO;gBACV,aAAa,KAAK;YAClB;YACD,QAAQ,WAAW,MAAK;gBACpB,GAAA,KAAA,CAAM,IAAA,EAAM,IAAI;gBACnB,WAAW,KAAK,GAAA;eACd,QAAQ,KAAK;QAChB;IAAA;AAEH","ignoreList":[0]}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/types.ts"],"sourcesContent":["import { SliceZone } from \"@prismicio/client\";\n\nimport { RequestMessage, ResponseMessage, Transaction } from \"./channel\";\n\nexport type ActiveSlice = {\n\trect: DOMRect;\n\tsliceID: string;\n\tvariationID: string;\n\tindex: number;\n};\n\nexport type SliceZoneSize = {\n\trect: DOMRect;\n};\n\nexport enum APIRequestType {\n\tSetActiveSlice = \"setActiveSlice\",\n\tSetSliceZoneSize = \"setSliceZoneSize\",\n}\n\nexport type APITransactions = {\n\t[APIRequestType.SetActiveSlice]: Transaction<\n\t\tRequestMessage<APIRequestType.SetActiveSlice, ActiveSlice | null>\n\t>;\n\t[APIRequestType.SetSliceZoneSize]: Transaction<\n\t\tRequestMessage<APIRequestType.SetSliceZoneSize, SliceZoneSize>\n\t>;\n};\n\nexport enum ClientRequestType {\n\tPing = \"ping\",\n\tSetSliceZone = \"setSliceZone\",\n\tScrollToSlice = \"scrollToSlice\",\n}\n\nexport type ClientTransactions = {\n\t[ClientRequestType.Ping]: Transaction<\n\t\tRequestMessage<ClientRequestType.Ping>,\n\t\tResponseMessage<\"pong\">\n\t>;\n\n\t[ClientRequestType.SetSliceZone]: Transaction<\n\t\tRequestMessage<ClientRequestType.SetSliceZone, SliceZone>\n\t>;\n\n\t[ClientRequestType.ScrollToSlice]: Transaction<\n\t\tRequestMessage<\n\t\t\tClientRequestType.ScrollToSlice,\n\t\t\t{\n\t\t\t\tsliceIndex: number;\n\t\t\t\tbehavior?: \"auto\" | \"smooth\";\n\t\t\t\tblock?: \"start\" | \"center\" | \"end\" | \"nearest\";\n\t\t\t\tinline?: \"start\" | \"center\" | \"end\" | \"nearest\";\n\t\t\t}\n\t\t>\n\t>;\n};\n"],"names":["APIRequestType","ClientRequestType"],"mappings":";;;;AAeY,IAAA;AAAA,CAAZ,SAAYA,eAAAA,EAAc;IACzBA,eAAAA,CAAA,gBAAA,CAAA,GAAA;IACAA,eAAAA,CAAA,kBAAA,CAAA,GAAA;AACD,CAAA,EAHY,kBAAA,CAAA,iBAGX,CAAA,CAAA,CAAA;AAWW,IAAA;AAAA,CAAZ,SAAYC,kBAAAA,EAAiB;IAC5BA,kBAAAA,CAAA,MAAA,CAAA,GAAA;IACAA,kBAAAA,CAAA,cAAA,CAAA,GAAA;IACAA,kBAAAA,CAAA,eAAA,CAAA,GAAA;AACD,CAAA,EAJY,qBAAA,CAAA,oBAIX,CAAA,CAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/kit/types.ts"],"sourcesContent":["import type { SliceZone } from \"@prismicio/client\";\n\nimport type { ActiveSlice } from \"../types\";\n\nimport type { SimulatorManager } from \"./SimulatorManager\";\n\nexport enum StateEventType {\n\tSlices = \"slices\",\n\tActiveSlice = \"activeSlice\",\n\tMessage = \"message\",\n}\n\nexport type StateEvents = {\n\t[StateEventType.Slices]: SliceZone;\n\t[StateEventType.ActiveSlice]: ActiveSlice | null;\n\t[StateEventType.Message]: string;\n};\n\nexport interface SliceSimulatorProps {\n\tzIndex?: number;\n\tbackground?: string;\n}\n\nexport interface SliceSimulatorState {\n\tmanager: SimulatorManager;\n\tslices: SliceZone;\n\tmessage: string;\n}\n\nexport type SliceSimulatorOptions = SliceSimulatorProps & SliceSimulatorState;\n"],"names":["StateEventType"],"mappings":";;;AAMY,IAAA;AAAA,CAAZ,SAAYA,eAAAA,EAAc;IACzBA,eAAAA,CAAA,QAAA,CAAA,GAAA;IACAA,eAAAA,CAAA,aAAA,CAAA,GAAA;IACAA,eAAAA,CAAA,SAAA,CAAA,GAAA;AACD,CAAA,EAJY,kBAAA,CAAA,iBAIX,CAAA,CAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/statuses/index.js"],"sourcesContent":["/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED;AAEA;;;CAGC,GAED,IAAI;AAEJ;;;CAGC,GAED,OAAO,OAAO,GAAG;AAEjB,6BAA6B;AAC7B,OAAO,OAAO,GAAG;AAEjB,0CAA0C;AAC1C,OAAO,IAAI,GAAG,6BAA6B;AAE3C,wBAAwB;AACxB,OAAO,KAAK,GAAG,qBAAqB;AAEpC,6BAA6B;AAC7B,OAAO,QAAQ,GAAG;IAChB,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,gCAAgC;AAChC,OAAO,KAAK,GAAG;IACb,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,qDAAqD;AACrD,OAAO,KAAK,GAAG;IACb,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA;;;CAGC,GAED,SAAS,6BAA8B,KAAK;IAC1C,IAAI,MAAM,CAAC;IAEX,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,SAAS,YAAa,IAAI;QACnD,IAAI,UAAU,KAAK,CAAC,KAAK;QACzB,IAAI,SAAS,OAAO;QAEpB,eAAe;QACf,GAAG,CAAC,QAAQ,WAAW,GAAG,GAAG;IAC/B;IAEA,OAAO;AACT;AAEA;;;CAGC,GAED,SAAS,qBAAsB,KAAK;IAClC,OAAO,OAAO,IAAI,CAAC,OAAO,GAAG,CAAC,SAAS,QAAS,IAAI;QAClD,OAAO,OAAO;IAChB;AACF;AAEA;;;CAGC,GAED,SAAS,cAAe,OAAO;IAC7B,IAAI,MAAM,QAAQ,WAAW;IAE7B,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,MAAM;QAC3D,MAAM,IAAI,MAAM,8BAA8B,UAAU;IAC1D;IAEA,OAAO,OAAO,IAAI,CAAC,IAAI;AACzB;AAEA;;;CAGC,GAED,SAAS,iBAAkB,IAAI;IAC7B,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,OAAO,EAAE,OAAO;QAC/D,MAAM,IAAI,MAAM,0BAA0B;IAC5C;IAEA,OAAO,OAAO,OAAO,CAAC,KAAK;AAC7B;AAEA;;;;;;;;;;;;CAYC,GAED,SAAS,OAAQ,IAAI;IACnB,IAAI,OAAO,SAAS,UAAU;QAC5B,OAAO,iBAAiB;IAC1B;IAEA,IAAI,OAAO,SAAS,UAAU;QAC5B,MAAM,IAAI,UAAU;IACtB;IAEA,QAAQ;IACR,IAAI,IAAI,SAAS,MAAM;IACvB,IAAI,CAAC,MAAM,IAAI;QACb,OAAO,iBAAiB;IAC1B;IAEA,OAAO,cAAc;AACvB","ignoreList":[0]}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/channel/types.ts"],"sourcesContent":["// Messages\nexport type MessageBase = {\n\trequestID: string;\n};\n\nexport type RequestMessage<TType extends string = string, TData = void> = {\n\ttype: TType;\n\tdata: TData;\n} & MessageBase;\n\nexport type ResponseMessageBase = {\n\tstatus: number;\n\tmsg: string;\n} & MessageBase;\n\nexport type SuccessResponseMessage<TData = void> = {\n\tdata: TData;\n\terror?: never;\n} & ResponseMessageBase;\n\nexport type ErrorResponseMessage<TError = unknown> = {\n\tdata?: never;\n\terror: unknown | TError;\n} & ResponseMessageBase;\n\nexport type ResponseMessage<TData = void, TError = unknown> =\n\t| SuccessResponseMessage<TData>\n\t| ErrorResponseMessage<TError>;\n\nexport type ExtractSuccessResponseMessage<\n\tTResponse extends UnknownResponseMessage,\n> = Extract<TResponse, { error?: never }>;\n\nexport type ExtractErrorResponseMessage<\n\tTResponse extends UnknownResponseMessage,\n> = Extract<TResponse, { data?: never }>;\n\n// Unknown messages\nexport type UnknownRequestMessage = RequestMessage<string, unknown>;\n\nexport type UnknownSuccessResponseMessage = SuccessResponseMessage<unknown>;\n\nexport type UnknownErrorResponseMessage = ErrorResponseMessage<unknown>;\n\nexport type UnknownResponseMessage =\n\t| UnknownSuccessResponseMessage\n\t| UnknownErrorResponseMessage;\n\nexport type UnknownMessage = UnknownRequestMessage | UnknownResponseMessage;\n\n// Transactions\nexport type Transaction<\n\tTRequest extends UnknownRequestMessage,\n\tTResponse extends UnknownResponseMessage = ResponseMessage<void>,\n> = {\n\trequest: TRequest;\n\tresponse: TResponse;\n};\n\nexport type TransactionMethod<\n\tTTransaction extends Transaction<\n\t\tUnknownRequestMessage,\n\t\tUnknownResponseMessage\n\t>,\n> = (\n\tdata: TTransaction[\"request\"][\"data\"],\n) => Promise<ExtractSuccessResponseMessage<TTransaction[\"response\"]>>;\n\nexport type TransactionHandler<\n\tTTransaction extends Transaction<\n\t\tUnknownRequestMessage,\n\t\tUnknownResponseMessage\n\t>,\n> = (\n\trequest: TTransaction[\"request\"],\n\tresponse: {\n\t\tsuccess: (\n\t\t\tdata: ExtractSuccessResponseMessage<TTransaction[\"response\"]>[\"data\"],\n\t\t\tstatus?: number,\n\t\t) => ExtractSuccessResponseMessage<TTransaction[\"response\"]>;\n\t\terror: (\n\t\t\terror: ExtractErrorResponseMessage<TTransaction[\"response\"]>[\"error\"],\n\t\t\tstatus?: number,\n\t\t) => ExtractErrorResponseMessage<TTransaction[\"response\"]>;\n\t},\n) => Promise<TTransaction[\"response\"]> | TTransaction[\"response\"];\n\nexport type TransactionsMethods<\n\tTTransactions extends Record<string, UnknownTransaction>,\n> = {\n\t[Key in keyof TTransactions]: TransactionMethod<TTransactions[Key]>;\n};\n\nexport type TransactionsHandlers<\n\tTTransactions extends Record<string, UnknownTransaction>,\n> = {\n\t[Key in keyof TTransactions]: TransactionHandler<TTransactions[Key]>;\n};\n\n// Unknown transactions\nexport type UnknownTransaction = Transaction<\n\tUnknownRequestMessage,\n\tUnknownResponseMessage\n>;\n\nexport type UnknownTransactionMethod = TransactionMethod<UnknownTransaction>;\n\nexport type UnknownTransactionHandler = TransactionHandler<UnknownTransaction>;\n\n// Emitter\nexport enum InternalEmitterRequestType {\n\tConnect = \"connect\",\n}\n\nexport type InternalEmitterTransactions<\n\tTReceiverOptions extends Record<string, unknown> = Record<string, unknown>,\n> = {\n\t[InternalEmitterRequestType.Connect]: Transaction<\n\t\tRequestMessage<\n\t\t\tInternalEmitterRequestType.Connect,\n\t\t\t| Partial<\n\t\t\t\t\tOmit<TReceiverOptions, \"debug\" | \"requestIDPrefix\" | \"readyTimeout\">\n\t\t\t  >\n\t\t\t| undefined\n\t\t>\n\t>;\n};\n\n// Receiver\nexport enum InternalReceiverRequestType {\n\tReady = \"ready\",\n}\n\nexport type InternalReceiverTransactions = {\n\t[InternalReceiverRequestType.Ready]: Transaction<\n\t\tRequestMessage<InternalReceiverRequestType.Ready>\n\t>;\n};\n"],"names":["InternalEmitterRequestType","InternalReceiverRequestType"],"mappings":";;;;AA8GY,IAAA;AAAA,CAAZ,SAAYA,2BAAAA,EAA0B;IACrCA,2BAAAA,CAAA,SAAA,CAAA,GAAA;AACD,CAAA,EAFY,8BAAA,CAAA,6BAEX,CAAA,CAAA,CAAA;AAiBW,IAAA;AAAA,CAAZ,SAAYC,4BAAAA,EAA2B;IACtCA,4BAAAA,CAAA,OAAA,CAAA,GAAA;AACD,CAAA,EAFY,+BAAA,CAAA,8BAEX,CAAA,CAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"file":"errors.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/channel/errors.ts"],"sourcesContent":["import { UnknownErrorResponseMessage } from \".\";\n\nimport { UnknownRequestMessage } from \"./types\";\n\nexport class ResponseError<\n\tTErrorResponse extends UnknownErrorResponseMessage,\n> extends Error {\n\tpublic response: TErrorResponse;\n\n\tconstructor(errorResponse: TErrorResponse) {\n\t\tsuper(errorResponse.msg);\n\n\t\tthis.response = errorResponse;\n\t}\n}\n\nexport class ConnectionTimeoutError extends Error {\n\tconstructor() {\n\t\tsuper(\"Connection timed out\");\n\t}\n}\nexport class TooManyConcurrentRequestsError extends Error {\n\tpublic request: UnknownRequestMessage;\n\n\tconstructor(request: UnknownRequestMessage) {\n\t\tsuper(`Too many concurrent requests`);\n\n\t\tthis.request = request;\n\t}\n}\nexport class RequestTimeoutError<\n\tTRequest extends UnknownRequestMessage,\n> extends Error {\n\tpublic request: UnknownRequestMessage;\n\n\tconstructor(request: TRequest) {\n\t\tsuper(`Request \\`${request.requestID}\\` timed out`);\n\n\t\tthis.request = request;\n\t}\n}\n\nexport class NotReadyError extends Error {}\nexport class PortNotSetError extends Error {\n\tconstructor() {\n\t\tsuper(\"Port is not set\");\n\t}\n}\nexport class ChannelNotSetError extends Error {\n\tconstructor() {\n\t\tsuper(\"Channel is not set\");\n\t}\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAIM,MAAO,sBAEH,MAAK;IAGd,YAAY,aAAA,CAA6B;QACxC,KAAA,CAAM,cAAc,GAAG;QAHjB,cAAA,IAAA,EAAA;QAKN,IAAA,CAAK,QAAA,GAAW;IACjB;AACA;AAEK,MAAO,+BAA+B,MAAK;IAChD,aAAA;QACC,KAAA,CAAM,sBAAsB;IAC7B;AACA;AACK,MAAO,uCAAuC,MAAK;IAGxD,YAAY,OAAA,CAA8B;QACzC,KAAA,CAAM,CAAA,4BAAA,CAA8B;QAH9B,cAAA,IAAA,EAAA;QAKN,IAAA,CAAK,OAAA,GAAU;IAChB;AACA;AACK,MAAO,4BAEH,MAAK;IAGd,YAAY,OAAA,CAAiB;QACtB,KAAA,CAAA,CAAA,UAAA,EAAa,QAAQ,SAAA,CAAA,YAAA,CAAuB;QAH5C,cAAA,IAAA,EAAA;QAKN,IAAA,CAAK,OAAA,GAAU;IAChB;AACA;AAEK,MAAO,sBAAsB,MAAK;AAAG;AACrC,MAAO,wBAAwB,MAAK;IACzC,aAAA;QACC,KAAA,CAAM,iBAAiB;IACxB;AACA;AACK,MAAO,2BAA2B,MAAK;IAC5C,aAAA;QACC,KAAA,CAAM,oBAAoB;IAC3B;AACA","ignoreList":[0]}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"file":"messages.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/channel/messages.ts"],"sourcesContent":["import statuses from \"statuses\";\n\nimport {\n\tErrorResponseMessage,\n\tRequestMessage,\n\tSuccessResponseMessage,\n\tUnknownErrorResponseMessage,\n\tUnknownMessage,\n\tUnknownRequestMessage,\n\tUnknownResponseMessage,\n\tUnknownSuccessResponseMessage,\n} from \"./types\";\n\nlet requestID = 0;\n\nexport const createRequestMessage = <\n\tTType extends string = string,\n\tTData = undefined,\n>(\n\ttype: TType,\n\tdata: TData,\n\tprefix = \"\",\n): RequestMessage<TType, TData> => {\n\treturn {\n\t\trequestID: `${prefix}${requestID++}`,\n\t\ttype,\n\t\tdata,\n\t};\n};\n\nexport const createSuccessResponseMessage = <TData = undefined>(\n\trequestID: string,\n\tdata: TData,\n\tstatus: keyof typeof statuses.message = 200,\n): SuccessResponseMessage<TData> => {\n\tif (status >= 400) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid success status code, expected status to be within \\`[100;400[\\`, got \\`${status}\\``,\n\t\t);\n\t}\n\n\treturn {\n\t\trequestID,\n\t\tstatus,\n\t\tmsg: statuses.message[status]?.replace(/\\.$/, \"\").toLowerCase() ?? \"\",\n\t\tdata,\n\t};\n};\n\nexport const createErrorResponseMessage = <TError = undefined>(\n\trequestID: string,\n\terror: TError,\n\tstatus: keyof typeof statuses.message = 400,\n): ErrorResponseMessage<TError> => {\n\tif (status < 400) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid error status code, expected status to be within \\`[500;600[\\`, got \\`${status}\\``,\n\t\t);\n\t}\n\n\treturn {\n\t\trequestID,\n\t\tstatus,\n\t\tmsg: statuses.message[status]?.replace(/\\.$/, \"\").toLowerCase() ?? \"\",\n\t\terror,\n\t};\n};\n\nexport const validateMessage = (message: unknown): UnknownMessage => {\n\tif (typeof message !== \"object\" || message === null) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid message received, expected message to be of type \\`object\\`, got \\`${typeof message}\\``,\n\t\t);\n\t} else if (\n\t\t!Object.keys(message).every((key) =>\n\t\t\t[\"requestID\", \"type\", \"data\", \"status\", \"msg\", \"error\"].includes(key),\n\t\t)\n\t) {\n\t\tthrow new TypeError(`Invalid message received: ${JSON.stringify(message)}`);\n\t} else if (\n\t\ttypeof (message as Record<string, unknown>).requestID !== \"string\"\n\t) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid message received, expected \\`message.requestID\\` to be of type \\`string\\`, got \\`${typeof (\n\t\t\t\tmessage as Record<string, unknown>\n\t\t\t).id}\\``,\n\t\t);\n\t}\n\n\treturn message as UnknownMessage;\n};\n\nexport const isRequestMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownRequestMessage => {\n\treturn \"type\" in message;\n};\n\nexport const isResponseMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownResponseMessage => {\n\treturn !(\"type\" in message);\n};\n\nexport const isSuccessResponseMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownSuccessResponseMessage => {\n\treturn isResponseMessage(message) && !(\"error\" in message);\n};\n\nexport const isErrorResponseMessage = (\n\tmessage: UnknownMessage,\n): message is UnknownErrorResponseMessage => {\n\treturn isResponseMessage(message) && !(\"data\" in message);\n};\n"],"names":["requestID"],"mappings":";;;;;;;;;;;;AAaA,IAAI,YAAY;AAET,MAAM,uBAAuB,CAInC,MACA,MACA,SAAS,EAAA,KACwB;IAC1B,OAAA;QACN,WAAW,GAAG,SAAS,aAAA;QACvB;QACA;IAAA;AAEF;AAEO,MAAM,+BAA+B,CAC3CA,YACA,MACA,SAAwC,GAAA,KACN;;IAClC,IAAI,UAAU,KAAK;QACZ,MAAA,IAAI,UACT,CAAA,+EAAA,EAAkF,OAAA,EAAA,CAAU;IAE7F;IAEM,OAAA;QACN,WAAAA;QACA;QACA,KAAA,CAAA,CAAK,KAAA,oIAAA,CAAA,UAAA,CAAS,OAAA,CAAQ,MAAM,CAAA,KAAvB,OAAA,KAAA,IAAA,GAA0B,OAAA,CAAQ,OAAO,IAAI,WAAA,EAAA,KAAiB;QACnE;IAAA;AAEF;AAEO,MAAM,6BAA6B,CACzCA,YACA,OACA,SAAwC,GAAA,KACP;;IACjC,IAAI,SAAS,KAAK;QACX,MAAA,IAAI,UACT,CAAA,6EAAA,EAAgF,OAAA,EAAA,CAAU;IAE3F;IAEM,OAAA;QACN,WAAAA;QACA;QACA,KAAA,CAAA,CAAK,KAAA,oIAAA,CAAA,UAAA,CAAS,OAAA,CAAQ,MAAM,CAAA,KAAvB,OAAA,KAAA,IAAA,GAA0B,OAAA,CAAQ,OAAO,IAAI,WAAA,EAAA,KAAiB;QACnE;IAAA;AAEF;AAEa,MAAA,kBAAkB,CAAC,YAAoC;IACnE,IAAI,OAAO,YAAY,YAAY,YAAY,MAAM;QACpD,MAAM,IAAI,UACT,CAAA,2EAAA,EAA8E,OAAO,QAAA,EAAA,CAAW;IAAA,OAAA,IAGjG,CAAC,OAAO,IAAA,CAAK,OAAO,EAAE,KAAA,CAAM,CAAC,MAC5B;YAAC;YAAa;YAAQ;YAAQ;YAAU;YAAO,OAAO;SAAA,CAAE,QAAA,CAAS,GAAG,CAAC,GAErE;QACD,MAAM,IAAI,UAAU,CAAA,0BAAA,EAA6B,KAAK,SAAA,CAAU,OAAO,GAAG;IAE1E,OAAA,IAAA,OAAQ,QAAoC,SAAA,KAAc,UACzD;QACD,MAAM,IAAI,UACT,CAAA,yFAAA,EAA4F,OAC3F,QACC,EAAA,CAAA,EAAA,CAAM;IAET;IAEM,OAAA;AACR;AAEa,MAAA,mBAAmB,CAC/B,YACqC;IACrC,OAAO,UAAU;AAClB;AAEa,MAAA,oBAAoB,CAChC,YACsC;IACtC,OAAO,CAAA,CAAE,UAAU,OAAA;AACpB;AAEa,MAAA,2BAA2B,CACvC,YAC6C;IAC7C,OAAO,kBAAkB,OAAO,KAAK,CAAA,CAAE,WAAW,OAAA;AACnD;AAEa,MAAA,yBAAyB,CACrC,YAC2C;IAC3C,OAAO,kBAAkB,OAAO,KAAK,CAAA,CAAE,UAAU,OAAA;AAClD","ignoreList":[0]}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"file":"ChannelNetwork.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/channel/ChannelNetwork.ts"],"sourcesContent":["import {\n\tExtractErrorResponseMessage,\n\tExtractSuccessResponseMessage,\n\tRequestMessage,\n\tTransactionsHandlers,\n\tUnknownRequestMessage,\n\tUnknownResponseMessage,\n\tUnknownTransaction,\n} from \"./types\";\n\nimport {\n\tPortNotSetError,\n\tRequestTimeoutError,\n\tResponseError,\n\tTooManyConcurrentRequestsError,\n} from \"./errors\";\n\nimport {\n\tcreateErrorResponseMessage,\n\tcreateRequestMessage,\n\tcreateSuccessResponseMessage,\n\tisRequestMessage,\n\tisSuccessResponseMessage,\n\tvalidateMessage,\n} from \"./messages\";\n\nexport type PostRequestOptions = {\n\ttimeout?: number;\n};\n\nexport type ChannelNetworkOptions = {\n\tdebug: boolean;\n\tmaximumRequestConcurrency: number;\n\tdefaultTimeout: number;\n\trequestIDPrefix: string;\n};\n\nexport const channelNetworkDefaultOptions: ChannelNetworkOptions = {\n\tdebug: false,\n\tmaximumRequestConcurrency: 20,\n\tdefaultTimeout: 5000,\n\trequestIDPrefix: \"channel-\",\n};\n\nexport abstract class ChannelNetwork<\n\tTPartnerTransactions extends Record<string, UnknownTransaction> = Record<\n\t\tstring,\n\t\tnever\n\t>,\n\tTOptions extends Record<string, unknown> = Record<string, unknown>,\n> {\n\tpublic requestHandlers: TransactionsHandlers<TPartnerTransactions>;\n\tpublic options: ChannelNetworkOptions & TOptions;\n\n\tprivate _port: MessagePort | null = null;\n\tprotected get port(): MessagePort {\n\t\tif (!this._port) {\n\t\t\tthrow new PortNotSetError();\n\t\t}\n\n\t\treturn this._port;\n\t}\n\tprotected set port(port: MessagePort | null) {\n\t\t// Destroy old port\n\t\tif (this._port) {\n\t\t\tthis._port.onmessage = null;\n\t\t}\n\n\t\tthis._port = port;\n\t\tif (this._port) {\n\t\t\tthis._port.onmessage = this.onMessage.bind(this);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tprivate _pendingRequests: Map<string, (response: any) => void> = new Map();\n\n\tconstructor(\n\t\trequestHandlers: TransactionsHandlers<TPartnerTransactions>,\n\t\toptions: Partial<ChannelNetworkOptions> & TOptions,\n\t) {\n\t\tthis.requestHandlers = requestHandlers;\n\t\tthis.options = { ...channelNetworkDefaultOptions, ...options };\n\t}\n\n\tpublic createRequestMessage<TType extends string = string, TData = undefined>(\n\t\ttype: TType,\n\t\tdata: TData,\n\t): RequestMessage<TType, TData> {\n\t\treturn createRequestMessage(type, data, this.options.requestIDPrefix);\n\t}\n\n\tprotected async onMessage(event: MessageEvent<unknown>): Promise<void> {\n\t\tif (this.options.debug) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.debug(event.data);\n\t\t}\n\n\t\ttry {\n\t\t\tconst message = validateMessage(event.data);\n\n\t\t\tif (isRequestMessage(message)) {\n\t\t\t\tif (!this.requestHandlers[message.type]) {\n\t\t\t\t\tthis.postResponse(\n\t\t\t\t\t\tcreateErrorResponseMessage(message.requestID, undefined, 501),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// TODO: Figure out why type cannot be inferred on its own anymore\n\t\t\t\t\t\tconst response = await this.requestHandlers[message.type](message, {\n\t\t\t\t\t\t\tsuccess: createSuccessResponseMessage.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tmessage.requestID,\n\t\t\t\t\t\t\t) as Parameters<\n\t\t\t\t\t\t\t\t(typeof this.requestHandlers)[string]\n\t\t\t\t\t\t\t>[1][\"success\"],\n\t\t\t\t\t\t\terror: createErrorResponseMessage.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\tmessage.requestID,\n\t\t\t\t\t\t\t) as Parameters<\n\t\t\t\t\t\t\t\t(typeof this.requestHandlers)[string]\n\t\t\t\t\t\t\t>[1][\"error\"],\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.postResponse(response);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.postResponse(\n\t\t\t\t\t\t\tcreateErrorResponseMessage(message.requestID, error, 500),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this._pendingRequests.has(message.requestID)) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`Unknown request ID received in response: ${JSON.stringify(\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t)}`,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// Pending requests are checked in previous statement\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tthis._pendingRequests.get(message.requestID)!(message);\n\t\t\t\t\tthis._pendingRequests.delete(message.requestID);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof TypeError) {\n\t\t\t\tconsole.warn(error.message);\n\t\t\t} else {\n\t\t\t\t// Should not be possible, but who knows :shrug:\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected postRequest<\n\t\tTRequest extends UnknownRequestMessage,\n\t\tTResponse extends UnknownResponseMessage,\n\t>(\n\t\trequest: TRequest,\n\t\tpostMessage = (request: TRequest): void => this.port.postMessage(request),\n\t\toptions: PostRequestOptions = {},\n\t): Promise<ExtractSuccessResponseMessage<TResponse>> {\n\t\tif (this.options.debug) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.debug(request);\n\t\t}\n\n\t\tif (this._pendingRequests.size >= this.options.maximumRequestConcurrency) {\n\t\t\tthrow new TooManyConcurrentRequestsError(request);\n\t\t}\n\n\t\treturn new Promise<ExtractSuccessResponseMessage<TResponse>>(\n\t\t\t(resolve, reject) => {\n\t\t\t\tconst requestTimeout = setTimeout(() => {\n\t\t\t\t\tif (this._pendingRequests.has(request.requestID)) {\n\t\t\t\t\t\tthis._pendingRequests.delete(request.requestID);\n\t\t\t\t\t}\n\t\t\t\t\treject(new RequestTimeoutError(request));\n\t\t\t\t}, options.timeout || this.options.defaultTimeout);\n\n\t\t\t\tthis._pendingRequests.set(\n\t\t\t\t\trequest.requestID,\n\t\t\t\t\t(response: TResponse): void => {\n\t\t\t\t\t\tclearTimeout(requestTimeout);\n\n\t\t\t\t\t\tisSuccessResponseMessage(response)\n\t\t\t\t\t\t\t? resolve(response as ExtractSuccessResponseMessage<TResponse>)\n\t\t\t\t\t\t\t: reject(\n\t\t\t\t\t\t\t\t\tnew ResponseError(\n\t\t\t\t\t\t\t\t\t\tresponse as ExtractErrorResponseMessage<TResponse>,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t  );\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tpostMessage(request);\n\t\t\t},\n\t\t);\n\t}\n\n\tprotected postResponse<TResponse extends UnknownResponseMessage>(\n\t\tresponse: TResponse,\n\t\tpostMessage = (response: TResponse): void =>\n\t\t\tthis.port.postMessage(response),\n\t): TResponse {\n\t\tif (this.options.debug) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.debug(response);\n\t\t}\n\n\t\tpostMessage(response);\n\n\t\treturn response;\n\t}\n}\n"],"names":["request","response"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"file":"ChannelReceiver.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/channel/ChannelReceiver.ts"],"sourcesContent":["import {\n\tExtractSuccessResponseMessage,\n\tInternalEmitterRequestType,\n\tInternalEmitterTransactions,\n\tInternalReceiverRequestType,\n\tRequestMessage,\n\tResponseMessage,\n\tSuccessResponseMessage,\n\tTransactionsHandlers,\n\tUnknownRequestMessage,\n\tUnknownResponseMessage,\n\tUnknownTransaction,\n} from \"./types\";\n\nimport { NotReadyError } from \"./errors\";\n\nimport {\n\tChannelNetwork,\n\tChannelNetworkOptions,\n\tPostRequestOptions,\n} from \"./ChannelNetwork\";\nimport {\n\tcreateErrorResponseMessage,\n\tcreateSuccessResponseMessage,\n\tisRequestMessage,\n\tvalidateMessage,\n} from \"./messages\";\n\nexport type ChannelReceiverOptions = {\n\treadyTimeout: number;\n};\n\nexport const channelReceiverDefaultOptions: ChannelReceiverOptions &\n\tPartial<ChannelNetworkOptions> = {\n\treadyTimeout: 20000,\n\trequestIDPrefix: \"receiver-\",\n};\n\nexport type AllChannelReceiverOptions = ChannelReceiverOptions &\n\tChannelNetworkOptions;\n\nexport abstract class ChannelReceiver<\n\tTEmitterTransactions extends Record<string, UnknownTransaction> = Record<\n\t\tstring,\n\t\tnever\n\t>,\n\tTOptions extends Record<string, unknown> = Record<string, unknown>,\n> extends ChannelNetwork<\n\tTEmitterTransactions,\n\tChannelReceiverOptions & TOptions\n> {\n\tprivate _ready = false;\n\n\tconstructor(\n\t\trequestHandlers: TransactionsHandlers<TEmitterTransactions>,\n\t\toptions: Partial<AllChannelReceiverOptions> & TOptions,\n\t) {\n\t\tsuper(requestHandlers, { ...channelReceiverDefaultOptions, ...options });\n\n\t\twindow.addEventListener(\"message\", (event) => {\n\t\t\tthis._onPublicMessage(event);\n\t\t});\n\t}\n\n\t/**\n\t * Tells the emitter that receiver is ready\n\t */\n\tpublic async ready(): Promise<SuccessResponseMessage> {\n\t\tif (window.parent === window) {\n\t\t\tthrow new Error(\"Receiver is currently not embedded as an iframe\");\n\t\t}\n\n\t\tthis._ready = false;\n\n\t\tconst request = this.createRequestMessage(\n\t\t\tInternalReceiverRequestType.Ready,\n\t\t\tundefined,\n\t\t);\n\n\t\tconst response = await this.postRequest<\n\t\t\tRequestMessage<InternalReceiverRequestType.Ready>,\n\t\t\tResponseMessage\n\t\t>(\n\t\t\trequest,\n\t\t\t(request) => {\n\t\t\t\twindow.parent.postMessage(request, \"*\");\n\t\t\t},\n\t\t\t{\n\t\t\t\ttimeout: this.options.readyTimeout,\n\t\t\t},\n\t\t);\n\n\t\tthis._ready = true;\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Handles public messages\n\t */\n\tprivate _onPublicMessage(event: MessageEvent<unknown>): void {\n\t\ttry {\n\t\t\tconst message = validateMessage(event.data);\n\n\t\t\tif (isRequestMessage(message)) {\n\t\t\t\tif (this.options.debug) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.debug(event.data);\n\t\t\t\t}\n\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\tcase InternalEmitterRequestType.Connect:\n\t\t\t\t\t\t// Set port\n\t\t\t\t\t\tthis.port = event.ports[0];\n\n\t\t\t\t\t\t// Update options\n\t\t\t\t\t\tconst { data } =\n\t\t\t\t\t\t\tmessage as InternalEmitterTransactions[\"connect\"][\"request\"];\n\t\t\t\t\t\tthis.options = {\n\t\t\t\t\t\t\t...this.options,\n\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t// Ensure core options remain the same\n\t\t\t\t\t\t\tdebug: this.options.debug,\n\t\t\t\t\t\t\trequestIDPrefix: this.options.requestIDPrefix,\n\t\t\t\t\t\t\treadyTimeout: this.options.readyTimeout,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst response = createSuccessResponseMessage(\n\t\t\t\t\t\t\tmessage.requestID,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.postResponse(response);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.postResponse(\n\t\t\t\t\t\t\tcreateErrorResponseMessage(message.requestID, undefined),\n\t\t\t\t\t\t\t(response) => {\n\t\t\t\t\t\t\t\t(event.source as WindowProxy).postMessage(\n\t\t\t\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\t\t\tevent.origin,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Forward response messages to default message handler if necessary\n\t\t\t\tif (!this._ready) {\n\t\t\t\t\tthis.onMessage(event);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof TypeError) {\n\t\t\t\t// Ignore unknown messages\n\t\t\t} else {\n\t\t\t\t// Should not be possible, but who knows :shrug:\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected postFormattedRequest<\n\t\tTRequest extends UnknownRequestMessage,\n\t\tTResponse extends UnknownResponseMessage,\n\t>(\n\t\ttype: TRequest[\"type\"],\n\t\tdata?: TRequest[\"data\"],\n\t\toptions: PostRequestOptions = {},\n\t): Promise<ExtractSuccessResponseMessage<TResponse>> {\n\t\tif (!this._ready) {\n\t\t\tthrow new NotReadyError(\n\t\t\t\t\"Receiver is not ready, use `ChannelReceiver.ready()` first\",\n\t\t\t);\n\t\t}\n\n\t\treturn this.postRequest(\n\t\t\tthis.createRequestMessage(type, data),\n\t\t\tundefined,\n\t\t\toptions,\n\t\t);\n\t}\n}\n"],"names":["request","response"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAgCO,MAAM,gCACqB;IACjC,cAAc;IACd,iBAAiB;;AAMZ,MAAgB,yMAMZ,iBAAA,CAGT;IAGA,YACC,eAAA,EACA,OAAA,CAAsD;QAEtD,KAAA,CAAM,iBAAiB;YAAE,GAAG,6BAAA;YAA+B,GAAG,OAAA;QAAS,CAAA;QANhE,cAAA,IAAA,EAAA,UAAS;QAQT,OAAA,gBAAA,CAAiB,WAAW,CAAC,UAAS;YAC5C,IAAA,CAAK,gBAAA,CAAiB,KAAK;QAAA,CAC3B;IACF;IAAA;;GAAA,GAKO,MAAM,QAAK;QACb,IAAA,OAAO,MAAA,KAAW,QAAQ;YACvB,MAAA,IAAI,MAAM,iDAAiD;QACjE;QAED,IAAA,CAAK,MAAA,GAAS;QAEd,MAAM,UAAU,IAAA,CAAK,oBAAA,CACpB,sMAAA,CAA4B,KAAA,EAC5B,KAAA,CAAS;QAGV,MAAM,WAAW,MAAM,IAAA,CAAK,WAAA,CAI3B,SACA,CAACA,aAAW;YACJ,OAAA,MAAA,CAAO,WAAA,CAAYA,UAAS,GAAG;QAAA,GAEvC;YACC,SAAS,IAAA,CAAK,OAAA,CAAQ,YAAA;QAAA,CACtB;QAGF,IAAA,CAAK,MAAA,GAAS;QAEP,OAAA;IACR;IAAA;;GAAA,GAKQ,iBAAiB,KAAA,EAA4B;QAChD,IAAA;YACG,MAAA,UAAU,iMAAA,EAAgB,MAAM,IAAI;YAEtC,mLAAA,mBAAA,EAAiB,OAAO,GAAG;gBAC1B,IAAA,IAAA,CAAK,OAAA,CAAQ,KAAA,EAAO;oBAEf,QAAA,KAAA,CAAM,MAAM,IAAI;gBACxB;gBAED,OAAQ,QAAQ,IAAA,EAAM;oBACrB,6KAAK,6BAAA,CAA2B,OAAA;wBAE1B,IAAA,CAAA,IAAA,GAAO,MAAM,KAAA,CAAM,CAAC,CAAA;wBAGnB,MAAA,EAAE,IAAA,CACP,CAAA,GAAA;wBACD,IAAA,CAAK,OAAA,GAAU;4BACd,GAAG,IAAA,CAAK,OAAA;4BACR,GAAG,IAAA;4BAAA,sCAAA;4BAEH,OAAO,IAAA,CAAK,OAAA,CAAQ,KAAA;4BACpB,iBAAiB,IAAA,CAAK,OAAA,CAAQ,eAAA;4BAC9B,cAAc,IAAA,CAAK,OAAA,CAAQ,YAAA;wBAAA;wBAG5B,MAAM,0LAAW,+BAAA,EAChB,QAAQ,SAAA,EACR,KAAA,CAAS;wBAGV,IAAA,CAAK,YAAA,CAAa,QAAQ;wBAC1B;oBAED;wBACC,IAAA,CAAK,YAAA,gLACJ,6BAAA,EAA2B,QAAQ,SAAA,EAAW,KAAA,CAAS,GACvD,CAACC,cAAY;4BACX,MAAM,MAAA,CAAuB,WAAA,CAC7BA,WACA,MAAM,MAAM;wBAAA,CAEb;wBAEF;gBACD;YAAA,OACK;gBAEF,IAAA,CAAC,IAAA,CAAK,MAAA,EAAQ;oBACjB,IAAA,CAAK,SAAA,CAAU,KAAK;gBACpB;YACD;QAAA,EAAA,OACO,OAAA;YACR,IAAI,iBAAiB;iBAEd;gBAEA,MAAA;YACN;QACD;IACF;IAEU,qBAIT,IAAA,EACA,IAAA,EACA,UAA8B,CAAA,CAAA,EAAE;QAE5B,IAAA,CAAC,IAAA,CAAK,MAAA,EAAQ;YACX,MAAA,6KAAI,gBAAA,CACT,4DAA4D;QAE7D;QAEM,OAAA,IAAA,CAAK,WAAA,CACX,IAAA,CAAK,oBAAA,CAAqB,MAAM,IAAI,GACpC,KAAA,GACA,OAAO;IAET;AACA","ignoreList":[0]}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"file":"SimulatorAPI.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/SimulatorAPI.ts"],"sourcesContent":["import {\n\tAPIRequestType,\n\tAPITransactions,\n\tClientRequestType,\n\tClientTransactions,\n} from \"./types\";\n\nimport {\n\tAllChannelReceiverOptions,\n\tChannelReceiver,\n\tTransactionMethod,\n\tTransactionsHandlers,\n\tTransactionsMethods,\n} from \"./channel\";\n\nexport type SimulatorAPIOptions = {\n\tactiveSliceAPI: boolean;\n\tsliceZoneSizeAPI: boolean;\n};\n\nexport const simulatorAPIDefaultOptions: Partial<AllChannelReceiverOptions> &\n\tSimulatorAPIOptions = {\n\trequestIDPrefix: \"api-\",\n\tactiveSliceAPI: false,\n\tsliceZoneSizeAPI: false,\n};\n\nexport class SimulatorAPI\n\textends ChannelReceiver<ClientTransactions, SimulatorAPIOptions>\n\timplements TransactionsMethods<APITransactions>\n{\n\tconstructor(\n\t\trequestHandlers: Omit<\n\t\t\tTransactionsHandlers<ClientTransactions>,\n\t\t\tClientRequestType.Ping\n\t\t> &\n\t\t\tPartial<\n\t\t\t\tPick<TransactionsHandlers<ClientTransactions>, ClientRequestType.Ping>\n\t\t\t>,\n\t\toptions?: Partial<AllChannelReceiverOptions & SimulatorAPIOptions>,\n\t) {\n\t\t// True if `options.debug` is true or `debug=true` is among query parameters\n\t\tconst debug =\n\t\t\toptions?.debug ||\n\t\t\t/[?&]debug=true/i.test(decodeURIComponent(window.location.search));\n\n\t\tsuper(\n\t\t\t{\n\t\t\t\t[ClientRequestType.Ping]: (_req, res) => {\n\t\t\t\t\treturn res.success(\"pong\");\n\t\t\t\t},\n\t\t\t\t...requestHandlers,\n\t\t\t},\n\t\t\t{\n\t\t\t\t...simulatorAPIDefaultOptions,\n\t\t\t\t...options,\n\t\t\t\tdebug,\n\t\t\t},\n\t\t);\n\n\t\t// Append API to window object\n\t\tif (debug) {\n\t\t\twindow.prismic ||= {};\n\t\t\twindow.prismic.sliceSimulator ||= {};\n\t\t\twindow.prismic.sliceSimulator.api ||= [];\n\t\t\twindow.prismic.sliceSimulator.api.push(this);\n\t\t}\n\t}\n\n\t[APIRequestType.SetActiveSlice]: TransactionMethod<\n\t\tAPITransactions[APIRequestType.SetActiveSlice]\n\t> = async (data) => {\n\t\treturn await this.postFormattedRequest(APIRequestType.SetActiveSlice, data);\n\t};\n\n\t[APIRequestType.SetSliceZoneSize]: TransactionMethod<\n\t\tAPITransactions[APIRequestType.SetSliceZoneSize]\n\t> = async (data) => {\n\t\treturn await this.postFormattedRequest(\n\t\t\tAPIRequestType.SetSliceZoneSize,\n\t\t\tdata,\n\t\t);\n\t};\n}\n"],"names":["_a","_b"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAoBO,MAAM,6BACU;IACtB,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;;AAGb,MAAO,uMACJ,kBAAA,CAAwD;IAGhE,YACC,eAAA,EAOA,OAAA,CAAkE;;QAG5D,MAAA,QAAA,CACL,WAAA,OAAA,KAAA,IAAA,QAAS,KAAA,KACT,kBAAkB,IAAA,CAAK,mBAAmB,OAAO,QAAA,CAAS,MAAM,CAAC;QAGjE,KAAA,CAAA;YACC,6JAAC,qBAAA,CAAkB,IAAI,CAAA,EAAG,CAAC,MAAM,QAAO;gBAChC,OAAA,IAAI,OAAA,CAAQ,MAAM;YAC1B;YACA,GAAG,eAAA;QAAA,GAEJ;YACC,GAAG,0BAAA;YACH,GAAG,OAAA;YACH;QAAA,CACA;QAYH,cAAA,IAAA,EAAC,IAEG,OAAO,SAAQ;YAClB,OAAO,MAAM,IAAA,CAAK,oBAAA,8JAAqB,iBAAA,CAAe,cAAA,EAAgB,IAAI;QAAA;QAG3E,cAAA,IAAA,EAAC,IAEG,OAAO,SAAQ;YAClB,OAAO,MAAM,IAAA,CAAK,oBAAA,8JACjB,iBAAA,CAAe,gBAAA,EACf,IAAI;QAAA;QAnBL,IAAI,OAAO;YACV,OAAO,OAAA,IAAA,CAAP,OAAO,OAAA,GAAY,CAAA,CAAA;YACZ,CAAAA,MAAA,OAAA,OAAA,EAAQ,cAAA,IAAA,CAARA,IAAQ,cAAA,GAAmB,CAAA,CAAA;YAC3B,CAAAC,MAAA,OAAA,OAAA,CAAQ,cAAA,EAAe,GAAA,IAAA,CAAvBA,IAAuB,GAAA,GAAQ,CAAA,CAAA;YACtC,OAAO,OAAA,CAAQ,cAAA,CAAe,GAAA,CAAI,IAAA,CAAK,IAAI;QAC3C;IACF;AAgBA;AAdC,KAAA,4JAAA,CAAA,iBAAA,CAAe,cAAA,EAMf,KAAA,4JAAA,CAAA,iBAAA,CAAe,gBAAA","ignoreList":[0]}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"file":"EventEmitter.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/lib/EventEmitter.ts"],"sourcesContent":["export type Listener<T> = (event: T) => void;\n\nexport type EventMap = {\n\t[K in string]: unknown;\n};\n\nexport abstract class EventEmitter<TEventMap = EventMap> {\n\tprivate _listeners: {\n\t\t[K in keyof TEventMap]?: [Listener<TEventMap[K]>, string | null][];\n\t} = {};\n\n\ton<TEventType extends keyof TEventMap>(\n\t\tevent: TEventType,\n\t\tlistener: Listener<TEventMap[TEventType]>,\n\t\tkey: string | null = null,\n\t): void {\n\t\tthis._listeners[event] = [\n\t\t\t...(this._listeners[event] ?? []),\n\t\t\t[listener, key],\n\t\t];\n\t}\n\n\toff<TEventType extends keyof TEventMap>(\n\t\tevent: TEventType,\n\t\tlistenerOrKey: Listener<TEventMap[TEventType]> | string,\n\t): void {\n\t\tthis._listeners[event] = (this._listeners[event] ?? []).filter(\n\t\t\t([listener, key]) =>\n\t\t\t\ttypeof listenerOrKey === \"function\"\n\t\t\t\t\t? listener !== listenerOrKey\n\t\t\t\t\t: key !== listenerOrKey,\n\t\t);\n\t}\n\n\temit<TEventType extends keyof TEventMap>(\n\t\tevent: TEventType,\n\t\tpayload: TEventMap[TEventType],\n\t): void {\n\t\t(this._listeners[event] ?? []).forEach((listener) => listener[0](payload));\n\t}\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;MAMsB,aAAY;IAAA,aAAA;QACzB,cAAA,IAAA,EAAA,cAEJ,CAAA;IAAA;IAEJ,GACC,KAAA,EACA,QAAA,EACA,MAAqB,IAAA,EAAI;QAEpB,IAAA,CAAA,UAAA,CAAW,KAAK,CAAA,GAAI;eACpB,IAAA,CAAK,UAAA,CAAW,KAAK,CAAA,IAAK,CAAA,CAAA;YAC9B;gBAAC;gBAAU,GAAG;aAAA;SAAA;IAEhB;IAEA,IACC,KAAA,EACA,aAAA,EAAuD;QAElD,IAAA,CAAA,UAAA,CAAW,KAAK,CAAA,GAAA,CAAK,IAAA,CAAK,UAAA,CAAW,KAAK,CAAA,IAAK,CAAA,CAAA,EAAI,MAAA,CACvD,CAAC,CAAC,UAAU,GAAG,CAAA,GACd,OAAO,kBAAkB,aACtB,aAAa,gBACb,QAAQ,aAAa;IAE3B;IAEA,KACC,KAAA,EACA,OAAA,EAA8B;QAE9B,CAAC,IAAA,CAAK,UAAA,CAAW,KAAK,CAAA,IAAK,CAAA,CAAA,EAAI,OAAA,CAAQ,CAAC,WAAa,QAAA,CAAS,CAAC,CAAA,CAAE,OAAO,CAAC;IAC1E;AACA","ignoreList":[0]}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"file":"domHelpers.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/kit/domHelpers.ts"],"sourcesContent":["export const simulatorClass = \"slice-simulator\";\nexport const simulatorRootClass = \"slice-simulator--root\";\n\nexport const getSimulatorDOM = (): Element | null => {\n\treturn document.querySelector(`.${simulatorClass}`);\n};\n\nexport const getSimulatorRootDOM = (): Element | null => {\n\treturn document.querySelector(`.${simulatorRootClass}`);\n};\n\nexport const getSliceZoneDOM = (\n\texpectedNumberOfChildren: number,\n): Element | null => {\n\t// If SliceZone has been tagged (#5)\n\tlet node = document.querySelector(`.${simulatorClass} [data-slice-zone]`);\n\tif (node) {\n\t\tif (node.children.length !== expectedNumberOfChildren) {\n\t\t\tconsole.warn(\n\t\t\t\t`Flagged SliceZone has an unexpected number of children, found ${node.children.length} but expected ${expectedNumberOfChildren}. This might lead to unexpected behaviors. Are you sure you tagged the right element?`,\n\t\t\t);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t// Start searching\n\tnode = document.querySelector(`.${simulatorClass} .${simulatorRootClass}`);\n\n\tif (!node) {\n\t\treturn null;\n\t}\n\n\tconst searchDepth = 5;\n\tfor (let i = 0; i < searchDepth; i++) {\n\t\tif (node.children.length === expectedNumberOfChildren) {\n\t\t\t// Return the first node that matches the expected number of children\n\t\t\treturn node;\n\t\t} else if (node.children.length) {\n\t\t\t// Continue searching if current node has children\n\t\t\tnode = node.children[0];\n\t\t} else {\n\t\t\t// Stop searching if current node has no children\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Failed to find SliceZone\n\treturn null;\n};\n\nexport const getActiveSliceDOM = (\n\t$sliceZone: Element,\n\tmouse: { x: number; y: number },\n): Element | null => {\n\t// Raycast cursor position on DOM\n\tconst raycast = document.elementsFromPoint(mouse.x, mouse.y).reverse();\n\n\t// Find SliceZone in raycast\n\tconst sliceZoneIndex = raycast.indexOf($sliceZone);\n\n\t// SliceZone is not part of raycast\n\tif (sliceZoneIndex === -1) {\n\t\treturn null;\n\t}\n\n\tconst $slice = raycast[sliceZoneIndex + 1];\n\n\t// Slice is not part of raycast\n\tif (!$slice) {\n\t\treturn null;\n\t}\n\n\treturn $slice;\n};\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,iBAAiB;AACvB,MAAM,qBAAqB;AAE3B,MAAM,kBAAkB,MAAqB;IAC5C,OAAA,SAAS,aAAA,CAAc,CAAA,CAAA,EAAI,gBAAgB;AACnD;AAEO,MAAM,sBAAsB,MAAqB;IAChD,OAAA,SAAS,aAAA,CAAc,CAAA,CAAA,EAAI,oBAAoB;AACvD;AAEa,MAAA,kBAAkB,CAC9B,6BACmB;IAEnB,IAAI,OAAO,SAAS,aAAA,CAAc,CAAA,CAAA,EAAI,eAAA,kBAAA,CAAkC;IACxE,IAAI,MAAM;QACL,IAAA,KAAK,QAAA,CAAS,MAAA,KAAW,0BAA0B;YACtD,QAAQ,IAAA,CACP,CAAA,8DAAA,EAAiE,KAAK,QAAA,CAAS,MAAA,CAAA,cAAA,EAAuB,yBAAA,qFAAA,CAA+G;QAEtN;QAEM,OAAA;IACP;IAGD,OAAO,SAAS,aAAA,CAAc,CAAA,CAAA,EAAI,eAAA,EAAA,EAAmB,oBAAoB;IAEzE,IAAI,CAAC,MAAM;QACH,OAAA;IACP;IAED,MAAM,cAAc;IACpB,IAAA,IAAS,IAAI,GAAG,IAAI,aAAa,IAAK;QACjC,IAAA,KAAK,QAAA,CAAS,MAAA,KAAW,0BAA0B;YAE/C,OAAA;QAAA,OAAA,IACG,KAAK,QAAA,CAAS,MAAA,EAAQ;YAEzB,OAAA,KAAK,QAAA,CAAS,CAAC,CAAA;QAAA,OAChB;YAEN;QACA;IACD;IAGM,OAAA;AACR;AAEa,MAAA,oBAAoB,CAChC,YACA,UACmB;IAEb,MAAA,UAAU,SAAS,iBAAA,CAAkB,MAAM,CAAA,EAAG,MAAM,CAAC,EAAE,OAAA;IAGvD,MAAA,iBAAiB,QAAQ,OAAA,CAAQ,UAAU;IAGjD,IAAI,mBAAmB,CAAA,GAAI;QACnB,OAAA;IACP;IAEK,MAAA,SAAS,OAAA,CAAQ,iBAAiB,CAAC,CAAA;IAGzC,IAAI,CAAC,QAAQ;QACL,OAAA;IACP;IAEM,OAAA;AACR","ignoreList":[0]}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"file":"getDefault.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/kit/getDefault.ts"],"sourcesContent":["import type { SliceZone } from \"@prismicio/client\";\n\nimport { SliceSimulatorProps } from \"./types\";\n\nexport const getDefaultProps = (): Required<{\n\t[K in keyof SliceSimulatorProps]: NonNullable<SliceSimulatorProps[K]>;\n}> => ({\n\tzIndex: 100,\n\tbackground: \"#ffffff\",\n});\n\nexport const getDefaultSlices = (): SliceZone => {\n\treturn [];\n};\n\nexport const getDefaultMessage = (): string => {\n\treturn \"\";\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,kBAAkB,IAAA,CAExB;QACN,QAAQ;QACR,YAAY;IACZ,CAAA;AAEM,MAAM,mBAAmB,MAAgB;IAC/C,OAAO,EAAA;AACR;AAEO,MAAM,oBAAoB,MAAa;IACtC,OAAA;AACR","ignoreList":[0]}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"file":"State.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/kit/State.ts"],"sourcesContent":["import type { SharedSlice, SliceZone } from \"@prismicio/client\";\n\nimport { EventEmitter } from \"../lib/EventEmitter\";\nimport { __PRODUCTION__ } from \"../lib/__PRODUCTION__\";\nimport { throttle } from \"../lib/throttle\";\n\nimport type { ActiveSlice } from \"../types\";\nimport { StateEventType, StateEvents } from \"./types\";\n\nimport { getActiveSliceDOM, getSliceZoneDOM } from \"./domHelpers\";\nimport { getDefaultSlices } from \"./getDefault\";\n\ntype StateConstructorArgs = {\n\tslices?: SliceZone;\n};\n\nexport class State extends EventEmitter<StateEvents> {\n\tprivate _slices: SliceZone;\n\tpublic set slices(slices: SliceZone) {\n\t\tthis._slices = slices;\n\t\t// Clean up message\n\t\tthis.message = \"\";\n\t\t// Dispatch event\n\t\tthis.emit(StateEventType.Slices, slices);\n\t}\n\tpublic get slices(): SliceZone {\n\t\treturn this._slices;\n\t}\n\n\tprivate _activeSlice: ActiveSlice | null;\n\tpublic set activeSlice(activeSlice: ActiveSlice | null) {\n\t\tthis._activeSlice = activeSlice;\n\t\tthis.emit(StateEventType.ActiveSlice, activeSlice);\n\t}\n\tpublic get activeSlice(): ActiveSlice | null {\n\t\treturn this._activeSlice;\n\t}\n\n\tprivate _message: string;\n\tpublic set message(message: string) {\n\t\tthis._message = message;\n\t\tthis.emit(StateEventType.Message, message);\n\t}\n\tpublic get message(): string {\n\t\treturn this._message;\n\t}\n\n\tprivate _mouse: { x: number; y: number };\n\n\tconstructor(args?: StateConstructorArgs) {\n\t\tsuper();\n\n\t\tthis._slices = args?.slices || getDefaultSlices();\n\t\tthis._activeSlice = null;\n\t\tthis._message = \"\";\n\n\t\t// StateManager needs to keep track of mouse position for the active slice\n\t\tthis._mouse = { x: 0, y: 0 };\n\t}\n\n\tasync init(): Promise<void> {\n\t\t// Init listener\n\t\twindow.addEventListener(\"mousemove\", (event) => {\n\t\t\tthis._mouse = { x: event.clientX, y: event.clientY };\n\t\t});\n\t}\n\n\tprivate _setActiveSlice = (): void => {\n\t\t// There can't be an active slice if there's no slice displayed\n\t\tif (this.slices.length === 0) {\n\t\t\tthis.activeSlice = null;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst $sliceZone = getSliceZoneDOM(this.slices.length);\n\n\t\t// SliceZone has not been found, therefore active slice cannot be found\n\t\tif (!$sliceZone) {\n\t\t\tthis.activeSlice = null;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst $activeSlice = getActiveSliceDOM($sliceZone, this._mouse);\n\n\t\t// Active slice has not been found\n\t\tif (!$activeSlice) {\n\t\t\tthis.activeSlice = null;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeSliceIndex = Array.prototype.indexOf.call(\n\t\t\t$sliceZone.children,\n\t\t\t$activeSlice,\n\t\t);\n\n\t\t// Active slice has been found\n\t\tthis.activeSlice = {\n\t\t\trect: $activeSlice.getBoundingClientRect(),\n\t\t\tsliceID: this.slices[activeSliceIndex].slice_type,\n\t\t\tvariationID: (this.slices[activeSliceIndex] as SharedSlice).variation,\n\t\t\tindex: activeSliceIndex,\n\t\t};\n\t};\n\tsetActiveSlice = throttle(this._setActiveSlice, 16);\n\n\tsetSliceZone(slices: SliceZone): void {\n\t\t// Set slices\n\t\tthis.slices = slices;\n\t}\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAgBM,MAAO,yLAAc,eAAA,CAAyB;IAiCnD,YAAY,IAAA,CAA2B;;QAhC/B,cAAA,IAAA,EAAA;QAYA,cAAA,IAAA,EAAA;QASA,cAAA,IAAA,EAAA;QASA,cAAA,IAAA,EAAA;QAoBA,cAAA,IAAA,EAAA,mBAAkB,MAAW;YAEhC,IAAA,IAAA,CAAK,MAAA,CAAO,MAAA,KAAW,GAAG;gBAC7B,IAAA,CAAK,WAAA,GAAc;gBAEnB;YACA;YAED,MAAM,0LAAa,kBAAA,EAAgB,IAAA,CAAK,MAAA,CAAO,MAAM;YAGrD,IAAI,CAAC,YAAY;gBAChB,IAAA,CAAK,WAAA,GAAc;gBAEnB;YACA;YAED,MAAM,4LAAe,oBAAA,EAAkB,YAAY,IAAA,CAAK,MAAM;YAG9D,IAAI,CAAC,cAAc;gBAClB,IAAA,CAAK,WAAA,GAAc;gBAEnB;YACA;YAED,MAAM,mBAAmB,MAAM,SAAA,CAAU,OAAA,CAAQ,IAAA,CAChD,WAAW,QAAA,EACX,YAAY;YAIb,IAAA,CAAK,WAAA,GAAc;gBAClB,MAAM,aAAa,qBAAA,CAAuB;gBAC1C,SAAS,IAAA,CAAK,MAAA,CAAO,gBAAgB,CAAA,CAAE,UAAA;gBACvC,aAAc,IAAA,CAAK,MAAA,CAAO,gBAAgB,CAAA,CAAkB,SAAA;gBAC5D,OAAO;YAAA;QAAA;QAGT,cAAA,IAAA,EAAA,6LAAiB,WAAA,EAAS,IAAA,CAAK,eAAA,EAAiB,EAAE;QAtD5C,IAAA,CAAA,OAAA,GAAA,CAAU,QAAA,OAAA,KAAA,IAAA,KAAM,MAAA,kLAAU,mBAAA,CAAgB;QAC/C,IAAA,CAAK,YAAA,GAAe;QACpB,IAAA,CAAK,QAAA,GAAW;QAGhB,IAAA,CAAK,MAAA,GAAS;YAAE,GAAG;YAAG,GAAG;QAAA;IAC1B;IAxCA,IAAW,OAAO,MAAA,EAAiB;QAClC,IAAA,CAAK,OAAA,GAAU;QAEf,IAAA,CAAK,OAAA,GAAU;QAEV,IAAA,CAAA,IAAA,qKAAK,iBAAA,CAAe,MAAA,EAAQ,MAAM;IACxC;IACA,IAAW,SAAM;QAChB,OAAO,IAAA,CAAK,OAAA;IACb;IAGA,IAAW,YAAY,WAAA,EAA+B;QACrD,IAAA,CAAK,YAAA,GAAe;QACf,IAAA,CAAA,IAAA,qKAAK,iBAAA,CAAe,WAAA,EAAa,WAAW;IAClD;IACA,IAAW,cAAW;QACrB,OAAO,IAAA,CAAK,YAAA;IACb;IAGA,IAAW,QAAQ,OAAA,EAAe;QACjC,IAAA,CAAK,QAAA,GAAW;QACX,IAAA,CAAA,IAAA,qKAAK,iBAAA,CAAe,OAAA,EAAS,OAAO;IAC1C;IACA,IAAW,UAAO;QACjB,OAAO,IAAA,CAAK,QAAA;IACb;IAeA,MAAM,OAAI;QAEF,OAAA,gBAAA,CAAiB,aAAa,CAAC,UAAS;YAC9C,IAAA,CAAK,MAAA,GAAS;gBAAE,GAAG,MAAM,OAAA;gBAAS,GAAG,MAAM,OAAA;YAAA;SAC3C;IACF;IA2CA,aAAa,MAAA,EAAiB;QAE7B,IAAA,CAAK,MAAA,GAAS;IACf;AACA","ignoreList":[0]}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"file":"messages.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/kit/messages.ts"],"sourcesContent":["const div = (content: string) =>\n\t`<div style=\"word-spacing: initial; white-space: pre; line-height: initial; font-family: monospace; color: #ffffff; mix-blend-mode: difference; padding: 1rem; font-size: 1rem;\">${content}</div>`;\n\nconst a = (href: string, label?: string) =>\n\t`<a href=\"${href}\" style=\"text-decoration: underline;\">${label || href}<a>`;\n\nconst header =\n\t\"   _____ ___          _____ _                 __      __            \\n  / ___// (_)_______ / ___/(_)___ ___  __  __/ /___ _/ /_____  _____\\n  \\\\__ \\\\/ / / ___/ _ \\\\\\\\__ \\\\/ / __ `__ \\\\/ / / / / __ `/ __/ __ \\\\/ ___/\\n ___/ / / / /__/  __/__/ / / / / / / / /_/ / / /_/ / /_/ /_/ / /    \\n/____/_/_/\\\\___/\\\\___/____/_/_/ /_/ /_/\\\\__,_/_/\\\\__,_/\\\\__/\\\\____/_/     \\n                  / /_  __  __   / __ \\\\_____(_)________ ___  (_)____\\n                 / __ \\\\/ / / /  / /_/ / ___/ / ___/ __ `__ \\\\/ / ___/\\n                / /_/ / /_/ /  / ____/ /  / (__  ) / / / / / / /__  \\n               /_.___/\\\\__, /  /_/   /_/  /_/____/_/ /_/ /_/_/\\\\___/  \\n                     /____/\\n\\n\";\n\nconst footer =\n\t\"\\n\\n\\n\\n\\n\\n                                                - The Prismic team\";\n\nexport const sliceSimulatorAccessedDirectly = div(\n\t[\n\t\theader,\n\t\t`You're seeing this page because you're accessing Slice simulator\\ndirectly, e.g:\\n\\n  - ${a(\n\t\t\t\"http://localhost:3000/slice-simulator\",\n\t\t)}\\n\\n\\n\\nThe Slice simulator can only be accessed through Slice Machine or the\\nPage Builder. To preview your Slices, head over to Slice Machine:\\n\\n  - ${a(\n\t\t\t\"http://localhost:9999\",\n\t\t)}\\n\\n\\n\\nIf you believe this is an error, please reach out to us:\\n\\n  - ${a(\n\t\t\t\"https://github.com/prismicio/slice-machine/issues/new/choose\",\n\t\t)}`,\n\t\tfooter,\n\t].join(\"\"),\n);\n"],"names":[],"mappings":";;;AAAA,MAAM,MAAM,CAAC,UACZ,CAAA,gLAAA,EAAmL,QAAA,MAAA,CAAA;AAEpL,MAAM,IAAI,CAAC,MAAc,QACxB,CAAA,SAAA,EAAY,KAAA,sCAAA,EAA6C,SAAS,KAAA,GAAA,CAAA;AAEnE,MAAM,SACL;AAED,MAAM,SACL;AAEM,MAAM,iCAAiC,IAC7C;IACC;IACA,CAAA;;;IAAA,EAA2F,EAC1F,uCAAuC,EAAA;;;;;;;IAAA,EACoH,EAC3J,uBAAuB,EAAA;;;;;;IAAA,EACoD,EAC3E,8DAA8D,GAAA;IAE/D;CACA,CAAC,IAAA,CAAK,EAAE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"file":"SimulatorManager.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/kit/SimulatorManager.ts"],"sourcesContent":["import type { SliceZone } from \"@prismicio/client\";\n\nimport { throttle } from \"../lib/throttle\";\n\nimport { ClientRequestType } from \"../types\";\nimport { StateEventType } from \"./types\";\n\nimport { SimulatorAPI } from \"../SimulatorAPI\";\nimport { ResponseError } from \"../channel\";\n\nimport { State } from \"./State\";\nimport {\n\tgetSimulatorDOM,\n\tgetSimulatorRootDOM,\n\tgetSliceZoneDOM,\n} from \"./domHelpers\";\nimport { sliceSimulatorAccessedDirectly } from \"./messages\";\n\ntype ManagerConstructorArgs = {\n\tslices?: SliceZone;\n};\n\nexport class SimulatorManager {\n\tpublic state: State;\n\tprivate _api: SimulatorAPI | null;\n\tprivate _initialized: boolean;\n\n\tconstructor(args?: ManagerConstructorArgs) {\n\t\tthis.state = new State(args);\n\t\tthis._api = null;\n\t\tthis._initialized = false;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._initialized) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis._initialized = true;\n\t\t}\n\n\t\t// Init state manager\n\t\tawait this.state.init();\n\n\t\t// Init API\n\t\ttry {\n\t\t\tawait this._initAPI();\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\terror instanceof Error &&\n\t\t\t\terror.message === \"Receiver is currently not embedded as an iframe\" &&\n\t\t\t\t!this.state.slices.length\n\t\t\t) {\n\t\t\t\t// Catch not embedded error and display message\n\t\t\t\tthis.state.message = sliceSimulatorAccessedDirectly;\n\t\t\t}\n\t\t\tconsole.error(error);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Init listeners\n\t\tthis._initListeners();\n\t}\n\n\tprivate async _initAPI(): Promise<void> {\n\t\t// Register SimulatorAPI request handlers\n\t\tthis._api = new SimulatorAPI({\n\t\t\t[ClientRequestType.SetSliceZone]: (req, res) => {\n\t\t\t\tthis.state.setSliceZone(req.data);\n\n\t\t\t\treturn res.success();\n\t\t\t},\n\t\t\t[ClientRequestType.ScrollToSlice]: (req, res) => {\n\t\t\t\t// Error if `sliceIndex` is invalid\n\t\t\t\tif (req.data.sliceIndex < 0) {\n\t\t\t\t\treturn res.error(\"`sliceIndex` must be > 0\", 400);\n\t\t\t\t} else if (req.data.sliceIndex >= this.state.slices.length) {\n\t\t\t\t\treturn res.error(\n\t\t\t\t\t\t`\\`sliceIndex\\` must be < ${this.state.slices.length} (\\`<SliceZone />\\` current length)`,\n\t\t\t\t\t\t400,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst $sliceZone = getSliceZoneDOM(this.state.slices.length);\n\t\t\t\tif (!$sliceZone) {\n\t\t\t\t\treturn res.error(\"Failed to find `<SliceZone />`\", 500);\n\t\t\t\t}\n\n\t\t\t\t// Destroy existing active slice as we're about to scroll\n\t\t\t\tthis.state.activeSlice = null;\n\n\t\t\t\tconst $slice = $sliceZone.children[req.data.sliceIndex];\n\t\t\t\tif (!$slice) {\n\t\t\t\t\treturn res.error(\n\t\t\t\t\t\t`Failed fo find slice at index $\\`{req.data.sliceIndex}\\` in \\`<SliceZone />\\``,\n\t\t\t\t\t\t500,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Scroll to Slice\n\t\t\t\t$slice.scrollIntoView({\n\t\t\t\t\tbehavior: req.data.behavior,\n\t\t\t\t\tblock: req.data.block,\n\t\t\t\t\tinline: req.data.inline,\n\t\t\t\t});\n\n\t\t\t\t// Update active slice after scrolling\n\t\t\t\tthis._api?.options.activeSliceAPI &&\n\t\t\t\t\tsetTimeout(this.state.setActiveSlice, 750);\n\n\t\t\t\treturn res.success();\n\t\t\t},\n\t\t});\n\n\t\t// Mark API as ready\n\t\tawait this._api.ready();\n\t}\n\n\tprivate _initListeners(): void {\n\t\tif (this._api?.options.activeSliceAPI) {\n\t\t\t// Update active slice on mouse move\n\t\t\twindow.addEventListener(\"mousemove\", () => {\n\t\t\t\tthis.state.setActiveSlice();\n\t\t\t});\n\t\t\t// Update active slice on events impacting slices rendering\n\t\t\twindow.addEventListener(\"resize\", () => {\n\t\t\t\tthis.state.setActiveSlice();\n\t\t\t});\n\t\t\twindow.addEventListener(\"mousewheel\", () => {\n\t\t\t\tsetTimeout(this.state.setActiveSlice, 200);\n\t\t\t});\n\n\t\t\t// Update active slice when slices are set\n\t\t\tthis.state.on(StateEventType.Slices, () => {\n\t\t\t\tthis.state.setActiveSlice();\n\t\t\t});\n\t\t\t// Send active slices to renderer\n\t\t\tthis.state.on(StateEventType.ActiveSlice, async (activeSlice) => {\n\t\t\t\tif (this._api) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this._api.setActiveSlice(activeSlice);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// Just log bad requests, throw everything else\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\terror instanceof ResponseError &&\n\t\t\t\t\t\t\terror.response.status === 400\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconsole.error(error.response);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this._api?.options.sliceZoneSizeAPI) {\n\t\t\t// Monitor Simulator root node size\n\t\t\tconst resizeObserver = new ResizeObserver(\n\t\t\t\tthrottle(async (entries) => {\n\t\t\t\t\tconst [entry] = entries;\n\n\t\t\t\t\tif (this._api && entry) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this._api.setSliceZoneSize({ rect: entry.contentRect });\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t// Just log bad requests, throw everything else\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\terror instanceof ResponseError &&\n\t\t\t\t\t\t\t\terror.response.status === 400\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconsole.error(error.response);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 16),\n\t\t\t);\n\t\t\tconst observeSimulatorRoot = () => {\n\t\t\t\tconst simulatorRootDOM = getSimulatorRootDOM();\n\t\t\t\tresizeObserver.disconnect();\n\t\t\t\tif (simulatorRootDOM) {\n\t\t\t\t\tresizeObserver.observe(simulatorRootDOM);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Monitor Simulator root node in DOM\n\t\t\tconst mutationObserver = new MutationObserver(observeSimulatorRoot);\n\t\t\t// We want it to fail if not found\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\tmutationObserver.observe(getSimulatorDOM()!, {\n\t\t\t\tsubtree: false,\n\t\t\t\tchildList: true,\n\t\t\t});\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"file":"eventHandlers.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/kit/eventHandlers.ts"],"sourcesContent":["export const disableEventHandler = (event: Event): void => {\n\tevent.preventDefault();\n\tevent.stopPropagation();\n};\n\nexport const onClickHandler = (\n\tevent: MouseEvent & { path?: HTMLElement[] },\n): void => {\n\tif (\n\t\tevent.path &&\n\t\tevent.path.slice(0, 5).some((el) => el instanceof HTMLAnchorElement)\n\t) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n};\n"],"names":[],"mappings":";;;;AAAa,MAAA,sBAAsB,CAAC,UAAsB;IACzD,MAAM,cAAA,CAAc;IACpB,MAAM,eAAA,CAAe;AACtB;AAEa,MAAA,iBAAiB,CAC7B,UACS;IACT,IACC,MAAM,IAAA,IACN,MAAM,IAAA,CAAK,KAAA,CAAM,GAAG,CAAC,EAAE,IAAA,CAAK,CAAC,KAAO,cAAc,iBAAiB,GAClE;QACD,MAAM,cAAA,CAAc;QACpB,MAAM,eAAA,CAAe;IACrB;AACF","ignoreList":[0]}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1120, "column": 0}, "map": {"version":3,"file":"kit.js","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1150, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/lz-string/libs/lz-string.js"],"sourcesContent":["// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1623, "column": 0}, "map": {"version":3,"file":"SliceSimulatorWrapper.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40slicemachine/src/simulator/SliceSimulatorWrapper.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport {\n\tSliceSimulatorProps,\n\tdisableEventHandler,\n\tgetDefaultProps,\n\tonClickHandler,\n\tsimulatorClass,\n\tsimulatorRootClass,\n} from \"@prismicio/simulator/kit\";\n\ntype SliceSimulatorWrapperProps = {\n\tchildren: ReactNode;\n\tclassName?: string;\n\tmessage?: string;\n\thasSlices: boolean;\n} & Omit<SliceSimulatorProps, \"state\">;\n\n/**\n * A wrapper for the slice simulator that isolates the given children from the\n * page's layout.\n */\nexport const SliceSimulatorWrapper = ({\n\tclassName,\n\tchildren,\n\tzIndex,\n\tbackground,\n\tmessage,\n\thasSlices,\n}: SliceSimulatorWrapperProps): JSX.Element => {\n\tconst defaultProps = getDefaultProps();\n\n\treturn (\n\t\t<div\n\t\t\tclassName={[simulatorClass, className].filter(Boolean).join(\" \")}\n\t\t\tstyle={{\n\t\t\t\tzIndex:\n\t\t\t\t\ttypeof zIndex === \"undefined\"\n\t\t\t\t\t\t? defaultProps.zIndex\n\t\t\t\t\t\t: zIndex ?? undefined,\n\t\t\t\tposition: \"fixed\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100vh\",\n\t\t\t\toverflow: \"auto\",\n\t\t\t\tbackground:\n\t\t\t\t\ttypeof background === \"undefined\"\n\t\t\t\t\t\t? defaultProps.background\n\t\t\t\t\t\t: background ?? undefined,\n\t\t\t}}\n\t\t>\n\t\t\t{message ? (\n\t\t\t\t<article dangerouslySetInnerHTML={{ __html: message }} />\n\t\t\t) : hasSlices ? (\n\t\t\t\t<div\n\t\t\t\t\tid=\"root\"\n\t\t\t\t\tclassName={simulatorRootClass}\n\t\t\t\t\tonClickCapture={onClickHandler as unknown as React.MouseEventHandler}\n\t\t\t\t\tonSubmitCapture={\n\t\t\t\t\t\tdisableEventHandler as unknown as React.FormEventHandler\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n"],"names":["_jsx"],"mappings":";;;;;;;;;;AAqBa,MAAA,wBAAwB,CAAC,EACrC,SAAA,EACA,QAAA,EACA,MAAA,EACA,UAAA,EACA,OAAA,EACA,SAAA,EAAA,KAC6C;IAC7C,MAAM,eAAe,+LAAA;IAErB,kLACCA,MAAAA,EAAAA,OAAAA;QACC,WAAW;YAAC,0LAAA;YAAgB,SAAS;SAAA,CAAE,MAAA,CAAO,OAAO,EAAE,IAAA,CAAK,GAAG;QAC/D,OAAO;YACN,QACC,OAAO,WAAW,cACf,aAAa,MAAA,GACb,UAAU,KAAA;YACd,UAAU;YACV,KAAK;YACL,MAAM;YACN,OAAO;YACP,QAAQ;YACR,UAAU;YACV,YACC,OAAO,eAAe,cACnB,aAAa,UAAA,GACb,cAAc,KAAA;QAGlB;QAAA,UAAA,WACAA,gLAAAA,EAAS,WAAA;YAAA,yBAAyB;gBAAE,QAAQ;YAAS;QAAA,CAAA,IAClD,uLACHA,MAAAA,EAAA,OAAA;YACC,IAAG;YACH,oLAAW,qBAAA;YACX,4LAAgB,iBAAA;YAChB,6LACC,sBAAA;YAAwD;QAAA,CAGhD,IAEP;IACC,CAAA;AAER","ignoreList":[0]}},
    {"offset": {"line": 1665, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1671, "column": 0}, "map": {"version":3,"file":"getSlices.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40slicemachine/src/simulator/react-server/getSlices.ts"],"sourcesContent":["// This `getSlices` is only accessible from Server Components.\n\nimport {\n\tgetDefaultSlices,\n\tStateEvents,\n\tStateEventType,\n} from \"@prismicio/simulator/kit\";\nimport { decompressFromEncodedURIComponent } from \"lz-string\";\n\nexport const getSlices = (\n\tstate: string | null | undefined,\n): StateEvents[StateEventType.Slices] => {\n\treturn state\n\t\t? JSON.parse(decompressFromEncodedURIComponent(state))\n\t\t: getDefaultSlices();\n};\n"],"names":[],"mappings":";;;;;;;;AASa,MAAA,YAAY,CACxB,UACuC;IACvC,OAAO,QACJ,KAAK,KAAA,6JAAM,oCAAA,EAAkC,KAAK,CAAC,iLACnD,mBAAA;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1690, "column": 0}, "map": {"version":3,"file":"SliceSimulator.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40slicemachine/src/simulator/react-server/SliceSimulator.tsx"],"sourcesContent":["// This `<SliceSimulator>` is only accessible from Server Components.\n\n\"use client\";\n\nimport * as React from \"react\";\n\nimport { useRouter } from \"next/navigation\";\nimport {\n\tSliceSimulatorProps as BaseSliceSimulatorProps,\n\tSimulatorManager,\n\tStateEventType,\n\tgetDefaultMessage,\n} from \"@prismicio/simulator/kit\";\nimport { compressToEncodedURIComponent } from \"lz-string\";\n\nimport { SliceSimulatorWrapper } from \"../SliceSimulatorWrapper\";\nimport { getSlices } from \"./getSlices\";\n\nconst STATE_PARAMS_KEY = \"state\";\n\nconst simulatorManager = new SimulatorManager();\n\nexport type SliceSimulatorProps = Omit<BaseSliceSimulatorProps, \"state\"> & {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n};\n\nexport const SliceSimulator = ({\n\tchildren,\n\tbackground,\n\tzIndex,\n\tclassName,\n}: SliceSimulatorProps): JSX.Element => {\n\tconst [message, setMessage] = React.useState(() => getDefaultMessage());\n\tconst router = useRouter();\n\n\tconst state =\n\t\ttypeof window !== \"undefined\"\n\t\t\t? new URL(window.location.href).searchParams.get(STATE_PARAMS_KEY)\n\t\t\t: undefined;\n\tconst hasSlices = getSlices(state).length > 0;\n\n\tReact.useEffect(() => {\n\t\tsimulatorManager.state.on(\n\t\t\tStateEventType.Slices,\n\t\t\t(newSlices) => {\n\t\t\t\tconst url = new URL(window.location.href);\n\t\t\t\turl.searchParams.set(\n\t\t\t\t\tSTATE_PARAMS_KEY,\n\t\t\t\t\tcompressToEncodedURIComponent(JSON.stringify(newSlices)),\n\t\t\t\t);\n\n\t\t\t\twindow.history.replaceState(null, \"\", url);\n\t\t\t\t// Wait until the next tick to prevent URL state race conditions.\n\t\t\t\tsetTimeout(() => router.refresh(), 0);\n\t\t\t},\n\t\t\t\"simulator-slices\",\n\t\t);\n\t\tsimulatorManager.state.on(\n\t\t\tStateEventType.Message,\n\t\t\t(newMessage) => setMessage(newMessage),\n\t\t\t\"simulator-message\",\n\t\t);\n\n\t\tsimulatorManager.init();\n\n\t\treturn () => {\n\t\t\tsimulatorManager.state.off(StateEventType.Slices, \"simulator-slices\");\n\n\t\t\tsimulatorManager.state.off(StateEventType.Message, \"simulator-message\");\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<SliceSimulatorWrapper\n\t\t\tmessage={message}\n\t\t\thasSlices={hasSlices}\n\t\t\tbackground={background}\n\t\t\tzIndex={zIndex}\n\t\t\tclassName={className}\n\t\t>\n\t\t\t{children}\n\t\t</SliceSimulatorWrapper>\n\t);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAA,mBAAA;AAEA,MAAA,mBAAA,IAAA,8KAAA,CAAA,mBAAA;AAOO,MAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA;IAMA,MAAA,CAAA,SAAA,WAAA,GAAA,8JAAA,QAAA;mCAAA,IAAA,CAAA,GAAA,wKAAA,CAAA,oBAAA;;IACN,MAAA,SAAA,CAAA,GAAA,qIAAA,CAAA,YAAA;IAEA,MAAA,QAAA,OAAA,WAAA,cAAA,IAAA,IAAA,OAAA,QAAA,CAAA,IAAA,EAAA,YAAA,CAAA,GAAA,CAAA,oBAAA,KAAA;IAIA,MAAA,YAAA,CAAA,GAAA,yMAAA,CAAA,YAAA,EAAA,OAAA,MAAA,GAAA;IAEA,8JAAA,SAAA;oCAAA;YACC,iBAAA,KAAA,CAAA,EAAA,CAAA,mKAAA,CAAA,iBAAA,CAAA,MAAA;4CAAA,CAAA;oBAGE,MAAA,MAAA,IAAA,IAAA,OAAA,QAAA,CAAA,IAAA;oBACI,IAAA,YAAA,CAAA,GAAA,CAAA,kBAAA,CAAA,GAAA,uJAAA,CAAA,gCAAA,EAAA,KAAA,SAAA,CAAA;oBAKJ,OAAA,OAAA,CAAA,YAAA,CAAA,MAAA,IAAA;oBAEA;oDAAA,IAAA,OAAA,OAAA;mDAAA;gBAAoC;2CAAA;YAIrB,iBAAA,KAAA,CAAA,EAAA,CAAA,mKAAA,CAAA,iBAAA,CAAA,OAAA;4CAAA,CAAA,aAAA,WAAA;2CAAA;YAMjB,iBAAA,IAAA;YAEA;4CAAA;oBACC,iBAAA,KAAA,CAAA,GAAA,CAAA,mKAAA,CAAA,iBAAA,CAAA,MAAA,EAAA;oBAEA,iBAAA,KAAA,CAAA,GAAA,CAAA,mKAAA,CAAA,iBAAA,CAAA,OAAA,EAAA;gBAAsE;;QAAA;mCAAA,EAAA;IAKvE,OAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,kMAAA,CAAA,wBAAA,EAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;IAAA;AAUF","ignoreList":[0]}},
    {"offset": {"line": 1756, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1761, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,IAAIC,cAAAA,iBAAiB,CAACH;IAC9B;IAEA,OAAOC;AACT","ignoreList":[0]}},
    {"offset": {"line": 1780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1785, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGP,SAASQ,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUd,UAAUe,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH;YAC7D,MAAMI,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0]}},
    {"offset": {"line": 1850, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1856, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":[],"mappings":";;;;AAAA,SAAS,EAAE,CAAC;IAAE,IAAI,GAAE,GAAE,IAAE;IAAG,IAAG,YAAU,OAAO,KAAG,YAAU,OAAO,GAAE,KAAG;SAAO,IAAG,YAAU,OAAO,GAAE,IAAG,MAAM,OAAO,CAAC,IAAG;QAAC,IAAI,IAAE,EAAE,MAAM;QAAC,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAC,OAAM,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAE,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;AAAQ,SAAS;IAAO,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,MAAM,EAAC,IAAE,GAAE,IAAI,CAAC,IAAE,SAAS,CAAC,EAAE,KAAG,CAAC,IAAE,EAAE,EAAE,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;uCAAgB","ignoreList":[0]}},
    {"offset": {"line": 1874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1880, "column": 0}, "map": {"version":3,"file":"PrismicProvider.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/PrismicProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as prismic from \"@prismicio/client\";\n\nimport { JSXFunctionSerializer, JSXMapSerializer } from \"./types\";\nimport { LinkProps } from \"./PrismicLink\";\n\n/**\n * React context value containing shared configuration for `@prismicio/react`\n * components and hooks.\n */\nexport type PrismicContextValue<\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any> = prismic.LinkResolverFunction,\n> = {\n\t/**\n\t * A `@prismicio/client` instance used to fetch content from a Prismic\n\t * repository. This is used by `@prismicio/react` hooks, such as\n\t * `usePrismicDocuments()`.\n\t */\n\tclient?: prismic.Client;\n\n\t/**\n\t * A Link Resolver used to resolve links for `<PrismicLink>` and\n\t * `<PrismicRichText>`.\n\t *\n\t * @remarks\n\t * If your app uses Route Resolvers when querying for your Prismic\n\t * repository's content, a Link Resolver does not need to be provided.\n\t * @see Learn about Link Resolvers and Route Resolvers {@link https://prismic.io/docs/core-concepts/link-resolver-route-resolver}\n\t */\n\tlinkResolver?: LinkResolverFunction;\n\n\t/**\n\t * A map or function that maps a Rich Text block to a React component.\n\t *\n\t * @remarks\n\t * Prefer using a map serializer over the function serializer when possible.\n\t * The map serializer is simpler to maintain.\n\t * @example A map serializer.\n\t *\n\t * ```jsx\n\t * {\n\t *   heading1: ({children}) => <Heading>{children}</Heading>\n\t * }\n\t * ```\n\t *\n\t * @example A function serializer.\n\t *\n\t * ```jsx\n\t * (type, node, content, children) => {\n\t * \tswitch (type) {\n\t * \t\tcase \"heading1\": {\n\t * \t\t\treturn <Heading>{chidlren}</Heading>;\n\t * \t\t}\n\t * \t}\n\t * };\n\t * ```\n\t */\n\trichTextComponents?: JSXMapSerializer | JSXFunctionSerializer;\n\n\t/**\n\t * The component rendered by `<PrismicLink>` for internal URLs. Defaults to\n\t * `<a>`.\n\t */\n\tinternalLinkComponent?: React.ComponentType<LinkProps>;\n\n\t/**\n\t * The component rendered by `<PrismicLink>` for external URLs. Defaults to\n\t * `<a>`.\n\t */\n\texternalLinkComponent?: React.ComponentType<LinkProps>;\n\n\t/**\n\t * Children for the component.\n\t */\n\tchildren?: React.ReactNode;\n};\n\n/**\n * React context containing shared configuration for `@prismicio/react`\n * components and hooks.\n */\nexport const PrismicContext = React.createContext<PrismicContextValue>({});\n\n/**\n * Props for `<PrismicProvider>`.\n */\nexport type PrismicProviderProps<\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any> = prismic.LinkResolverFunction<any>,\n> = PrismicContextValue<LinkResolverFunction>;\n\n/**\n * React context provider to share configuration for `@prismicio/react`\n * components and hooks.\n *\n * @returns A React context provider with shared configuration.\n */\nexport const PrismicProvider = <\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any>,\n>({\n\tclient,\n\tlinkResolver,\n\trichTextComponents,\n\tinternalLinkComponent,\n\texternalLinkComponent,\n\tchildren,\n}: PrismicProviderProps<LinkResolverFunction>): JSX.Element => {\n\tconst value = React.useMemo<PrismicContextValue<LinkResolverFunction>>(\n\t\t() => ({\n\t\t\tclient,\n\t\t\tlinkResolver,\n\t\t\trichTextComponents,\n\t\t\tinternalLinkComponent,\n\t\t\texternalLinkComponent,\n\t\t}),\n\t\t[\n\t\t\tclient,\n\t\t\tlinkResolver,\n\t\t\trichTextComponents,\n\t\t\tinternalLinkComponent,\n\t\t\texternalLinkComponent,\n\t\t],\n\t);\n\n\treturn (\n\t\t<PrismicContext.Provider value={value}>{children}</PrismicContext.Provider>\n\t);\n};\n"],"names":[],"mappings":";;;;;;;;AAoFO,MAAM,iBAAiB,8JAAM,aAAA,CAAmC,CAAA,CAAE;AAgB5D,MAAA,kBAAkB,CAG7B,EACD,MAAA,EACA,YAAA,EACA,kBAAA,EACA,qBAAA,EACA,qBAAA,EACA,QAAA,EAAA,KAC6D;IACvD,MAAA,QAAQ,8JAAM,OAAA;0CACnB,IAAA,CAAO;gBACN;gBACA;gBACA;gBACA;gBACA;YAAA,CAAA;yCAED;QACC;QACA;QACA;QACA;QACA;KACA;IAGF,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,eAAe,QAAA,EAAf;QAAwB;QAAe;IAAS,CAAA;AAEnD","ignoreList":[0]}},
    {"offset": {"line": 1912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1918, "column": 0}, "map": {"version":3,"file":"usePrismicContext.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/usePrismicContext.ts"],"sourcesContent":["import * as React from \"react\";\n\nimport { PrismicContext, PrismicContextValue } from \"./PrismicProvider\";\n\n/**\n * React hook used to read shared configuration for `@prismicio/react`\n * components and hooks.\n *\n * @returns The closest `<PrismicProvider>` context value.\n */\nexport const usePrismicContext = (): PrismicContextValue => {\n\treturn React.useContext(PrismicContext) || {};\n};\n"],"names":[],"mappings":";;;;;;;AAUO,MAAM,oBAAoB,MAA0B;IAC1D,OAAO,8JAAM,UAAA,oKAAW,iBAAc,KAAK,CAAA;AAC5C","ignoreList":[0]}},
    {"offset": {"line": 1930, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1936, "column": 0}, "map": {"version":3,"file":"index.js","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1945, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1959, "column": 0}, "map": {"version":3,"file":"richText.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/value/richText.ts"],"sourcesContent":["import type { EmbedField } from \"./embed\";\nimport type { FieldState } from \"./types\";\nimport type { FilledContentRelationshipField } from \"./contentRelationship\";\nimport type { FilledLinkToMediaField } from \"./linkToMedia\";\nimport type { FilledLinkToWebField } from \"./link\";\n\n/**\n * Types for RichTextNodes\n *\n * @see More details: {@link https://prismic.io/docs/core-concepts/rich-text-title}\n */\nexport const RichTextNodeType = {\n\theading1: \"heading1\",\n\theading2: \"heading2\",\n\theading3: \"heading3\",\n\theading4: \"heading4\",\n\theading5: \"heading5\",\n\theading6: \"heading6\",\n\tparagraph: \"paragraph\",\n\tpreformatted: \"preformatted\",\n\tstrong: \"strong\",\n\tem: \"em\",\n\tlistItem: \"list-item\",\n\toListItem: \"o-list-item\",\n\tlist: \"group-list-item\",\n\toList: \"group-o-list-item\",\n\timage: \"image\",\n\tembed: \"embed\",\n\thyperlink: \"hyperlink\",\n\tlabel: \"label\",\n\tspan: \"span\",\n} as const;\n\n// Text nodes\n\n/**\n * Base to be extended by other RT Nodes.\n */\nexport interface RTTextNodeBase {\n\ttext: string;\n\tspans: RTInlineNode[];\n}\n\n/**\n * Rich Text `heading1` node\n */\nexport interface RTHeading1Node extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.heading1;\n}\n\n/**\n * Rich Text `heading2` node\n */\nexport interface RTHeading2Node extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.heading2;\n}\n\n/**\n * Rich Text `heading3` node\n */\nexport interface RTHeading3Node extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.heading3;\n}\n\n/**\n * Rich Text `heading4` node\n */\nexport interface RTHeading4Node extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.heading4;\n}\n\n/**\n * Rich Text `heading5` node\n */\nexport interface RTHeading5Node extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.heading5;\n}\n\n/**\n * Rich Text `heading6` node\n */\nexport interface RTHeading6Node extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.heading6;\n}\n\n/**\n * Rich Text `paragraph` node\n */\nexport interface RTParagraphNode extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.paragraph;\n}\n\n/**\n * Rich Text `preformatted` node\n */\nexport interface RTPreformattedNode extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.preformatted;\n}\n\n/**\n * Rich Text `list-item` node\n */\nexport interface RTListItemNode extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.listItem;\n}\n\n/**\n * Rich Text `o-list-item` node for ordered lists\n */\nexport interface RTOListItemNode extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.oListItem;\n}\n\n// Span nodes\n\n/**\n * @internal Span Node base to be extended for other Span nodes\n */\nexport interface RTSpanNodeBase {\n\tstart: number;\n\tend: number;\n}\n/**\n * Rich Text `strong` node\n */\nexport interface RTStrongNode extends RTSpanNodeBase {\n\ttype: typeof RichTextNodeType.strong;\n}\n\n/**\n * Rich Text `embed` node\n */\nexport interface RTEmNode extends RTSpanNodeBase {\n\ttype: typeof RichTextNodeType.em;\n}\n\n/**\n * Rich Text `label` node\n */\nexport interface RTLabelNode extends RTSpanNodeBase {\n\ttype: typeof RichTextNodeType.label;\n\tdata: {\n\t\tlabel: string;\n\t};\n}\n\n// Media nodes\n\n/**\n * Rich Text `image` nodes. They could link to other documents, external web\n * links and media fields\n */\nexport type RTImageNode = {\n\ttype: typeof RichTextNodeType.image;\n\tid: string;\n\turl: string;\n\talt: string | null;\n\tcopyright: string | null;\n\tdimensions: {\n\t\twidth: number;\n\t\theight: number;\n\t};\n\tedit: {\n\t\tx: number;\n\t\ty: number;\n\t\tzoom: number;\n\t\tbackground: string;\n\t};\n\tlinkTo?:\n\t\t| FilledContentRelationshipField\n\t\t| FilledLinkToWebField\n\t\t| FilledLinkToMediaField;\n};\n\n/**\n * Rich Text `embed` node\n */\nexport type RTEmbedNode = {\n\ttype: typeof RichTextNodeType.embed;\n\toembed: EmbedField;\n};\n\n// Link nodes\n\n/**\n * Rich Text `a` node\n *\n * @see More details: {@link https://prismic.io/docs/core-concepts/edit-rich-text#add-links}\n */\nexport interface RTLinkNode extends RTSpanNodeBase {\n\ttype: typeof RichTextNodeType.hyperlink;\n\tdata:\n\t\t| FilledContentRelationshipField\n\t\t| FilledLinkToWebField\n\t\t| FilledLinkToMediaField;\n}\n\n// Serialization related nodes\n\n/**\n * Rich Text `list` node\n */\nexport interface RTListNode {\n\ttype: typeof RichTextNodeType.list;\n\titems: RTListItemNode[];\n}\n\n/**\n * Rich Text o-lost node\n */\nexport interface RTOListNode {\n\ttype: typeof RichTextNodeType.oList;\n\titems: RTOListItemNode[];\n}\n\n// This one is confusing but it's actually the inner content of a block\n/**\n * Rich Text `span` node\n */\nexport interface RTSpanNode extends RTTextNodeBase {\n\ttype: typeof RichTextNodeType.span;\n}\n\n// Helpers\n\n/**\n * Nodes from a Rich Text Field\n */\nexport type RTNode =\n\t| RTHeading1Node\n\t| RTHeading2Node\n\t| RTHeading3Node\n\t| RTHeading4Node\n\t| RTHeading5Node\n\t| RTHeading6Node\n\t| RTParagraphNode\n\t| RTPreformattedNode\n\t| RTListItemNode\n\t| RTOListItemNode\n\t| RTImageNode\n\t| RTEmbedNode;\n\n/**\n * Rich text nodes with text\n */\nexport type RTTextNode =\n\t| RTHeading1Node\n\t| RTHeading2Node\n\t| RTHeading3Node\n\t| RTHeading4Node\n\t| RTHeading5Node\n\t| RTHeading6Node\n\t| RTParagraphNode\n\t| RTPreformattedNode\n\t| RTListItemNode\n\t| RTOListItemNode;\n\n/**\n * Rich Text block nodes\n */\nexport type RTBlockNode =\n\t| RTHeading1Node\n\t| RTHeading2Node\n\t| RTHeading3Node\n\t| RTHeading4Node\n\t| RTHeading5Node\n\t| RTHeading6Node\n\t| RTParagraphNode\n\t| RTPreformattedNode\n\t| RTListItemNode\n\t| RTOListItemNode\n\t| RTListNode\n\t| RTOListNode\n\t| RTImageNode\n\t| RTEmbedNode;\n\n/**\n * Inline Rich Text Nodes\n */\nexport type RTInlineNode = RTStrongNode | RTEmNode | RTLabelNode | RTLinkNode;\n\n/**\n * All Rich Text nodes\n */\nexport type RTAnyNode = RTBlockNode | RTInlineNode | RTSpanNode;\n\n/**\n * Rich Text Field\n *\n * @see Rich Text field documentation: {@link https://prismic.io/docs/core-concepts/rich-text-title}\n */\nexport type RichTextField<State extends FieldState = FieldState> =\n\tState extends \"empty\" ? [] : [RTNode, ...RTNode[]];\n"],"names":[],"mappings":";;;AAWO,MAAM,mBAAmB;IAC/B,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,WAAW;IACX,cAAc;IACd,QAAQ;IACR,IAAI;IACJ,UAAU;IACV,WAAW;IACX,MAAM;IACN,OAAO;IACP,OAAO;IACP,OAAO;IACP,WAAW;IACX,OAAO;IACP,MAAM","ignoreList":[0]}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1991, "column": 0}, "map": {"version":3,"file":"asText.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/asText.ts"],"sourcesContent":["import { RichTextField, RTTextNode } from \"@prismicio/types\";\n\n/**\n * Serializes a rich text or title field to a plain text string\n *\n * @param richTextField - A rich text or title field from Prismic\n * @param separator - Separator used to join each element, defaults to a space\n *\n * @returns Plain text equivalent of the provided rich text or title field\n * @see Templating rich text and title fields from Prismic {@link https://prismic.io/docs/technologies/templating-rich-text-and-title-fields-javascript}\n */\nexport const asText = (\n\trichTextField: RichTextField,\n\tseparator = \" \",\n): string => {\n\tlet result = \"\";\n\n\tfor (let i = 0; i < richTextField.length; i++) {\n\t\tif (\"text\" in richTextField[i]) {\n\t\t\tresult +=\n\t\t\t\t(result ? separator : \"\") + (richTextField[i] as RTTextNode).text;\n\t\t}\n\t}\n\n\treturn result;\n};\n"],"names":[],"mappings":";;;AAWO,MAAM,SAAS,CACrB,eACA,YAAY,GAAA,KACD;IACX,IAAI,SAAS;IAEb,IAAA,IAAS,IAAI,GAAG,IAAI,cAAc,MAAA,EAAQ,IAAK;QAC1C,IAAA,UAAU,aAAA,CAAc,CAAC,CAAA,EAAG;YAC/B,UAAA,CACE,SAAS,YAAY,EAAA,IAAO,aAAA,CAAc,CAAC,CAAA,CAAiB,IAAA;QAC9D;IACD;IAEM,OAAA;AACR","ignoreList":[0]}},
    {"offset": {"line": 2005, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2011, "column": 0}, "map": {"version":3,"file":"asTree.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/asTree.ts"],"sourcesContent":["import {\n\tRichTextNodeType,\n\tRTAnyNode,\n\tRTBlockNode,\n\tRTInlineNode,\n\tRTListItemNode,\n\tRTNode,\n\tRTOListItemNode,\n\tRTTextNode,\n} from \"@prismicio/types\";\nimport { Tree, TreeNode } from \"./types\";\n\nconst uuid = (): string => {\n\treturn (++uuid.i).toString();\n};\nuuid.i = 0;\n\n/**\n * Parses a rich text or title field into a tree\n *\n * @remarks\n * This is a low level helper mainly intended to be used by higher level\n * packages. Most users aren't expected to this function directly.\n * @param nodes - A rich text or title field from Prismic\n *\n * @returns Tree from given rich text or title field\n */\nexport const asTree = (nodes: RTNode[]): Tree => {\n\tconst preparedNodes = prepareNodes(nodes);\n\n\tconst children: TreeNode[] = [];\n\tfor (let i = 0; i < preparedNodes.length; i++) {\n\t\tchildren.push(nodeToTreeNode(preparedNodes[i]));\n\t}\n\n\treturn {\n\t\tkey: uuid(),\n\t\tchildren,\n\t};\n};\n\nconst createTreeNode = (\n\tnode: RTAnyNode,\n\tchildren: TreeNode[] = [],\n): TreeNode => {\n\treturn {\n\t\tkey: uuid(),\n\t\ttype: node.type,\n\t\ttext: \"text\" in node ? node.text : undefined,\n\t\tnode,\n\t\tchildren,\n\t};\n};\n\nconst createTextTreeNode = (text: string): TreeNode => {\n\treturn createTreeNode({\n\t\ttype: RichTextNodeType.span,\n\t\ttext,\n\t\tspans: [],\n\t});\n};\n\nconst prepareNodes = (nodes: RTNode[]): RTBlockNode[] => {\n\tconst mutNodes: RTBlockNode[] = nodes.slice(0);\n\n\tfor (let i = 0; i < mutNodes.length; i++) {\n\t\tconst node = mutNodes[i];\n\n\t\tif (\n\t\t\tnode.type === RichTextNodeType.listItem ||\n\t\t\tnode.type === RichTextNodeType.oListItem\n\t\t) {\n\t\t\tconst items: (RTListItemNode | RTOListItemNode)[] = [\n\t\t\t\tnode as RTListItemNode | RTOListItemNode,\n\t\t\t];\n\n\t\t\twhile (mutNodes[i + 1] && mutNodes[i + 1].type === node.type) {\n\t\t\t\titems.push(mutNodes[i + 1] as RTListItemNode | RTOListItemNode);\n\t\t\t\tmutNodes.splice(i, 1);\n\t\t\t}\n\n\t\t\tif (node.type === RichTextNodeType.listItem) {\n\t\t\t\tmutNodes[i] = {\n\t\t\t\t\ttype: RichTextNodeType.list,\n\t\t\t\t\titems: items as RTListItemNode[],\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tmutNodes[i] = {\n\t\t\t\t\ttype: RichTextNodeType.oList,\n\t\t\t\t\titems: items as RTOListItemNode[],\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn mutNodes;\n};\n\nconst nodeToTreeNode = (node: RTBlockNode): TreeNode => {\n\tif (\"text\" in node) {\n\t\treturn createTreeNode(\n\t\t\tnode,\n\t\t\ttextNodeSpansToTreeNodeChildren(node.spans, node),\n\t\t);\n\t}\n\n\tif (\"items\" in node) {\n\t\tconst children: TreeNode[] = [];\n\t\tfor (let i = 0; i < node.items.length; i++) {\n\t\t\tchildren.push(nodeToTreeNode(node.items[i]));\n\t\t}\n\n\t\treturn createTreeNode(node, children);\n\t}\n\n\treturn createTreeNode(node);\n};\n\nconst textNodeSpansToTreeNodeChildren = (\n\tspans: RTInlineNode[],\n\tnode: RTTextNode,\n\tparentSpan?: RTInlineNode,\n): TreeNode[] => {\n\tif (!spans.length) {\n\t\treturn [createTextTreeNode(node.text)];\n\t}\n\n\tconst mutSpans: RTInlineNode[] = spans.slice(0);\n\n\t// Sort spans using the following criteria:\n\t//\n\t//   1. By start index (ascending)\n\t//   2. If start indices are equal, by end index (descending)\n\t//\n\t// If start and end indices of more than one span are equal, use what\n\t// the API gives without modifications.\n\t//\n\t// Sorting using this algorithm ensures proper detection of child\n\t// spans.\n\tmutSpans.sort((a, b) => a.start - b.start || b.end - a.end);\n\n\tconst children: TreeNode[] = [];\n\n\tfor (let i = 0; i < mutSpans.length; i++) {\n\t\tconst span = mutSpans[i];\n\t\tconst parentSpanStart = (parentSpan && parentSpan.start) || 0;\n\t\tconst spanStart = span.start - parentSpanStart;\n\t\tconst spanEnd = span.end - parentSpanStart;\n\t\tconst text = node.text.slice(spanStart, spanEnd);\n\n\t\tconst childSpans: RTInlineNode[] = [];\n\t\tfor (let j = i; j < mutSpans.length; j++) {\n\t\t\tconst siblingSpan = mutSpans[j];\n\n\t\t\tif (siblingSpan !== span) {\n\t\t\t\tif (siblingSpan.start >= span.start && siblingSpan.end <= span.end) {\n\t\t\t\t\tchildSpans.push(siblingSpan);\n\t\t\t\t\tmutSpans.splice(j, 1);\n\t\t\t\t\tj--;\n\t\t\t\t} else if (\n\t\t\t\t\tsiblingSpan.start < span.end &&\n\t\t\t\t\tsiblingSpan.end > span.start\n\t\t\t\t) {\n\t\t\t\t\tchildSpans.push({\n\t\t\t\t\t\t...siblingSpan,\n\t\t\t\t\t\tend: span.end,\n\t\t\t\t\t});\n\t\t\t\t\tmutSpans[j] = {\n\t\t\t\t\t\t...siblingSpan,\n\t\t\t\t\t\tstart: span.end,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (i === 0 && spanStart > 0) {\n\t\t\tchildren.push(createTextTreeNode(node.text.slice(0, spanStart)));\n\t\t}\n\n\t\tconst spanWithText = { ...span, text };\n\t\tchildren.push(\n\t\t\tcreateTreeNode(\n\t\t\t\tspanWithText,\n\t\t\t\ttextNodeSpansToTreeNodeChildren(\n\t\t\t\t\tchildSpans,\n\t\t\t\t\t{\n\t\t\t\t\t\t...node,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t},\n\t\t\t\t\tspan,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tif (spanEnd < node.text.length) {\n\t\t\tchildren.push(\n\t\t\t\tcreateTextTreeNode(\n\t\t\t\t\tnode.text.slice(\n\t\t\t\t\t\tspanEnd,\n\t\t\t\t\t\tmutSpans[i + 1]\n\t\t\t\t\t\t\t? mutSpans[i + 1].start - parentSpanStart\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\treturn children;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2147, "column": 0}, "map": {"version":3,"file":"composeSerializers.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/composeSerializers.ts"],"sourcesContent":["import { RichTextFunctionSerializer } from \"./types\";\n\n/**\n * Takes an array of serializers and returns a serializer applying provided\n * serializers sequentially until a result is returned\n *\n * @remarks\n * This is a low level helper mainly intended to be used by higher level\n * packages Most users aren't expected to this function directly\n * @typeParam SerializerReturnType - Return type of serializers\n * @param serializers - Serializers to compose\n *\n * @returns Composed serializer\n */\nexport const composeSerializers = <SerializerReturnType>(\n\t...serializers: (\n\t\t| RichTextFunctionSerializer<SerializerReturnType>\n\t\t| undefined\n\t)[]\n): RichTextFunctionSerializer<SerializerReturnType> => {\n\treturn (...args) => {\n\t\tfor (let i = 0; i < serializers.length; i++) {\n\t\t\tconst serializer = serializers[i];\n\n\t\t\tif (serializer) {\n\t\t\t\tconst res = serializer(...args);\n\n\t\t\t\tif (res != null) {\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n"],"names":[],"mappings":";;;AAca,MAAA,qBAAqB,CAAA,GAC9B,gBAIkD;IACrD,OAAO,CAAA,GAAI,SAAQ;QAClB,IAAA,IAAS,IAAI,GAAG,IAAI,YAAY,MAAA,EAAQ,IAAK;YACtC,MAAA,aAAa,WAAA,CAAY,CAAC,CAAA;YAEhC,IAAI,YAAY;gBACT,MAAA,MAAM,WAAW,GAAG,IAAI;gBAE9B,IAAI,OAAO,MAAM;oBACT,OAAA;gBACP;YACD;QACD;IAAA;AAEH","ignoreList":[0]}},
    {"offset": {"line": 2165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2171, "column": 0}, "map": {"version":3,"file":"serialize.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/serialize.ts"],"sourcesContent":["import { RichTextField } from \"@prismicio/types\";\nimport { RichTextFunctionSerializer, TreeNode } from \"./types\";\nimport { asTree } from \"./asTree\";\n\n/**\n * Serializes a rich text or title field with a given serializer\n *\n * @remarks\n * This is a low level helper mainly intended to be used by higher level\n * packages Most users aren't expected to this function directly\n * @typeParam SerializerReturnType - Return type of the serializer\n * @param richTextField - A rich text or title field from Prismic\n * @param serializer - A function serializer to apply\n *\n * @returns An array of serialized nodes\n * @see Templating rich text and title fields from Prismic {@link https://prismic.io/docs/technologies/templating-rich-text-and-title-fields-javascript}\n */\nexport const serialize = <SerializerReturnType>(\n\trichTextField: RichTextField,\n\tserializer: RichTextFunctionSerializer<SerializerReturnType>,\n): SerializerReturnType[] => {\n\treturn serializeTreeNodes<SerializerReturnType>(\n\t\tasTree(richTextField).children,\n\t\tserializer,\n\t);\n};\n\nconst serializeTreeNodes = <T>(\n\tnodes: TreeNode[],\n\tserializer: RichTextFunctionSerializer<T>,\n): T[] => {\n\tconst serializedTreeNodes: T[] = [];\n\n\tfor (let i = 0; i < nodes.length; i++) {\n\t\tconst treeNode = nodes[i];\n\t\tconst serializedTreeNode = serializer(\n\t\t\ttreeNode.type,\n\t\t\ttreeNode.node,\n\t\t\ttreeNode.text,\n\t\t\tserializeTreeNodes(treeNode.children, serializer),\n\t\t\ttreeNode.key,\n\t\t);\n\n\t\tif (serializedTreeNode != null) {\n\t\t\tserializedTreeNodes.push(serializedTreeNode);\n\t\t}\n\t}\n\n\treturn serializedTreeNodes;\n};\n"],"names":[],"mappings":";;;;;AAiBa,MAAA,YAAY,CACxB,eACA,eAC2B;IAC3B,OAAO,oLACN,SAAA,EAAO,aAAa,EAAE,QAAA,EACtB,UAAU;AAEZ;AAEA,MAAM,qBAAqB,CAC1B,OACA,eACQ;IACR,MAAM,sBAA2B,CAAA,CAAA;IAEjC,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAAK;QAChC,MAAA,WAAW,KAAA,CAAM,CAAC,CAAA;QACxB,MAAM,qBAAqB,WAC1B,SAAS,IAAA,EACT,SAAS,IAAA,EACT,SAAS,IAAA,EACT,mBAAmB,SAAS,QAAA,EAAU,UAAU,GAChD,SAAS,GAAG;QAGb,IAAI,sBAAsB,MAAM;YAC/B,oBAAoB,IAAA,CAAK,kBAAkB;QAC3C;IACD;IAEM,OAAA;AACR","ignoreList":[0]}},
    {"offset": {"line": 2192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2198, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/types.ts"],"sourcesContent":["import {\n\tRichTextNodeType,\n\tRTAnyNode,\n\tRTEmbedNode,\n\tRTEmNode,\n\tRTHeading1Node,\n\tRTHeading2Node,\n\tRTHeading3Node,\n\tRTHeading4Node,\n\tRTHeading5Node,\n\tRTHeading6Node,\n\tRTImageNode,\n\tRTLabelNode,\n\tRTLinkNode,\n\tRTListItemNode,\n\tRTListNode,\n\tRTOListItemNode,\n\tRTOListNode,\n\tRTParagraphNode,\n\tRTPreformattedNode,\n\tRTSpanNode,\n\tRTStrongNode,\n} from \"@prismicio/types\";\n\n// Serializers\n\n/**\n * Serializes a node from a rich text or title field with a function\n *\n * @typeParam ReturnType - Return type of the function serializer\n * @see Templating rich text and title fields from Prismic {@link https://prismic.io/docs/technologies/templating-rich-text-and-title-fields-javascript}\n */\nexport type RichTextFunctionSerializer<ReturnType> = (\n\ttype: (typeof RichTextNodeType)[keyof typeof RichTextNodeType],\n\tnode: RTAnyNode,\n\ttext: string | undefined,\n\tchildren: ReturnType[],\n\tkey: string,\n) => ReturnType | null | undefined;\n\n/**\n * Map serializer's tag function serializer, can be helpful for typing those\n * handlers\n *\n * @typeParam ReturnType - Return type of the tag serializer\n */\nexport type RichTextMapSerializerFunction<\n\tReturnType,\n\tNode extends RTAnyNode = RTAnyNode,\n\tTextType = string | undefined,\n> = (payload: {\n\ttype: Node[\"type\"];\n\tnode: Node;\n\ttext: TextType;\n\tchildren: ReturnType[];\n\tkey: string;\n}) => ReturnType | null | undefined;\n\n/**\n * Serializes a node from a rich text or title field with a map\n *\n * @remarks\n * This type of serializer needs to be processed through\n * {@link wrapMapSerializer} before being used with {@link serialize}\n * @typeParam ReturnType - Return type of the map serializer\n * @see Templating rich text and title fields from Prismic {@link https://prismic.io/docs/technologies/templating-rich-text-and-title-fields-javascript}\n */\nexport type RichTextMapSerializer<ReturnType> = {\n\theading1?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTHeading1Node,\n\t\tundefined\n\t>;\n\theading2?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTHeading2Node,\n\t\tundefined\n\t>;\n\theading3?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTHeading3Node,\n\t\tundefined\n\t>;\n\theading4?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTHeading4Node,\n\t\tundefined\n\t>;\n\theading5?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTHeading5Node,\n\t\tundefined\n\t>;\n\theading6?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTHeading6Node,\n\t\tundefined\n\t>;\n\tparagraph?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTParagraphNode,\n\t\tundefined\n\t>;\n\tpreformatted?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTPreformattedNode,\n\t\tundefined\n\t>;\n\tstrong?: RichTextMapSerializerFunction<ReturnType, RTStrongNode, string>;\n\tem?: RichTextMapSerializerFunction<ReturnType, RTEmNode, string>;\n\tlistItem?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTListItemNode,\n\t\tundefined\n\t>;\n\toListItem?: RichTextMapSerializerFunction<\n\t\tReturnType,\n\t\tRTOListItemNode,\n\t\tundefined\n\t>;\n\tlist?: RichTextMapSerializerFunction<ReturnType, RTListNode, undefined>;\n\toList?: RichTextMapSerializerFunction<ReturnType, RTOListNode, undefined>;\n\timage?: RichTextMapSerializerFunction<ReturnType, RTImageNode, undefined>;\n\tembed?: RichTextMapSerializerFunction<ReturnType, RTEmbedNode, undefined>;\n\thyperlink?: RichTextMapSerializerFunction<ReturnType, RTLinkNode, string>;\n\tlabel?: RichTextMapSerializerFunction<ReturnType, RTLabelNode, string>;\n\tspan?: RichTextMapSerializerFunction<ReturnType, RTSpanNode, string>;\n};\n\n// Tree\nexport interface Tree {\n\tkey: string;\n\tchildren: TreeNode[];\n}\n\nexport interface TreeNode {\n\tkey: string;\n\ttype: (typeof RichTextNodeType)[keyof typeof RichTextNodeType];\n\ttext?: string;\n\tnode: RTAnyNode;\n\tchildren: TreeNode[];\n}\n\n// Helpers\nexport const RichTextReversedNodeType = {\n\t[RichTextNodeType.listItem]: \"listItem\",\n\t[RichTextNodeType.oListItem]: \"oListItem\",\n\t[RichTextNodeType.list]: \"list\",\n\t[RichTextNodeType.oList]: \"oList\",\n} as const;\n"],"names":[],"mappings":";;;;;AAgJO,MAAM,2BAA2B;IACvC,sKAAC,mBAAA,CAAiB,QAAQ,CAAA,EAAG;IAC7B,sKAAC,mBAAA,CAAiB,SAAS,CAAA,EAAG;IAC9B,sKAAC,mBAAA,CAAiB,IAAI,CAAA,EAAG;IACzB,sKAAC,mBAAA,CAAiB,KAAK,CAAA,EAAG","ignoreList":[0]}},
    {"offset": {"line": 2211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2217, "column": 0}, "map": {"version":3,"file":"wrapMapSerializer.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/wrapMapSerializer.ts"],"sourcesContent":["import {\n\tRichTextFunctionSerializer,\n\tRichTextMapSerializer,\n\tRichTextReversedNodeType,\n} from \"./types\";\n\n/**\n * Wraps a map serializer into a regular function serializer\n *\n * @remarks\n * This is a low level helper mainly intended to be used by higher level\n * packages Most users aren't expected to this function directly\n * @typeParam SerializerReturnType - Return type of the map serializer\n * @param mapSerializer - Map serializer to wrap\n *\n * @returns A regular function serializer\n */\nexport const wrapMapSerializer = <SerializerReturnType>(\n\tmapSerializer: RichTextMapSerializer<SerializerReturnType>,\n): RichTextFunctionSerializer<SerializerReturnType> => {\n\treturn (type, node, text, children, key) => {\n\t\tconst tagSerializer: RichTextMapSerializer<SerializerReturnType>[keyof RichTextMapSerializer<SerializerReturnType>] =\n\t\t\tmapSerializer[\n\t\t\t\t(RichTextReversedNodeType[\n\t\t\t\t\ttype as keyof typeof RichTextReversedNodeType\n\t\t\t\t] || type) as keyof RichTextMapSerializer<SerializerReturnType>\n\t\t\t];\n\n\t\tif (tagSerializer) {\n\t\t\treturn tagSerializer({\n\t\t\t\t// @ts-expect-error cannot type check here\n\t\t\t\ttype,\n\t\t\t\t// @ts-expect-error cannot type check here\n\t\t\t\tnode,\n\t\t\t\t// @ts-expect-error cannot type check here\n\t\t\t\ttext,\n\t\t\t\t// @ts-expect-error cannot type check here\n\t\t\t\tchildren,\n\t\t\t\t// @ts-expect-error cannot type check here\n\t\t\t\tkey,\n\t\t\t});\n\t\t}\n\t};\n};\n"],"names":[],"mappings":";;;;;AAiBa,MAAA,oBAAoB,CAChC,kBACqD;IACrD,OAAO,CAAC,MAAM,MAAM,MAAM,UAAU,QAAO;QAC1C,MAAM,gBACL,aAAA,6JACE,2BAAA,CACA,IAA6C,CAAA,IACzC,IAA0D,CAAA;QAGjE,IAAI,eAAe;YAClB,OAAO,cAAc;gBAAA,0CAAA;gBAEpB;gBAAA,0CAAA;gBAEA;gBAAA,0CAAA;gBAEA;gBAAA,0CAAA;gBAEA;gBAAA,0CAAA;gBAEA;YAAA,CACA;QACD;IAAA;AAEH","ignoreList":[0]}},
    {"offset": {"line": 2243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2286, "column": 0}, "map": {"version":3,"file":"package.json.js","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2298, "column": 0}, "map": {"version":3,"file":"devMsg.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/lib/devMsg.ts"],"sourcesContent":["import { version } from \"../../package.json\";\n\n/**\n * Returns a `prismic.dev/msg` URL for a given message slug.\n *\n * @example\n *\n * ```ts\n * devMsg(\"missing-param\");\n * // => \"https://prismic.dev/msg/react/v1.2.3/missing-param.md\"\n * ```\n *\n * @param slug - Slug for the message. This corresponds to a Markdown file in\n *   the Git repository's `/messages` directory.\n *\n * @returns The `prismic.dev/msg` URL for the given slug.\n */\nexport const devMsg = (slug: string) => {\n\treturn `https://prismic.dev/msg/react/v${version}/${slug}`;\n};\n"],"names":[],"mappings":";;;;;AAiBa,MAAA,SAAS,CAAC,SAAgB;IACtC,OAAO,CAAA,+BAAA,qKAAkC,UAAA,CAAA,CAAA,EAAW,MAAA;AACrD","ignoreList":[0]}},
    {"offset": {"line": 2308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2314, "column": 0}, "map": {"version":3,"file":"isFilled.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/react/node_modules/%40prismicio/client/dist/helpers/isFilled.js"],"sourcesContent":["const isNonNullish = (input) => {\n  return input != null;\n};\nconst isNonEmptyArray = (input) => {\n  return !!input.length;\n};\nconst richText = (field) => {\n  if (!isNonNullish(field)) {\n    return false;\n  } else if (field.length === 1 && \"text\" in field[0]) {\n    return !!field[0].text;\n  } else {\n    return !!field.length;\n  }\n};\nconst title = richText;\nconst imageThumbnail = (thumbnail) => {\n  return isNonNullish(thumbnail) && !!thumbnail.url;\n};\nconst image = imageThumbnail;\nconst link = (field) => {\n  return isNonNullish(field) && (\"id\" in field || \"url\" in field);\n};\nconst linkToMedia = link;\nconst contentRelationship = link;\nconst date = isNonNullish;\nconst timestamp = isNonNullish;\nconst color = isNonNullish;\nconst number = isNonNullish;\nconst keyText = (field) => {\n  return isNonNullish(keyText) && !!field;\n};\nconst select = isNonNullish;\nconst embed = (field) => {\n  return isNonNullish(field) && !!field.embed_url;\n};\nconst geoPoint = (field) => {\n  return isNonNullish(field) && \"longitude\" in field;\n};\nconst integrationField = isNonNullish;\nconst integrationFields = integrationField;\nconst group = (group2) => {\n  return isNonNullish(group2) && isNonEmptyArray(group2);\n};\nconst sliceZone = (slices) => {\n  return isNonNullish(slices) && isNonEmptyArray(slices);\n};\nexport {\n  color,\n  contentRelationship,\n  date,\n  embed,\n  geoPoint,\n  group,\n  image,\n  imageThumbnail,\n  integrationField,\n  integrationFields,\n  keyText,\n  link,\n  linkToMedia,\n  number,\n  richText,\n  select,\n  sliceZone,\n  timestamp,\n  title\n};\n//# sourceMappingURL=isFilled.js.map\n"],"names":[],"mappings":";;;;;AAAA,MAAM,eAAe,CAAC,UAAU;IAC9B,OAAO,SAAS;AAClB;AAIK,MAAC,WAAW,CAAC,UAAU;IAC1B,IAAI,CAAC,aAAa,KAAK,GAAG;QACxB,OAAO;IACX,OAAA,IAAa,MAAM,MAAA,KAAW,KAAK,UAAU,KAAA,CAAM,CAAC,CAAA,EAAG;QACnD,OAAO,CAAC,CAAC,KAAA,CAAM,CAAC,CAAA,CAAE,IAAA;IACtB,OAAS;QACL,OAAO,CAAC,CAAC,MAAM,MAAA;IAChB;AACH;AAEK,MAAC,iBAAiB,CAAC,cAAc;IACpC,OAAO,aAAa,SAAS,KAAK,CAAC,CAAC,UAAU,GAAA;AAChD;AAEK,MAAC,OAAO,CAAC,UAAU;IACtB,OAAO,aAAa,KAAK,KAAA,CAAM,QAAQ,SAAS,SAAS,KAAA;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2345, "column": 0}, "map": {"version":3,"file":"link.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/react/node_modules/%40prismicio/client/dist/types/value/link.js"],"sourcesContent":["const LinkType = {\n  Any: \"Any\",\n  Document: \"Document\",\n  Media: \"Media\",\n  Web: \"Web\"\n};\nexport {\n  LinkType\n};\n//# sourceMappingURL=link.js.map\n"],"names":[],"mappings":";;;AAAK,MAAC,WAAW;IACf,KAAK;IACL,UAAU;IACV,OAAO;IACP,KAAK;AACP","ignoreList":[0]}},
    {"offset": {"line": 2356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2362, "column": 0}, "map": {"version":3,"file":"documentToLinkField.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/react/node_modules/%40prismicio/client/dist/helpers/documentToLinkField.js"],"sourcesContent":["import { LinkType } from \"../types/value/link.js\";\nconst documentToLinkField = (prismicDocument) => {\n  var _a;\n  return {\n    link_type: LinkType.Document,\n    id: prismicDocument.id,\n    uid: prismicDocument.uid || void 0,\n    type: prismicDocument.type,\n    tags: prismicDocument.tags,\n    lang: prismicDocument.lang,\n    url: prismicDocument.url == null ? void 0 : prismicDocument.url,\n    slug: (_a = prismicDocument.slugs) == null ? void 0 : _a[0],\n    // Slug field is not available with GraphQL\n    // The REST API does not include a `data` property if the data\n    // object is empty.\n    //\n    // A presence check for `prismicDocument.data` is done to\n    // support partial documents. While `documentToLinkField` is\n    // not typed to accept partial documents, passing a partial\n    // document can happen in untyped projects.\n    ...prismicDocument.data && Object.keys(prismicDocument.data).length > 0 ? { data: prismicDocument.data } : {}\n  };\n};\nexport {\n  documentToLinkField\n};\n//# sourceMappingURL=documentToLinkField.js.map\n"],"names":[],"mappings":";;;;;AACK,MAAC,sBAAsB,CAAC,oBAAoB;IAC/C,IAAI;IACJ,OAAO;QACL,uOAAW,WAAA,CAAS,QAAA;QACpB,IAAI,gBAAgB,EAAA;QACpB,KAAK,gBAAgB,GAAA,IAAO,KAAA;QAC5B,MAAM,gBAAgB,IAAA;QACtB,MAAM,gBAAgB,IAAA;QACtB,MAAM,gBAAgB,IAAA;QACtB,KAAK,gBAAgB,GAAA,IAAO,OAAO,KAAA,IAAS,gBAAgB,GAAA;QAC5D,MAAA,CAAO,KAAK,gBAAgB,KAAA,KAAU,OAAO,KAAA,IAAS,EAAA,CAAG,CAAC,CAAA;QAAA,2CAAA;QAAA,8DAAA;QAAA,mBAAA;QAAA,EAAA;QAAA,yDAAA;QAAA,4DAAA;QAAA,2DAAA;QAAA,2CAAA;QAS1D,GAAG,gBAAgB,IAAA,IAAQ,OAAO,IAAA,CAAK,gBAAgB,IAAI,EAAE,MAAA,GAAS,IAAI;YAAE,MAAM,gBAAgB,IAAA;QAAM,IAAG,CAAE,CAAA;IACjH;AACA","ignoreList":[0]}},
    {"offset": {"line": 2393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2399, "column": 0}, "map": {"version":3,"file":"asLink.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/react/node_modules/%40prismicio/client/dist/helpers/asLink.js"],"sourcesContent":["import { LinkType } from \"../types/value/link.js\";\nimport { documentToLinkField } from \"./documentToLinkField.js\";\nconst asLink = (linkFieldOrDocument, ...configObjectOrTuple) => {\n  if (!linkFieldOrDocument) {\n    return null;\n  }\n  const linkField = (\n    // prettier-ignore\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n    // TODO: Remove the `prettier-ignore` comment when this bug is fixed.\n    \"link_type\" in linkFieldOrDocument ? linkFieldOrDocument : documentToLinkField(linkFieldOrDocument)\n  );\n  const [configObjectOrLinkResolver] = configObjectOrTuple;\n  let config;\n  if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n    config = {\n      linkResolver: configObjectOrLinkResolver\n    };\n  } else {\n    config = { ...configObjectOrLinkResolver };\n  }\n  switch (linkField.link_type) {\n    case LinkType.Media:\n    case LinkType.Web:\n      return \"url\" in linkField ? linkField.url : null;\n    case LinkType.Document: {\n      if (\"id\" in linkField && config.linkResolver) {\n        const resolvedURL = config.linkResolver(linkField);\n        if (resolvedURL != null) {\n          return resolvedURL;\n        }\n      }\n      if (\"url\" in linkField && linkField.url) {\n        return linkField.url;\n      }\n      return null;\n    }\n    case LinkType.Any:\n    default:\n      return null;\n  }\n};\nexport {\n  asLink\n};\n//# sourceMappingURL=asLink.js.map\n"],"names":[],"mappings":";;;;;;;AAEK,MAAC,SAAS,CAAC,qBAAA,GAAwB,wBAAwB;IAC9D,IAAI,CAAC,qBAAqB;QACxB,OAAO;IACR;IACD,MAAM,YAAA,kBAAA;IAAA,6DAAA;IAAA,2FAAA;IAAA,qEAAA;IAKJ,eAAe,sBAAsB,8PAAsB,sBAAA,EAAoB,mBAAmB;IAEpG,MAAM,CAAC,0BAA0B,CAAA,GAAI;IACrC,IAAI;IACJ,IAAI,OAAO,+BAA+B,cAAc,8BAA8B,MAAM;QAC1F,SAAS;YACP,cAAc;QACpB;IACA,OAAS;QACL,SAAS;YAAE,GAAG,0BAAA;QAAA;IACf;IACD,OAAQ,UAAU,SAAA,EAAS;QACzB,iOAAK,WAAA,CAAS,KAAA;QACd,iOAAK,WAAA,CAAS,GAAA;YACZ,OAAO,SAAS,YAAY,UAAU,GAAA,GAAM;QAC9C,iOAAK,WAAA,CAAS,QAAA;YAAU;gBACtB,IAAI,QAAQ,aAAa,OAAO,YAAA,EAAc;oBAC5C,MAAM,cAAc,OAAO,YAAA,CAAa,SAAS;oBACjD,IAAI,eAAe,MAAM;wBACvB,OAAO;oBACR;gBACF;gBACD,IAAI,SAAS,aAAa,UAAU,GAAA,EAAK;oBACvC,OAAO,UAAU,GAAA;gBAClB;gBACD,OAAO;YACR;QACD,iOAAK,WAAA,CAAS,GAAA;QACd;YACE,OAAO;IACV;AACH","ignoreList":[0]}},
    {"offset": {"line": 2450, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2456, "column": 0}, "map": {"version":3,"file":"isInternalURL.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/react/node_modules/%40prismicio/client/dist/lib/isInternalURL.js"],"sourcesContent":["const isInternalURL = (url) => {\n  const isInternal = /^(\\/(?!\\/)|#)/.test(url);\n  const isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n  return isInternal && !isSpecialLink;\n};\nexport {\n  isInternalURL\n};\n//# sourceMappingURL=isInternalURL.js.map\n"],"names":[],"mappings":";;;AAAK,MAAC,gBAAgB,CAAC,QAAQ;IAC7B,MAAM,aAAa,gBAAgB,IAAA,CAAK,GAAG;IAC3C,MAAM,gBAAgB,CAAC,cAAc,CAAC,eAAe,IAAA,CAAK,GAAG;IAC7D,OAAO,cAAc,CAAC;AACxB","ignoreList":[0]}},
    {"offset": {"line": 2466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2472, "column": 0}, "map": {"version":3,"file":"asLinkAttrs.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/react/node_modules/%40prismicio/client/dist/helpers/asLinkAttrs.js"],"sourcesContent":["import { isInternalURL } from \"../lib/isInternalURL.js\";\nimport { asLink } from \"./asLink.js\";\nimport { link } from \"./isFilled.js\";\nconst asLinkAttrs = (linkFieldOrDocument, config = {}) => {\n  if (linkFieldOrDocument && // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n  (\"link_type\" in linkFieldOrDocument ? link(linkFieldOrDocument) : linkFieldOrDocument)) {\n    const target = (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n      \"target\" in linkFieldOrDocument ? linkFieldOrDocument.target : void 0\n    );\n    const rawHref = asLink(linkFieldOrDocument, config.linkResolver);\n    const href = rawHref == null ? void 0 : rawHref;\n    const isExternal = typeof href === \"string\" ? !isInternalURL(href) : false;\n    const rel = config.rel ? config.rel({ href, isExternal, target }) : isExternal ? \"noreferrer\" : void 0;\n    return {\n      href,\n      target,\n      rel: rel == null ? void 0 : rel\n    };\n  }\n  return {};\n};\nexport {\n  asLinkAttrs\n};\n//# sourceMappingURL=asLinkAttrs.js.map\n"],"names":[],"mappings":";;;;;;;;;AAGK,MAAC,cAAc,CAAC,qBAAqB,SAAS,CAAA,CAAA,KAAO;IACxD,IAAI,uBAAA,6DAAA;IAAA,2FAAA;IAAA,CAEH,eAAe,mPAAsB,OAAA,EAAK,mBAAmB,IAAI,mBAAA,GAAsB;QACtF,MAAM,SAAA,6DAAA;QAAA,2FAAA;QAGJ,YAAY,sBAAsB,oBAAoB,MAAA,GAAS,KAAA;QAEjE,MAAM,qOAAU,SAAA,EAAO,qBAAqB,OAAO,YAAY;QAC/D,MAAM,OAAO,WAAW,OAAO,KAAA,IAAS;QACxC,MAAM,aAAa,OAAO,SAAS,WAAW,+NAAC,gBAAA,EAAc,IAAI,IAAI;QACrE,MAAM,MAAM,OAAO,GAAA,GAAM,OAAO,GAAA,CAAI;YAAE;YAAM;YAAY;QAAM,CAAE,IAAI,aAAa,eAAe,KAAA;QAChG,OAAO;YACL;YACA;YACA,KAAK,OAAO,OAAO,KAAA,IAAS;QAClC;IACG;IACD,OAAO,CAAA;AACT","ignoreList":[0]}},
    {"offset": {"line": 2506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2512, "column": 0}, "map": {"version":3,"file":"isInternalURL.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/lib/isInternalURL.ts"],"sourcesContent":["/**\n * Determines if a URL is internal or external.\n *\n * @param url - The URL to check if internal or external.\n *\n * @returns `true` if `url` is internal, `false` otherwise.\n */\n// TODO: This does not detect all relative URLs as internal such as `about` or `./about`. This function assumes relative URLs start with a \"/\" or \"#\"`.\nexport const isInternalURL = (url: string): boolean => {\n\tconst isInternal = /^(\\/(?!\\/)|#)/.test(url);\n\tconst isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n\n\treturn isInternal && !isSpecialLink;\n};\n"],"names":[],"mappings":";;;AAQa,MAAA,gBAAgB,CAAC,QAAwB;IAC/C,MAAA,aAAa,gBAAgB,IAAA,CAAK,GAAG;IAC3C,MAAM,gBAAgB,CAAC,cAAc,CAAC,eAAe,IAAA,CAAK,GAAG;IAE7D,OAAO,cAAc,CAAC;AACvB","ignoreList":[0]}},
    {"offset": {"line": 2522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2528, "column": 0}, "map": {"version":3,"file":"PrismicLink.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/react-server/PrismicLink.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n\tLinkField,\n\tLinkResolverFunction,\n\tPrismicDocument,\n\tasLinkAttrs,\n\tAsLinkAttrsConfig,\n} from \"@prismicio/client\";\n\nimport { devMsg } from \"../lib/devMsg\";\nimport { isInternalURL } from \"../lib/isInternalURL\";\n\n/**\n * The default component rendered for internal and external links.\n */\nexport const defaultComponent = \"a\";\n\n/**\n * Props provided to a component when rendered with `<PrismicLink>`.\n */\nexport interface LinkProps {\n\t/**\n\t * The URL to link.\n\t */\n\thref: string;\n\n\t/**\n\t * The `target` attribute for anchor elements. If the Prismic field is\n\t * configured to open in a new window, this prop defaults to `_blank`.\n\t */\n\ttarget?: React.HTMLAttributeAnchorTarget;\n\n\t/**\n\t * The `rel` attribute for anchor elements. If the `target` prop is set to\n\t * `\"_blank\"`, this prop defaults to `\"noopener noreferrer\"`.\n\t */\n\trel?: string;\n\n\t/**\n\t * Children for the component. *\n\t */\n\tchildren?: React.ReactNode;\n}\n\nexport type PrismicLinkProps<\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n> = Omit<\n\tInternalComponentProps & ExternalComponentProps,\n\t\"rel\" | \"href\" | \"children\"\n> & {\n\t/**\n\t * The `rel` attribute for the link. By default, `\"noreferrer\"` is provided if\n\t * the link's URL is external. This prop can be provided a function to use the\n\t * link's metadata to determine the `rel` value.\n\t */\n\trel?: string | AsLinkAttrsConfig[\"rel\"];\n\n\t/**\n\t * The Link Resolver used to resolve links.\n\t *\n\t * @remarks\n\t * If your app uses Route Resolvers when querying for your Prismic\n\t * repository's content, a Link Resolver does not need to be provided.\n\t * @see Learn about Link Resolvers and Route Resolvers {@link https://prismic.io/docs/core-concepts/link-resolver-route-resolver}\n\t */\n\tlinkResolver?: LinkResolverFunction;\n\n\t/**\n\t * The component rendered for internal URLs. Defaults to `<a>`.\n\t *\n\t * If your app uses a client-side router that requires a special Link\n\t * component, provide the Link component to this prop.\n\t */\n\tinternalComponent?: React.ElementType<InternalComponentProps>;\n\n\t/**\n\t * The component rendered for external URLs. Defaults to `<a>`.\n\t */\n\texternalComponent?: React.ComponentType<ExternalComponentProps>;\n\n\t/**\n\t * The children to render for the link. If no children are provided, the\n\t * link's `text` property will be used.\n\t */\n\tchildren?: React.ReactNode;\n} & (\n\t\t| {\n\t\t\t\tdocument: PrismicDocument | null | undefined;\n\t\t\t\thref?: never;\n\t\t\t\tfield?: never;\n\t\t  }\n\t\t| {\n\t\t\t\tfield: LinkField | null | undefined;\n\t\t\t\thref?: never;\n\t\t\t\tdocument?: never;\n\t\t  }\n\t\t| {\n\t\t\t\thref: LinkProps[\"href\"];\n\t\t\t\tfield?: LinkField | null | undefined;\n\t\t\t\tdocument?: never;\n\t\t  }\n\t);\n\nexport const PrismicLink = React.forwardRef(function PrismicLink<\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n>(\n\tprops: PrismicLinkProps<InternalComponentProps, ExternalComponentProps>,\n\tref: React.ForwardedRef<Element>,\n): JSX.Element {\n\tconst {\n\t\tfield,\n\t\tdocument: doc,\n\t\tlinkResolver,\n\t\tinternalComponent,\n\t\texternalComponent,\n\t\tchildren,\n\t\t...restProps\n\t} = props;\n\n\tif (\n\t\ttypeof process !== \"undefined\" &&\n\t\tprocess.env.NODE_ENV === \"development\"\n\t) {\n\t\tif (field) {\n\t\t\tif (!field.link_type) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`[PrismicLink] This \"field\" prop value caused an error to be thrown.\\n`,\n\t\t\t\t\tfield,\n\t\t\t\t);\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`[PrismicLink] The provided field is missing required properties to properly render a link. The link will not render. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\t(\"text\" in field\n\t\t\t\t\t? Object.keys(field).length > 2\n\t\t\t\t\t: Object.keys(field).length > 1) &&\n\t\t\t\t!(\"url\" in field || \"uid\" in field || \"id\" in field)\n\t\t\t) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[PrismicLink] The provided field is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t\tfield,\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (doc) {\n\t\t\tif (!(\"url\" in doc || \"id\" in doc)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[PrismicLink] The provided document is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\n\t\t\t\t\t\t\"missing-link-properties\",\n\t\t\t\t\t)}`,\n\t\t\t\t\tdoc,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst {\n\t\thref: computedHref,\n\t\trel: computedRel,\n\t\t...attrs\n\t} = asLinkAttrs(field ?? doc, {\n\t\tlinkResolver,\n\t\trel: typeof restProps.rel === \"function\" ? restProps.rel : undefined,\n\t});\n\n\tlet rel: string | undefined = computedRel;\n\tif (\"rel\" in restProps && typeof restProps.rel !== \"function\") {\n\t\trel = restProps.rel;\n\t}\n\n\tconst href = (\"href\" in restProps ? restProps.href : computedHref) || \"\";\n\n\tconst InternalComponent = (internalComponent ||\n\t\tdefaultComponent) as React.ComponentType<LinkProps>;\n\tconst ExternalComponent = (externalComponent ||\n\t\tdefaultComponent) as React.ComponentType<LinkProps>;\n\tconst Component =\n\t\thref && isInternalURL(href) ? InternalComponent : ExternalComponent;\n\n\treturn (\n\t\t<Component ref={ref} {...attrs} {...restProps} href={href} rel={rel}>\n\t\t\t{\"children\" in props ? children : field?.text}\n\t\t</Component>\n\t);\n}) as <\n\tInternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n\tExternalComponentProps = React.ComponentProps<typeof defaultComponent>,\n>(\n\tprops: PrismicLinkProps<InternalComponentProps, ExternalComponentProps> & {\n\t\tref?: React.ForwardedRef<Element>;\n\t},\n) => JSX.Element;\n"],"names":["PrismicLink"],"mappings":";;;;;;AA0HS;;;;;;;;;AA3GF,MAAM,mBAAmB;AAyFzB,MAAM,cAAc,8JAAM,UAAA,CAAW,SAASA,aAIpD,KAAA,EACA,GAAA,EAAgC;IAE1B,MAAA,EACL,KAAA,EACA,UAAU,GAAA,EACV,YAAA,EACA,iBAAA,EACA,iBAAA,EACA,QAAA,EACA,GAAG,UAAA,CAAA,GACA;IAEJ,IACC,kLAAO,KAAY,eACnB,QAAQ,IAAI,wCAAa,eACxB;QACD,IAAI,OAAO;YACN,IAAA,CAAC,MAAM,SAAA,EAAW;gBACrB,QAAQ,KAAA,CACP,CAAA;AAAA,CAAA,EACA,KAAK;gBAEN,MAAM,IAAI,MACT,CAAA,2IAAA,uKAA8I,SAAA,EAC7I,yBAAyB,GACvB;YAAA,OAAA,IAAA,CAGH,UAAU,QACR,OAAO,IAAA,CAAK,KAAK,EAAE,MAAA,GAAS,IAC5B,OAAO,IAAA,CAAK,KAAK,EAAE,MAAA,GAAS,CAAA,KAC/B,CAAA,CAAE,SAAS,SAAS,SAAS,SAAS,QAAQ,KAAA,GAC7C;gBACD,QAAQ,IAAA,CACP,CAAA,oJAAA,uKAAuJ,SAAA,EACtJ,yBAAyB,GAAA,EAE1B,KAAK;YAEN;QAAA,OAAA,IACS,KAAK;YACf,IAAI,CAAA,CAAE,SAAS,OAAO,QAAQ,GAAA,GAAM;gBACnC,QAAQ,IAAA,CACP,CAAA,uJAAA,uKAA0J,SAAA,EACzJ,yBAAyB,GAAA,EAE1B,GAAG;YAEJ;QACD;IACD;IAEK,MAAA,EACL,MAAM,YAAA,EACN,KAAK,WAAA,EACL,GAAG,OAAA,OACA,0OAAA,EAAY,SAAS,KAAK;QAC7B;QACA,KAAK,OAAO,UAAU,GAAA,KAAQ,aAAa,UAAU,GAAA,GAAM,KAAA;IAAA,CAC3D;IAED,IAAI,MAA0B;IAC9B,IAAI,SAAS,aAAa,OAAO,UAAU,GAAA,KAAQ,YAAY;QAC9D,MAAM,UAAU,GAAA;IAChB;IAED,MAAM,OAAA,CAAQ,UAAU,YAAY,UAAU,IAAA,GAAO,YAAA,KAAiB;IAEtE,MAAM,oBAAqB,qBAC1B;IACD,MAAM,oBAAqB,qBAC1B;IACD,MAAM,YACL,oLAAQ,gBAAA,EAAc,IAAI,IAAI,oBAAoB;IAEnD,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,WAAA;QAAU;QAAc,GAAA,KAAA;QAAW,GAAA,SAAA;QAAW;QAAY;QACzD,UAAA,cAAc,QAAQ,WAAW,SAAA,OAAA,KAAA,IAAA,MAAO,IAAA;IAC1C,CAAA;AAEF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2590, "column": 0}, "map": {"version":3,"file":"PrismicRichText.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/react-server/PrismicRichText.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as prismic from \"@prismicio/client\";\nimport * as prismicR from \"@prismicio/richtext\";\nimport * as prismicT from \"@prismicio/types\";\n\nimport { JSXFunctionSerializer, JSXMapSerializer } from \"../types\";\nimport { LinkProps, PrismicLink } from \"./PrismicLink\";\nimport { devMsg } from \"../lib/devMsg\";\n\n/**\n * Props for `<PrismicRichText>`.\n */\nexport type PrismicRichTextProps<\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any> = prismic.LinkResolverFunction,\n> = {\n\t/**\n\t * The Prismic Rich Text field to render.\n\t */\n\tfield: prismic.RichTextField | null | undefined;\n\n\t/**\n\t * The Link Resolver used to resolve links.\n\t *\n\t * @remarks\n\t * If your app uses Route Resolvers when querying for your Prismic\n\t * repository's content, a Link Resolver does not need to be provided.\n\t * @see Learn about Link Resolvers and Route Resolvers {@link https://prismic.io/docs/core-concepts/link-resolver-route-resolver}\n\t */\n\tlinkResolver?: LinkResolverFunction;\n\n\t/**\n\t * A map or function that maps a Rich Text block to a React component.\n\t *\n\t * @remarks\n\t * Prefer using a map serializer over the function serializer when possible.\n\t * The map serializer is simpler to maintain.\n\t * @example A map serializer.\n\t *\n\t * ```jsx\n\t * {\n\t *   heading1: ({children}) => <Heading>{children}</Heading>\n\t * }\n\t * ```\n\t *\n\t * @example A function serializer.\n\t *\n\t * ```jsx\n\t * (type, node, content, children) => {\n\t * \tswitch (type) {\n\t * \t\tcase \"heading1\": {\n\t * \t\t\treturn <Heading>{children}</Heading>;\n\t * \t\t}\n\t * \t}\n\t * };\n\t * ```\n\t */\n\tcomponents?: JSXMapSerializer | JSXFunctionSerializer;\n\n\t/**\n\t * The React component rendered for links when the URL is internal.\n\t *\n\t * @defaultValue `<a>`\n\t */\n\tinternalLinkComponent?: React.ComponentType<LinkProps>;\n\n\t/**\n\t * The React component rendered for links when the URL is external.\n\t *\n\t * @defaultValue `<a>`\n\t */\n\texternalLinkComponent?: React.ComponentType<LinkProps>;\n\n\t/**\n\t * The value to be rendered when the field is empty. If a fallback is not\n\t * given, `null` will be rendered.\n\t */\n\tfallback?: React.ReactNode;\n};\n\ntype CreateDefaultSerializerArgs<\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any> = prismic.LinkResolverFunction,\n> = {\n\tlinkResolver: LinkResolverFunction | undefined;\n\tinternalLinkComponent?: React.ComponentType<LinkProps>;\n\texternalLinkComponent?: React.ComponentType<LinkProps>;\n};\n\nconst getDir = (node: prismicT.RTAnyNode): \"rtl\" | undefined => {\n\tif (\"direction\" in node && node.direction === \"rtl\") {\n\t\treturn \"rtl\";\n\t}\n};\n\nconst createDefaultSerializer = <\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any>,\n>(\n\targs: CreateDefaultSerializerArgs<LinkResolverFunction>,\n): JSXFunctionSerializer =>\n\tprismicR.wrapMapSerializer({\n\t\theading1: ({ node, children, key }) => (\n\t\t\t<h1 key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</h1>\n\t\t),\n\t\theading2: ({ node, children, key }) => (\n\t\t\t<h2 key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</h2>\n\t\t),\n\t\theading3: ({ node, children, key }) => (\n\t\t\t<h3 key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</h3>\n\t\t),\n\t\theading4: ({ node, children, key }) => (\n\t\t\t<h4 key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</h4>\n\t\t),\n\t\theading5: ({ node, children, key }) => (\n\t\t\t<h5 key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</h5>\n\t\t),\n\t\theading6: ({ node, children, key }) => (\n\t\t\t<h6 key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</h6>\n\t\t),\n\t\tparagraph: ({ node, children, key }) => (\n\t\t\t<p key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</p>\n\t\t),\n\t\tpreformatted: ({ node, key }) => <pre key={key}>{node.text}</pre>,\n\t\tstrong: ({ children, key }) => <strong key={key}>{children}</strong>,\n\t\tem: ({ children, key }) => <em key={key}>{children}</em>,\n\t\tlistItem: ({ node, children, key }) => (\n\t\t\t<li key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</li>\n\t\t),\n\t\toListItem: ({ node, children, key }) => (\n\t\t\t<li key={key} dir={getDir(node)}>\n\t\t\t\t{children}\n\t\t\t</li>\n\t\t),\n\t\tlist: ({ children, key }) => <ul key={key}>{children}</ul>,\n\t\toList: ({ children, key }) => <ol key={key}>{children}</ol>,\n\t\timage: ({ node, key }) => {\n\t\t\tconst img = (\n\t\t\t\t<img\n\t\t\t\t\tsrc={node.url}\n\t\t\t\t\talt={node.alt ?? undefined}\n\t\t\t\t\tdata-copyright={node.copyright ? node.copyright : undefined}\n\t\t\t\t/>\n\t\t\t);\n\n\t\t\treturn (\n\t\t\t\t<p key={key} className=\"block-img\">\n\t\t\t\t\t{node.linkTo ? (\n\t\t\t\t\t\t<PrismicLink\n\t\t\t\t\t\t\tlinkResolver={args.linkResolver}\n\t\t\t\t\t\t\tinternalComponent={args.internalLinkComponent}\n\t\t\t\t\t\t\texternalComponent={args.externalLinkComponent}\n\t\t\t\t\t\t\tfield={node.linkTo}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{img}\n\t\t\t\t\t\t</PrismicLink>\n\t\t\t\t\t) : (\n\t\t\t\t\t\timg\n\t\t\t\t\t)}\n\t\t\t\t</p>\n\t\t\t);\n\t\t},\n\t\tembed: ({ node, key }) => (\n\t\t\t<div\n\t\t\t\tkey={key}\n\t\t\t\tdata-oembed={node.oembed.embed_url}\n\t\t\t\tdata-oembed-type={node.oembed.type}\n\t\t\t\tdata-oembed-provider={node.oembed.provider_name}\n\t\t\t\tdangerouslySetInnerHTML={{ __html: node.oembed.html ?? \"\" }}\n\t\t\t/>\n\t\t),\n\t\thyperlink: ({ node, children, key }) => (\n\t\t\t<PrismicLink\n\t\t\t\tkey={key}\n\t\t\t\tfield={node.data}\n\t\t\t\tlinkResolver={args.linkResolver}\n\t\t\t\tinternalComponent={args.internalLinkComponent}\n\t\t\t\texternalComponent={args.externalLinkComponent}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</PrismicLink>\n\t\t),\n\t\tlabel: ({ node, children, key }) => (\n\t\t\t<span key={key} className={node.data.label}>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t),\n\t\tspan: ({ text, key }) => {\n\t\t\tconst result: React.ReactNode[] = [];\n\n\t\t\tlet i = 0;\n\t\t\tfor (const line of text.split(\"\\n\")) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tresult.push(<br key={`${i}__break`} />);\n\t\t\t\t}\n\n\t\t\t\tresult.push(<React.Fragment key={`${i}__line`}>{line}</React.Fragment>);\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn <React.Fragment key={key}>{result}</React.Fragment>;\n\t\t},\n\t});\n\n/**\n * React component that renders content from a Prismic Rich Text field. By\n * default, HTML elements are rendered for each piece of content. A `heading1`\n * block will render an `<h1>` HTML element, for example. Links will use\n * `<PrismicLink>` by default which can be customized using the\n * `internalLinkComponent` and `externalLinkComponent` props.\n *\n * To customize the components that are rendered, provide a map or function\n * serializer to the `components` prop.\n *\n * @remarks\n * This component returns a React fragment with no wrapping element around the\n * content. If you need a wrapper, add a component around `<PrismicRichText>`.\n * @example Rendering a Rich Text field using the default HTMl elements.\n *\n * ```jsx\n * <PrismicRichText field={document.data.content} />;\n * ```\n *\n * @example Rendering a Rich Text field using a custom set of React components.\n *\n * ```jsx\n * <PrismicRichText\n * \tfield={document.data.content}\n * \tcomponents={{\n * \t\theading1: ({ children }) => <Heading>{children}</Heading>,\n * \t}}\n * />;\n * ```\n *\n * @param props - Props for the component.\n *\n * @returns The Rich Text field's content as React components.\n *\n * @see Learn about Rich Text fields {@link https://prismic.io/docs/core-concepts/rich-text-title}\n * @see Learn about Rich Text serializers {@link https://prismic.io/docs/core-concepts/html-serializer}\n */\nexport function PrismicRichText<\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any>,\n>({\n\tlinkResolver,\n\tfield,\n\tfallback,\n\tcomponents,\n\texternalLinkComponent,\n\tinternalLinkComponent,\n\t...restProps\n}: PrismicRichTextProps<LinkResolverFunction>): JSX.Element | null {\n\treturn React.useMemo(() => {\n\t\tif (\n\t\t\ttypeof process !== \"undefined\" &&\n\t\t\tprocess.env.NODE_ENV === \"development\"\n\t\t) {\n\t\t\tif (\"className\" in restProps) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[PrismicRichText] className cannot be passed to <PrismicRichText> since it renders an array without a wrapping component. For more details, see ${devMsg(\n\t\t\t\t\t\t\"classname-is-not-a-valid-prop\",\n\t\t\t\t\t)}.`,\n\t\t\t\t\tfield,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (prismic.isFilled.richText(field)) {\n\t\t\tconst serializer = prismicR.composeSerializers(\n\t\t\t\ttypeof components === \"object\"\n\t\t\t\t\t? prismicR.wrapMapSerializer(components)\n\t\t\t\t\t: components,\n\t\t\t\tcreateDefaultSerializer({\n\t\t\t\t\tlinkResolver,\n\t\t\t\t\tinternalLinkComponent,\n\t\t\t\t\texternalLinkComponent,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\t// The serializer is wrapped in a higher-order function\n\t\t\t// that automatically applies a key to React Elements\n\t\t\t// if one is not already given.\n\t\t\tconst serialized = prismicR.serialize<JSX.Element>(\n\t\t\t\tfield,\n\t\t\t\t(type, node, text, children, key) => {\n\t\t\t\t\tconst result = serializer(type, node, text, children, key);\n\n\t\t\t\t\tif (React.isValidElement(result) && result.key == null) {\n\t\t\t\t\t\treturn React.cloneElement(result, { key });\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn <>{serialized}</>;\n\t\t} else {\n\t\t\treturn fallback != null ? <>{fallback}</> : null;\n\t\t}\n\t}, [\n\t\tfield,\n\t\tinternalLinkComponent,\n\t\texternalLinkComponent,\n\t\tcomponents,\n\t\tlinkResolver,\n\t\tfallback,\n\t]);\n}\n"],"names":["prismic.isFilled.richText"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2768, "column": 0}, "map": {"version":3,"file":"PrismicRichText.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/PrismicRichText.tsx"],"sourcesContent":["\"use client\";\n\nimport * as prismic from \"@prismicio/client\";\nimport * as prismicR from \"@prismicio/richtext\";\n\nimport {\n\tPrismicRichText as ServerPrismicRichText,\n\tPrismicRichTextProps,\n} from \"./react-server/PrismicRichText\";\n\nimport { usePrismicContext } from \"./usePrismicContext\";\n\nexport type { PrismicRichTextProps };\n\nexport const PrismicRichText = function PrismicRichText<\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tLinkResolverFunction extends prismic.LinkResolverFunction<any> = prismic.LinkResolverFunction,\n>({ components, ...restProps }: PrismicRichTextProps<LinkResolverFunction>) {\n\tconst context = usePrismicContext();\n\n\tconst serializer = prismicR.composeSerializers(\n\t\ttypeof components === \"object\"\n\t\t\t? prismicR.wrapMapSerializer(components)\n\t\t\t: components,\n\t\ttypeof context.richTextComponents === \"object\"\n\t\t\t? prismicR.wrapMapSerializer(context.richTextComponents)\n\t\t\t: context.richTextComponents,\n\t);\n\n\treturn (\n\t\t<ServerPrismicRichText\n\t\t\tcomponents={serializer}\n\t\t\tinternalLinkComponent={context.internalLinkComponent}\n\t\t\texternalLinkComponent={context.externalLinkComponent}\n\t\t\t{...restProps}\n\t\t/>\n\t);\n};\n"],"names":["PrismicRichText","ServerPrismicRichText"],"mappings":";;;;;;;;;;;AAcO,MAAM,kBAAkB,SAASA,iBAGtC,EAAE,UAAA,EAAY,GAAG,WAAA,EAAuD;IACzE,MAAM,mLAAU,oBAAA;IAEV,MAAA,aAAa,4JAAS,kBAAA,CAC3B,OAAO,eAAe,WACnB,4JAAS,iBAAA,CAAkB,UAAU,IACrC,YACH,OAAO,QAAQ,kBAAA,KAAuB,WACnC,4JAAS,iBAAA,CAAkB,QAAQ,kBAAkB,IACrD,QAAQ,kBAAkB;IAI7B,OAAA,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,wLAACC,kBAAAA,EACA;QAAA,YAAY;QACZ,uBAAuB,QAAQ,qBAAA;QAC/B,uBAAuB,QAAQ,qBAAA;QAC3B,GAAA,SAAA;IAAU,CAAA;AAGjB","ignoreList":[0]}},
    {"offset": {"line": 2791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}