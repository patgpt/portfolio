{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":[],"mappings":";;;;AAAA,SAAS,EAAE,CAAC;IAAE,IAAI,GAAE,GAAE,IAAE;IAAG,IAAG,YAAU,OAAO,KAAG,YAAU,OAAO,GAAE,KAAG;SAAO,IAAG,YAAU,OAAO,GAAE,IAAG,MAAM,OAAO,CAAC,IAAG;QAAC,IAAI,IAAE,EAAE,MAAM;QAAC,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAC,OAAM,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAE,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;AAAQ,SAAS;IAAO,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,MAAM,EAAC,IAAE,GAAE,IAAI,CAAC,IAAE,SAAS,CAAC,EAAE,KAAG,CAAC,IAAE,EAAE,EAAE,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;uCAAgB","ignoreList":[0]}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n"],"names":[],"mappings":"AAAA;AAEA,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD;AACA,QAAQ,CAAC,GAAG","ignoreList":[0]}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40swc/helpers/cjs/_interop_require_wildcard.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n"],"names":[],"mappings":"AAAA;AAEA,SAAS,yBAAyB,WAAW;IACzC,IAAI,OAAO,YAAY,YAAY,OAAO;IAE1C,IAAI,oBAAoB,IAAI;IAC5B,IAAI,mBAAmB,IAAI;IAE3B,OAAO,CAAC,2BAA2B,SAAS,WAAW;QACnD,OAAO,cAAc,mBAAmB;IAC5C,CAAC,EAAE;AACP;AACA,SAAS,0BAA0B,GAAG,EAAE,WAAW;IAC/C,IAAI,CAAC,eAAe,OAAO,IAAI,UAAU,EAAE,OAAO;IAClD,IAAI,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO;QAAE,SAAS;IAAI;IAEhG,IAAI,QAAQ,yBAAyB;IAErC,IAAI,SAAS,MAAM,GAAG,CAAC,MAAM,OAAO,MAAM,GAAG,CAAC;IAE9C,IAAI,SAAS;QAAE,WAAW;IAAK;IAC/B,IAAI,wBAAwB,OAAO,cAAc,IAAI,OAAO,wBAAwB;IAEpF,IAAK,IAAI,OAAO,IAAK;QACjB,IAAI,QAAQ,aAAa,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,MAAM;YACrE,IAAI,OAAO,wBAAwB,OAAO,wBAAwB,CAAC,KAAK,OAAO;YAC/E,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,OAAO,cAAc,CAAC,QAAQ,KAAK;iBAClE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;QAC/B;IACJ;IAEA,OAAO,OAAO,GAAG;IAEjB,IAAI,OAAO,MAAM,GAAG,CAAC,KAAK;IAE1B,OAAO;AACX;AACA,QAAQ,CAAC,GAAG","ignoreList":[0]}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-utils/dist/es/noop.mjs"],"sourcesContent":["const noop = (any) => any;\n\nexport { noop };\n"],"names":[],"mappings":";;;AAAA,MAAM,OAAO,CAAC,MAAQ","ignoreList":[0]}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-utils/dist/es/errors.mjs"],"sourcesContent":["import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n"],"names":[],"mappings":";;;;AAAA;AAII;;AAFJ,IAAI,UAAU,yJAAA,CAAA,OAAI;AAClB,IAAI,YAAY,yJAAA,CAAA,OAAI;AACpB,wCAA2C;IACvC,UAAU,CAAC,OAAO;QACd,IAAI,CAAC,SAAS,OAAO,YAAY,aAAa;YAC1C,QAAQ,IAAI,CAAC;QACjB;IACJ;IACA,YAAY,CAAC,OAAO;QAChB,IAAI,CAAC,OAAO;YACR,MAAM,IAAI,MAAM;QACpB;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs"],"sourcesContent":["const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n"],"names":[],"mappings":";;;;AAAA,MAAM,aAAa;IACf,GAAG;IACH,GAAG;AACP;AACA,SAAS;IACL,OAAO,WAAW,CAAC,IAAI,WAAW,CAAC;AACvC","ignoreList":[0]}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/utils/resolve-elements.mjs"],"sourcesContent":["function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB,iBAAiB,EAAE,KAAK,EAAE,aAAa;IAC5D,IAAI;IACJ,IAAI,6BAA6B,SAAS;QACtC,OAAO;YAAC;SAAkB;IAC9B,OACK,IAAI,OAAO,sBAAsB,UAAU;QAC5C,IAAI,OAAO;QACX,IAAI,OAAO;YACP,kCAAkC;YAClC,aAAa;YACb,8BAA8B;YAC9B,iDAAiD;YACjD,IAAI;YACJ,OAAO,MAAM,OAAO;QACxB;QACA,MAAM,WAAW,CAAC,KAAK,kBAAkB,QAAQ,kBAAkB,KAAK,IAAI,KAAK,IAAI,aAAa,CAAC,kBAAkB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,KAAK,gBAAgB,CAAC;QAC9K,OAAO,WAAW,MAAM,IAAI,CAAC,YAAY,EAAE;IAC/C;IACA,OAAO,MAAM,IAAI,CAAC;AACtB","ignoreList":[0]}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/utils/setup.mjs"],"sourcesContent":["import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,aAAa,iBAAiB,EAAE,OAAO;IAC5C,MAAM,WAAW,CAAA,GAAA,+KAAA,CAAA,kBAAe,AAAD,EAAE;IACjC,MAAM,yBAAyB,IAAI;IACnC,MAAM,eAAe;QACjB,SAAS;QACT,GAAG,OAAO;QACV,QAAQ,uBAAuB,MAAM;IACzC;IACA,MAAM,SAAS,IAAM,uBAAuB,KAAK;IACjD,OAAO;QAAC;QAAU;QAAc;KAAO;AAC3C","ignoreList":[0]}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/hover.mjs"],"sourcesContent":["import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA;;;CAGC,GACD,SAAS,aAAa,QAAQ;IAC1B,OAAO,CAAC;QACJ,IAAI,MAAM,WAAW,KAAK,WAAW,CAAA,GAAA,4LAAA,CAAA,eAAY,AAAD,KAC5C;QACJ,SAAS;IACb;AACJ;AACA;;;;;;CAMC,GACD,SAAS,MAAM,iBAAiB,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IACxD,MAAM,CAAC,UAAU,cAAc,OAAO,GAAG,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,mBAAmB;IACzE,MAAM,iBAAiB,aAAa,CAAC;QACjC,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,MAAM,aAAa,aAAa;QAChC,IAAI,CAAC,cAAc,CAAC,QAChB;QACJ,MAAM,iBAAiB,aAAa,CAAC;YACjC,WAAW;YACX,OAAO,mBAAmB,CAAC,gBAAgB;QAC/C;QACA,OAAO,gBAAgB,CAAC,gBAAgB,gBAAgB;IAC5D;IACA,SAAS,OAAO,CAAC,CAAC;QACd,QAAQ,gBAAgB,CAAC,gBAAgB,gBAAgB;IAC7D;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs"],"sourcesContent":["const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n"],"names":[],"mappings":";;;AAAA,MAAM,mBAAmB,CAAC;IACtB,IAAI,MAAM,WAAW,KAAK,SAAS;QAC/B,OAAO,OAAO,MAAM,MAAM,KAAK,YAAY,MAAM,MAAM,IAAI;IAC/D,OACK;QACD;;;;;;;SAOC,GACD,OAAO,MAAM,SAAS,KAAK;IAC/B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs"],"sourcesContent":["const isPressing = new WeakSet();\n\nexport { isPressing };\n"],"names":[],"mappings":";;;AAAA,MAAM,aAAa,IAAI","ignoreList":[0]}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs"],"sourcesContent":["import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n"],"names":[],"mappings":";;;AAAA;;AAEA;;CAEC,GACD,SAAS,aAAa,QAAQ;IAC1B,OAAO,CAAC;QACJ,IAAI,MAAM,GAAG,KAAK,SACd;QACJ,SAAS;IACb;AACJ;AACA,SAAS,iBAAiB,MAAM,EAAE,IAAI;IAClC,OAAO,aAAa,CAAC,IAAI,aAAa,YAAY,MAAM;QAAE,WAAW;QAAM,SAAS;IAAK;AAC7F;AACA,MAAM,sBAAsB,CAAC,YAAY;IACrC,MAAM,UAAU,WAAW,aAAa;IACxC,IAAI,CAAC,SACD;IACJ,MAAM,gBAAgB,aAAa;QAC/B,IAAI,sLAAA,CAAA,aAAU,CAAC,GAAG,CAAC,UACf;QACJ,iBAAiB,SAAS;QAC1B,MAAM,cAAc,aAAa;YAC7B,iBAAiB,SAAS;QAC9B;QACA,MAAM,aAAa,IAAM,iBAAiB,SAAS;QACnD,QAAQ,gBAAgB,CAAC,SAAS,aAAa;QAC/C,QAAQ,gBAAgB,CAAC,QAAQ,YAAY;IACjD;IACA,QAAQ,gBAAgB,CAAC,WAAW,eAAe;IACnD;;KAEC,GACD,QAAQ,gBAAgB,CAAC,QAAQ,IAAM,QAAQ,mBAAmB,CAAC,WAAW,gBAAgB;AAClG","ignoreList":[0]}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs"],"sourcesContent":["const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n"],"names":[],"mappings":";;;AAAA,MAAM,oBAAoB,IAAI,IAAI;IAC9B;IACA;IACA;IACA;IACA;CACH;AACD,SAAS,4BAA4B,OAAO;IACxC,OAAO,kBAAkB,GAAG,CAAC,QAAQ,OAAO,KAAK,QAAQ,QAAQ,KAAK,CAAC;AAC3E","ignoreList":[0]}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs"],"sourcesContent":["/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACD,MAAM,gBAAgB,CAAC,QAAQ;IAC3B,IAAI,CAAC,OAAO;QACR,OAAO;IACX,OACK,IAAI,WAAW,OAAO;QACvB,OAAO;IACX,OACK;QACD,OAAO,cAAc,QAAQ,MAAM,aAAa;IACpD;AACJ","ignoreList":[0]}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/press/index.mjs"],"sourcesContent":["import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;;;CAGC,GACD,SAAS,kBAAkB,KAAK;IAC5B,OAAO,CAAA,GAAA,gMAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,4LAAA,CAAA,eAAY,AAAD;AAClD;AACA;;;;;;;;;;;;;;;;;;CAkBC,GACD,SAAS,MAAM,iBAAiB,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IACxD,MAAM,CAAC,UAAU,cAAc,aAAa,GAAG,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE,mBAAmB;IAC/E,MAAM,aAAa,CAAC;QAChB,MAAM,UAAU,WAAW,aAAa;QACxC,IAAI,CAAC,kBAAkB,eAAe,sLAAA,CAAA,aAAU,CAAC,GAAG,CAAC,UACjD;QACJ,sLAAA,CAAA,aAAU,CAAC,GAAG,CAAC;QACf,MAAM,aAAa,aAAa;QAChC,MAAM,eAAe,CAAC,UAAU;YAC5B,OAAO,mBAAmB,CAAC,aAAa;YACxC,OAAO,mBAAmB,CAAC,iBAAiB;YAC5C,IAAI,CAAC,kBAAkB,aAAa,CAAC,sLAAA,CAAA,aAAU,CAAC,GAAG,CAAC,UAAU;gBAC1D;YACJ;YACA,sLAAA,CAAA,aAAU,CAAC,MAAM,CAAC;YAClB,IAAI,YAAY;gBACZ,WAAW,UAAU;oBAAE;gBAAQ;YACnC;QACJ;QACA,MAAM,cAAc,CAAC;YACjB,aAAa,SAAS,QAAQ,eAAe,IACzC,CAAA,GAAA,iMAAA,CAAA,gBAAa,AAAD,EAAE,SAAS,QAAQ,MAAM;QAC7C;QACA,MAAM,kBAAkB,CAAC;YACrB,aAAa,aAAa;QAC9B;QACA,OAAO,gBAAgB,CAAC,aAAa,aAAa;QAClD,OAAO,gBAAgB,CAAC,iBAAiB,iBAAiB;IAC9D;IACA,SAAS,OAAO,CAAC,CAAC;QACd,IAAI,CAAC,CAAA,GAAA,6MAAA,CAAA,8BAA2B,AAAD,EAAE,UAAU;YACvC,QAAQ,QAAQ,GAAG;QACvB;QACA,MAAM,SAAS,QAAQ,eAAe,GAAG,SAAS;QAClD,OAAO,gBAAgB,CAAC,eAAe,YAAY;QACnD,QAAQ,gBAAgB,CAAC,SAAS,CAAC,QAAU,CAAA,GAAA,yLAAA,CAAA,sBAAmB,AAAD,EAAE,OAAO,eAAe;IAC3F;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs"],"sourcesContent":["import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,YAAY,IAAI;IACrB,IAAI,SAAS,OAAO,SAAS,KAAK;QAC9B,IAAI,4LAAA,CAAA,aAAU,CAAC,KAAK,EAAE;YAClB,OAAO;QACX,OACK;YACD,4LAAA,CAAA,aAAU,CAAC,KAAK,GAAG;YACnB,OAAO;gBACH,4LAAA,CAAA,aAAU,CAAC,KAAK,GAAG;YACvB;QACJ;IACJ,OACK;QACD,IAAI,4LAAA,CAAA,aAAU,CAAC,CAAC,IAAI,4LAAA,CAAA,aAAU,CAAC,CAAC,EAAE;YAC9B,OAAO;QACX,OACK;YACD,4LAAA,CAAA,aAAU,CAAC,CAAC,GAAG,4LAAA,CAAA,aAAU,CAAC,CAAC,GAAG;YAC9B,OAAO;gBACH,4LAAA,CAAA,aAAU,CAAC,CAAC,GAAG,4LAAA,CAAA,aAAU,CAAC,CAAC,GAAG;YAClC;QACJ;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"file":"package.json.js","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"file":"devMsg.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/lib/devMsg.ts"],"sourcesContent":["import { version } from \"../../package.json\";\n\n/**\n * Returns a `prismic.dev/msg` URL for a given message slug.\n *\n * @example\n *\n * ```ts\n * devMsg(\"missing-param\");\n * // => \"https://prismic.dev/msg/next/v1.2.3/missing-param.md\"\n * ```\n *\n * @param slug - Slug for the message. This corresponds to a Markdown file in\n *   the Git repository's `/messages` directory.\n *\n * @returns The `prismic.dev/msg` URL for the given slug.\n */\nexport const devMsg = (slug: string) => {\n\treturn `https://prismic.dev/msg/next/v${version}/${slug}`;\n};\n"],"names":[],"mappings":";;;;;AAiBa,MAAA,SAAS,CAAC,SAAgB;IAC/B,OAAA,CAAA,8BAAA,oKAAiC,UAAO,CAAA,CAAA,EAAI,IAAI,EAAA;AACxD","ignoreList":[0]}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"file":"isFilled.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/next/node_modules/%40prismicio/client/dist/helpers/isFilled.js"],"sourcesContent":["const isNonNullish = (input) => {\n  return input != null;\n};\nconst isNonEmptyArray = (input) => {\n  return !!input.length;\n};\nconst richText = (field) => {\n  if (!isNonNullish(field)) {\n    return false;\n  } else if (field.length === 1 && \"text\" in field[0]) {\n    return !!field[0].text;\n  } else {\n    return !!field.length;\n  }\n};\nconst title = richText;\nconst imageThumbnail = (thumbnail) => {\n  return isNonNullish(thumbnail) && !!thumbnail.url;\n};\nconst image = imageThumbnail;\nconst link = (field) => {\n  return isNonNullish(field) && (\"id\" in field || \"url\" in field);\n};\nconst linkToMedia = link;\nconst contentRelationship = link;\nconst date = isNonNullish;\nconst timestamp = isNonNullish;\nconst color = isNonNullish;\nconst number = isNonNullish;\nconst keyText = (field) => {\n  return isNonNullish(keyText) && !!field;\n};\nconst select = isNonNullish;\nconst embed = (field) => {\n  return isNonNullish(field) && !!field.embed_url;\n};\nconst geoPoint = (field) => {\n  return isNonNullish(field) && \"longitude\" in field;\n};\nconst integrationField = isNonNullish;\nconst integrationFields = integrationField;\nconst group = (group2) => {\n  return isNonNullish(group2) && isNonEmptyArray(group2);\n};\nconst sliceZone = (slices) => {\n  return isNonNullish(slices) && isNonEmptyArray(slices);\n};\nexport {\n  color,\n  contentRelationship,\n  date,\n  embed,\n  geoPoint,\n  group,\n  image,\n  imageThumbnail,\n  integrationField,\n  integrationFields,\n  keyText,\n  link,\n  linkToMedia,\n  number,\n  richText,\n  select,\n  sliceZone,\n  timestamp,\n  title\n};\n//# sourceMappingURL=isFilled.js.map\n"],"names":[],"mappings":";;;;AAAA,MAAM,eAAe,CAAC,UAAU;IAC9B,OAAO,SAAS;AAClB;AAcK,MAAC,iBAAiB,CAAC,cAAc;IACpC,OAAO,aAAa,SAAS,KAAK,CAAC,CAAC,UAAU,GAAA;AAChD;AAEK,MAAC,OAAO,CAAC,UAAU;IACtB,OAAO,aAAa,KAAK,KAAA,CAAM,QAAQ,SAAS,SAAS,KAAA;AAC3D","ignoreList":[0]}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"file":"imgixLoader.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/imgixLoader.ts"],"sourcesContent":["import { ImageLoaderProps } from \"next/image\";\nimport { buildURL, ImgixURLParams } from \"imgix-url-builder\";\n\n/**\n * A `next/image` loader for Imgix, which Prismic uses, with an optional\n * collection of default Imgix parameters.\n *\n * @see To learn about `next/image` loaders: https://nextjs.org/docs/api-reference/next/image#loader\n * @see To learn about Imgix's URL API: https://docs.imgix.com/apis/rendering\n */\nexport const imgixLoader = (args: ImageLoaderProps): string => {\n\tconst url = new URL(args.src);\n\n\tconst params: ImgixURLParams = {\n\t\tfit: (url.searchParams.get(\"fit\") as ImgixURLParams[\"fit\"]) || \"max\",\n\t\tw: args.width,\n\t\th: undefined,\n\t};\n\n\tif (args.quality) {\n\t\tparams.q = args.quality;\n\t}\n\n\treturn buildURL(args.src, params);\n};\n"],"names":[],"mappings":";;;;;AAUa,MAAA,cAAc,CAAC,SAAkC;IAC7D,MAAM,MAAM,IAAI,IAAI,KAAK,GAAG;IAE5B,MAAM,SAAyB;QAC9B,KAAM,IAAI,YAAA,CAAa,GAAA,CAAI,KAAK,KAA+B;QAC/D,GAAG,KAAK,KAAA;QACR,GAAG,KAAA;IAAA;IAGJ,IAAI,KAAK,OAAA,EAAS;QACjB,OAAO,CAAA,GAAI,KAAK,OAAA;IAChB;IAEM,+MAAA,WAAA,EAAS,KAAK,GAAA,EAAK,MAAM;AACjC","ignoreList":[0]}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"file":"PrismicNextImage.js","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/src/PrismicNextImage.tsx"],"sourcesContent":["\"use client\";\n\nimport Image, { ImageProps } from \"next/image\";\nimport { buildURL, ImgixURLParams } from \"imgix-url-builder\";\nimport * as prismic from \"@prismicio/client\";\n\nimport { devMsg } from \"./lib/devMsg\";\n\nimport { imgixLoader } from \"./imgixLoader\";\n\nconst castInt = (input: string | number | undefined): number | undefined => {\n\tif (typeof input === \"number\" || typeof input === \"undefined\") {\n\t\treturn input;\n\t} else {\n\t\tconst parsed = Number.parseInt(input);\n\n\t\tif (Number.isNaN(parsed)) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn parsed;\n\t\t}\n\t}\n};\n\nexport type PrismicNextImageProps = Omit<ImageProps, \"src\" | \"alt\"> & {\n\t/**\n\t * The Prismic Image field or thumbnail to render.\n\t */\n\tfield: prismic.ImageFieldImage | null | undefined;\n\n\t/**\n\t * An object of Imgix URL API parameters to transform the image.\n\t *\n\t * @see https://docs.imgix.com/apis/rendering\n\t */\n\timgixParams?: { [P in keyof ImgixURLParams]: ImgixURLParams[P] | null };\n\n\t/**\n\t * Declare an image as decorative by providing `alt=\"\"`.\n\t *\n\t * See:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images\n\t */\n\talt?: \"\";\n\n\t/**\n\t * Declare an image as decorative only if the Image field does not have\n\t * alternative text by providing `fallbackAlt=\"\"`.\n\t *\n\t * See:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt#decorative_images\n\t */\n\tfallbackAlt?: \"\";\n\n\t/**\n\t * Rendered when the field is empty. If a fallback is not given, `null` will\n\t * be rendered.\n\t */\n\tfallback?: React.ReactNode;\n};\n\n/**\n * React component that renders an image from a Prismic Image field or one of\n * its thumbnails using `next/image`. It will automatically set the `alt`\n * attribute using the Image field's `alt` property.\n *\n * It uses an Imgix URL-based loader by default. A custom loader can be provided\n * with the `loader` prop. If you would like to use the Next.js Image\n * Optimization API instead, set `loader={undefined}`.\n *\n * @param props - Props for the component.\n *\n * @returns A responsive image component using `next/image` for the given Image\n *   field.\n *\n * @see To learn more about `next/image`, see: https://nextjs.org/docs/api-reference/next/image\n */\nexport const PrismicNextImage = ({\n\tfield,\n\timgixParams = {},\n\talt,\n\tfallbackAlt,\n\tfill,\n\twidth,\n\theight,\n\tfallback = null,\n\t...restProps\n}: PrismicNextImageProps): JSX.Element => {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tif (typeof alt === \"string\" && alt !== \"\") {\n\t\t\tconsole.warn(\n\t\t\t\t`[PrismicNextImage] The \"alt\" prop can only be used to declare an image as decorative by passing an empty string (alt=\"\") but was provided a non-empty string. You can resolve this warning by removing the \"alt\" prop or changing it to alt=\"\". For more details, see ${devMsg(\n\t\t\t\t\t\"alt-must-be-an-empty-string\",\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\n\t\tif (typeof fallbackAlt === \"string\" && fallbackAlt !== \"\") {\n\t\t\tconsole.warn(\n\t\t\t\t`[PrismicNextImage] The \"fallbackAlt\" prop can only be used to declare an image as decorative by passing an empty string (fallbackAlt=\"\") but was provided a non-empty string. You can resolve this warning by removing the \"fallbackAlt\" prop or changing it to fallbackAlt=\"\". For more details, see ${devMsg(\n\t\t\t\t\t\"alt-must-be-an-empty-string\",\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tif (prismic.isFilled.imageThumbnail(field)) {\n\t\tconst resolvedImgixParams = imgixParams;\n\t\tfor (const x in imgixParams) {\n\t\t\tif (resolvedImgixParams[x as keyof typeof resolvedImgixParams] === null) {\n\t\t\t\tresolvedImgixParams[x as keyof typeof resolvedImgixParams] = undefined;\n\t\t\t}\n\t\t}\n\n\t\tconst src = buildURL(field.url, imgixParams as ImgixURLParams);\n\n\t\tconst ar = field.dimensions.width / field.dimensions.height;\n\n\t\tconst castedWidth = castInt(width);\n\t\tconst castedHeight = castInt(height);\n\n\t\tlet resolvedWidth = castedWidth ?? field.dimensions.width;\n\t\tlet resolvedHeight = castedHeight ?? field.dimensions.height;\n\n\t\tif (castedWidth != null && castedHeight == null) {\n\t\t\tresolvedHeight = castedWidth / ar;\n\t\t} else if (castedWidth == null && castedHeight != null) {\n\t\t\tresolvedWidth = castedHeight * ar;\n\t\t}\n\n\t\t// A non-null assertion is required since we can't statically\n\t\t// know if an alt attribute is available.\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tconst resolvedAlt = (alt ?? (field.alt || fallbackAlt))!;\n\n\t\tif (\n\t\t\tprocess.env.NODE_ENV !== \"production\" &&\n\t\t\ttypeof resolvedAlt !== \"string\"\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t`[PrismicNextImage] The following image is missing an \"alt\" property. Please add Alternative Text to the image in Prismic. To mark the image as decorative instead, add one of \\`alt=\"\"\\` or \\`fallbackAlt=\"\"\\`.`,\n\t\t\t\tsrc,\n\t\t\t);\n\t\t}\n\n\t\t// TODO: Remove once https://github.com/vercel/next.js/issues/52216 is resolved.\n\t\t// `next/image` seems to be affected by a default + named export bundling bug.\n\t\tlet ResolvedImage = Image;\n\t\tif (\"default\" in ResolvedImage) {\n\t\t\tResolvedImage = (ResolvedImage as unknown as { default: typeof Image })\n\t\t\t\t.default;\n\t\t}\n\n\t\treturn (\n\t\t\t<ResolvedImage\n\t\t\t\tsrc={src}\n\t\t\t\twidth={fill ? undefined : resolvedWidth}\n\t\t\t\theight={fill ? undefined : resolvedHeight}\n\t\t\t\talt={resolvedAlt}\n\t\t\t\tfill={fill}\n\t\t\t\tloader={imgixLoader}\n\t\t\t\t{...restProps}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn <>{fallback}</>;\n\t}\n};\n"],"names":[],"mappings":";;;;;AAwFK;;;;;;;;;;;;;AA9EL,MAAA,UAAA,CAAA;IACC,IAAA,OAAA,UAAA,YAAA,OAAA,UAAA,aAAA;QACQ,OAAA;IAAA,OAAA;QAED,MAAA,SAAA,OAAA,QAAA,CAAA;QAEF,IAAA,OAAA,KAAA,CAAA,SAAA;YACI,OAAA,KAAA;QAAA,OAAA;YAEA,OAAA;QAAA;IACP;AAEH;AAuDO,MAAA,mBAAA,CAAA,EAAA,KAAA,EAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,WAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,WAAA,IAAA,EAAA,GAAA,WAAA;IAWF,wCAAA;QACH,IAAA,OAAA,QAAA,YAAA,QAAA,IAAA;YACC,QAAA,IAAA,CAAA,CAAA,sQAAA,EAAA,CAAA,GAAA,+JAAA,CAAA,SAAA,EAAA,gCAAA;QAGI;QAIL,IAAA,OAAA,gBAAA,YAAA,gBAAA,IAAA;YACC,QAAA,IAAA,CAAA,CAAA,sSAAA,EAAA,CAAA,GAAA,+JAAA,CAAA,SAAA,EAAA,gCAAA;QAGI;IAEJ;IAGF,IAAA,CAAA,GAAA,uNAAA,CAAA,iBAAA,EAAA,QAAA;QACC,MAAA,sBAAA;QACA,IAAA,MAAA,KAAA,YAAA;YACK,IAAA,mBAAA,CAAA,EAAA,KAAA,MAAA;gBACH,mBAAA,CAAA,EAAA,GAAA,KAAA;YAA6D;QAC7D;QAGF,MAAA,MAAA,CAAA,GAAA,mMAAA,CAAA,WAAA,EAAA,MAAA,GAAA,EAAA;QAEA,MAAA,KAAA,MAAA,UAAA,CAAA,KAAA,GAAA,MAAA,UAAA,CAAA,MAAA;QAEM,MAAA,cAAA,QAAA;QACA,MAAA,eAAA,QAAA;QAEF,IAAA,gBAAA,eAAA,MAAA,UAAA,CAAA,KAAA;QACA,IAAA,iBAAA,gBAAA,MAAA,UAAA,CAAA,MAAA;QAEA,IAAA,eAAA,QAAA,gBAAA,MAAA;YACH,iBAAA,cAAA;QAA+B,OAAA,IAAA,eAAA,QAAA,gBAAA,MAAA;YAE/B,gBAAA,eAAA;QAA+B;QAM1B,MAAA,cAAA,OAAA,CAAA,MAAA,GAAA,IAAA,WAAA;QAEN,IAAA,oDAAA,gBAAA,OAAA,gBAAA,UAAA;YAIS,QAAA,KAAA,CAAA,CAAA,+MAAA,CAAA,EAAA;QAEJ;QAML,IAAA,gBAAA,gIAAA,CAAA,UAAA;QACA,IAAA,aAAA,eAAA;YACC,gBAAA,cAAA,OAAA;QACE;QAGH,OAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,eAAA;YAAA;YAAA,OAAA,OAAA,KAAA,IAAA;YAAA,QAAA,OAAA,KAAA,IAAA;YAAA,KAAA;YAAA;YAAA,QAAA,6JAAA,CAAA,cAAA;YAAA,GAAA,SAAA;QAAA;IASG,OAAA;QAGH,OAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,sKAAA,CAAA,WAAA,EAAA;YAAA,UAAA;QAAA;IAAkB;AAEpB","ignoreList":[0]}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/next/node_modules/imgix-url-builder/src/buildURL.ts","file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/next/node_modules/imgix-url-builder/src/buildPixelDensitySrcSet.ts","file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/next/node_modules/imgix-url-builder/src/buildWidthSrcSet.ts","file:///Users/agimanifesto/_dev/portfolio/node_modules/%40prismicio/next/node_modules/imgix-url-builder/src/Client.ts"],"sourcesContent":["import type { ImgixURLParams } from \"./types.generated\";\n\n/**\n * Converts a camel case string to a param case string.\n *\n * @example\n *\n * ```ts\n * camelCaseToParamCase(\"fooBar\");\n * // => 'foo-bar'\n * ```\n *\n * @param input - Camel case string to convert.\n *\n * @returns Param case version of `input`.\n */\nconst camelCaseToParamCase = (input: string): string => {\n\treturn input.replace(/[A-Z]/g, (match) => {\n\t\treturn `-${match.toLowerCase()}`;\n\t});\n};\n\n/**\n * Builds a URL to an Imgix image with Imgix URL API parameters.\n *\n * The given URL must be a full absolute URL containing the protocol and domain.\n *\n * URL parameters already applied to the image will be retained. To remove\n * existing parameters, set the parameter to `undefined` in the `params`\n * argument.\n *\n * @example\n *\n * ```ts\n * const url = buildURL(\"https://example.imgix.net/image.png\", {\n * \twidth: 400,\n * });\n * // => https://example.imgix.net/image.png?width=400\n * ```\n *\n * @example\n *\n * ```ts\n * const url = buildURL(\"https://example.imgix.net/image.png?width=400\", {\n * \theight: 300,\n * });\n * // => https://example.imgix.net/image.png?width=400&height=300\n * ```\n *\n * @param url - Full absolute URL to the Imgix image.\n * @param params - An object of Imgix URL API parameters.\n *\n * @returns `url` with the given Imgix URL API parameters applied.\n *\n * @see Imgix URL API reference: https://docs.imgix.com/apis/rendering\n */\nexport const buildURL = (url: string, params: ImgixURLParams): string => {\n\tconst instance = new URL(url);\n\n\tfor (const camelCasedParamKey in params) {\n\t\tconst paramKey = camelCaseToParamCase(camelCasedParamKey);\n\t\tconst paramValue = params[camelCasedParamKey as keyof typeof params];\n\n\t\tif (paramValue === undefined) {\n\t\t\tinstance.searchParams.delete(paramKey);\n\t\t} else if (Array.isArray(paramValue)) {\n\t\t\tinstance.searchParams.set(paramKey, paramValue.join(\",\"));\n\t\t} else {\n\t\t\tinstance.searchParams.set(paramKey, `${paramValue}`);\n\t\t}\n\t}\n\n\t// Ensure the `s` parameter is the last parameter, if it exists.\n\t// @see https://github.com/imgix/imgix-blueprint#securing-urls\n\tconst s = instance.searchParams.get(\"s\");\n\tif (s) {\n\t\tinstance.searchParams.delete(\"s\");\n\t\tinstance.searchParams.append(\"s\", s);\n\t}\n\n\treturn instance.toString();\n};\n","import type { ImgixURLParams } from \"./types.generated\";\nimport { buildURL } from \"./buildURL\";\n\n/**\n * Parameters for `buildPixelDensitySrcSet`.\n */\nexport type BuildPixelDensitySrcSetParams = Omit<ImgixURLParams, \"dpr\"> & {\n\t/**\n\t * The pixel densities to include in the resulting `srcset` value.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * [1, 2, 3];\n\t * ```\n\t */\n\tpixelDensities: number[];\n};\n\n/**\n * Builds an `<img>` `srcset` attribute value for a given set of pixel\n * densities. It can also optinally apply Imgix URL API parameters to the URLs.\n *\n * The `dpr` URL parameter will be applied for each `srcset` entry. If a `dpr`\n * parameter is provided to the `params` parameter, it will be ignored.\n *\n * @example\n *\n * ```ts\n * const srcset = buildPixelDensitySrcSet(\n * \t\"https://example.imgix.net/image.png\",\n * \t{ pixelDensities: [1, 2, 3] },\n * );\n * // => https://example.imgix.net/image.png?dpr=1 1x,\n * //    https://example.imgix.net/image.png?dpr=2 2x,\n * //    https://example.imgix.net/image.png?dpr=3 3x\n * ```\n *\n * @example\n *\n * ```ts\n * const srcset = buildPixelDensitySrcSet(\n * \t\"https://example.imgix.net/image.png\",\n * \t{\n * \t\tpixelDensities: [1, 2, 3],\n * \t\tsat: -100,\n * \t},\n * );\n * // => https://example.imgix.net/image.png?dpr=1&sat=-100 1x,\n * //    https://example.imgix.net/image.png?dpr=2&sat=-100 2x,\n * //    https://example.imgix.net/image.png?dpr=3&sat=-100 3x\n * ```\n *\n * @param url - Full absolute URL to the Imgix image.\n * @param params - An object of Imgix URL API parameters. The `pixelDensities`\n *   parameter defines the resulting `srcset` widths.\n *\n * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n *   parameters applied.\n */\nexport const buildPixelDensitySrcSet = (\n\turl: string,\n\t{ pixelDensities, ...params }: BuildPixelDensitySrcSetParams,\n): string => {\n\treturn pixelDensities\n\t\t.map((dpr) => {\n\t\t\treturn `${buildURL(url, { ...params, dpr })} ${dpr}x`;\n\t\t})\n\t\t.join(\", \");\n};\n","import type { ImgixURLParams } from \"./types.generated\";\nimport { buildURL } from \"./buildURL\";\n\n/**\n * Parameters for `buildWidthSrcSet`.\n */\nexport type BuildWidthSrcSetParams = Omit<ImgixURLParams, \"width\" | \"w\"> & {\n\t/**\n\t * The pixel widths to include in the resulting `srcset` value.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * [400, 800, 1600];\n\t * ```\n\t */\n\twidths: number[];\n};\n\n/**\n * Builds an `<img>` `srcset` attribute value for a given set of widths. It can\n * also optinally apply Imgix URL API parameters to the URLs.\n *\n * The `width` URL parameter will be applied for each `srcset` entry. If a\n * `width` or `w` parameter is provided to the `params` parameter, it will be\n * ignored.\n *\n * @example\n *\n * ```ts\n * const srcset = buildWidthSrcSet(\"https://example.imgix.net/image.png\", {\n * \twidths: [400, 800, 1600],\n * });\n * // => https://example.imgix.net/image.png?width=400 400w,\n * //    https://example.imgix.net/image.png?width=800 800w,\n * //    https://example.imgix.net/image.png?width=1600 1600w\n * ```\n *\n * @example\n *\n * ```ts\n * const srcset = buildWidthSrcSet(\"https://example.imgix.net/image.png\", {\n * \twidths: [400, 800, 1600],\n * \tsat: -100,\n * });\n * // => https://example.imgix.net/image.png?width=400&sat=-100 400w,\n * //    https://example.imgix.net/image.png?width=800&sat=-100 800w,\n * //    https://example.imgix.net/image.png?width=1600&sat=-100 1600w\n * ```\n *\n * @param url - Full absolute URL to the Imgix image.\n * @param params - An object of Imgix URL API parameters. The `widths` parameter\n *   defines the resulting `srcset` widths.\n *\n * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n *   parameters applied.\n */\nexport const buildWidthSrcSet = (\n\turl: string,\n\t{ widths, ...params }: BuildWidthSrcSetParams,\n): string => {\n\treturn widths\n\t\t.map((width) => {\n\t\t\treturn `${buildURL(url, { ...params, w: undefined, width })} ${width}w`;\n\t\t})\n\t\t.join(\", \");\n};\n","import type { BuildPixelDensitySrcSetParams } from \"./buildPixelDensitySrcSet\";\nimport type { BuildWidthSrcSetParams } from \"./buildWidthSrcSet\";\nimport type { ImgixURLParams } from \"./types.generated\";\nimport { buildPixelDensitySrcSet } from \"./buildPixelDensitySrcSet\";\nimport { buildURL } from \"./buildURL\";\nimport { buildWidthSrcSet } from \"./buildWidthSrcSet\";\n\n/**\n * Options to instantiate a new client.\n */\nexport type ClientOptions = {\n\t/**\n\t * The base URL used to construct image URLs from a path. The base URL must\n\t * include the protocol, domain, and optionally a path.\n\t *\n\t * @example `https://example.imgix.net`\n\t *\n\t * @example `https://example.imgix.net/folder`\n\t */\n\tbaseURL: string;\n};\n\n/**\n * An Imgix Rendering API client. A client is paired to a single Imgix domain.\n */\nexport class Client {\n\tbaseURL: string;\n\n\t/**\n\t * Creates a new `Client` instance for an Imgix domain.\n\t *\n\t * @param options - Options to instantiate a new client.\n\t *\n\t * @returns A `Client` instance for the given Imgix domain.\n\t */\n\tconstructor(options: ClientOptions) {\n\t\tthis.baseURL = options.baseURL;\n\t}\n\n\t/**\n\t * Builds a URL to an Imgix image with Imgix URL API parameters for the\n\t * client's base URL.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const url = client.buildURLForPath(\"/image.png\", { width: 400 });\n\t * // => https://example.imgix.net/image.png?width=400\n\t * ```\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({\n\t * \tbaseURL: \"https://example.imgix.net/folder\",\n\t * });\n\t * const url = client.buildURLForPath(\"./image.png\", { width: 400 });\n\t * // => https://example.imgix.net/folder/image.png?width=400\n\t * ```\n\t *\n\t * @param path - Path to the image relative to the client's base URL.\n\t * @param params - An object of Imgix URL API parameters.\n\t *\n\t * @returns The full absolute URL to the image with the given Imgix URL API\n\t *   parameters applied.\n\t */\n\tbuildURLForPath(path: string, params: ImgixURLParams = {}) {\n\t\treturn buildURL(`${new URL(path, this.baseURL)}`, params);\n\t}\n\n\t/**\n\t * Builds an `<img>` `srcset` attribute value for a given set of widths for\n\t * the client's base URL. It can also optinally apply Imgix URL API parameters\n\t * to the URLs.\n\t *\n\t * The `width` URL parameter will be applied for each `srcset` entry. If a\n\t * `width` or `w` parameter is provided to the `params` parameter, it will be\n\t * ignored.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const srcset = client.buildWidthSrcSetForPath(\"/image.png\", {\n\t * \twidths: [400, 800, 1600],\n\t * });\n\t * // => https://example.imgix.net/image.png?width=400 400w,\n\t * //    https://example.imgix.net/image.png?width=800 800w,\n\t * //    https://example.imgix.net/image.png?width=1600 1600w\n\t * ```\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({\n\t * \tbaseURL: \"https://example.imgix.net\",\n\t * });\n\t * const srcset = client.buildWidthSrcSetForPath(\"/image.png\", {\n\t * \twidths: [400, 800, 1600],\n\t * \tsat: -100,\n\t * });\n\t * // => https://example.imgix.net/image.png?width=400&sat=-100 400w,\n\t * //    https://example.imgix.net/image.png?width=800&sat=-100 800w,\n\t * //    https://example.imgix.net/image.png?width=1600&sat=-100 1600w\n\t * ```\n\t *\n\t * @param path - Path to the image relative to the client's base URL.\n\t * @param params - An object of Imgix URL API parameters. The `widths`\n\t *   parameter defines the resulting `srcset` widths.\n\t *\n\t * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n\t *   parameters applied.\n\t */\n\tbuildWidthSrcSetForPath(path: string, params: BuildWidthSrcSetParams) {\n\t\treturn buildWidthSrcSet(`${new URL(path, this.baseURL)}`, params);\n\t}\n\n\t/**\n\t * Builds an `<img>` `srcset` attribute value for a given set of pixel\n\t * densities for the client's base URL. It can also optinally apply Imgix URL\n\t * API parameters to the URLs.\n\t *\n\t * The `dpr` URL parameter will be applied for each `srcset` entry. If a `dpr`\n\t * parameter is provided to the `params` parameter, it will be ignored.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const srcset = client.buildPixelDensitySrcSetForPath(\"/image.png\", {\n\t * \tpixelDensities: [1, 2, 3],\n\t * });\n\t * // => https://example.imgix.net/image.png?dpr=1 1x,\n\t * //    https://example.imgix.net/image.png?dpr=2 2x,\n\t * //    https://example.imgix.net/image.png?dpr=3 3x\n\t * ```\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * const client = new Client({ baseURL: \"https://example.imgix.net\" });\n\t * const srcset = client.buildPixelDensitySrcSetForPath(\"/image.png\", {\n\t * \tpixelDensities: [1, 2, 3],\n\t * \tsat: -100,\n\t * });\n\t * // => https://example.imgix.net/image.png?dpr=1&sat=-100 1x,\n\t * //    https://example.imgix.net/image.png?dpr=2&sat=-100 2x,\n\t * //    https://example.imgix.net/image.png?dpr=3&sat=-100 3x\n\t * ```\n\t *\n\t * @param path - Path to the image relative to the client's base URL.\n\t * @param params - An object of Imgix URL API parameters. The `pixelDensities`\n\t *   parameter defines the resulting `srcset` widths.\n\t *\n\t * @returns A `srcset` attribute value for `url` with the given Imgix URL API\n\t *   parameters applied.\n\t */\n\tbuildPixelDensitySrcSetForPath(\n\t\tpath: string,\n\t\tparams: BuildPixelDensitySrcSetParams,\n\t) {\n\t\treturn buildPixelDensitySrcSet(`${new URL(path, this.baseURL)}`, params);\n\t}\n}\n"],"names":[],"mappings":";;;;;;AAgBA,MAAM,uBAAuB,CAAC,UAA0B;IACvD,OAAO,MAAM,OAAA,CAAQ,UAAU,CAAC,UAAU;QACzC,OAAO,CAAA,CAAA,EAAI,MAAM,WAAA,IAAA;IAAY,CAC7B;AACF;MAoCa,WAAW,CAAC,KAAa,WAAmC;IACxE,MAAM,WAAW,IAAI,IAAI,GAAG;IAE5B,IAAA,MAAW,sBAAsB,OAAQ;QACxC,MAAM,WAAW,qBAAqB,kBAAkB;QACxD,MAAM,aAAa,MAAA,CAAO,kBAAyC,CAAA;QAEnE,IAAI,eAAe,KAAA,GAAW;YAC7B,SAAS,YAAA,CAAa,MAAA,CAAO,QAAQ;QAAA,OAAA,IAC3B,MAAM,OAAA,CAAQ,UAAU,GAAG;YACrC,SAAS,YAAA,CAAa,GAAA,CAAI,UAAU,WAAW,IAAA,CAAK,GAAG,CAAC;QAAA,OAClD;YACN,SAAS,YAAA,CAAa,GAAA,CAAI,UAAU,GAAG,YAAY;QAAA;IACpD;IAKD,MAAM,IAAI,SAAS,YAAA,CAAa,GAAA,CAAI,GAAG;IACvC,IAAI,GAAG;QACN,SAAS,YAAA,CAAa,MAAA,CAAO,GAAG;QAChC,SAAS,YAAA,CAAa,MAAA,CAAO,KAAK,CAAC;IAAA;IAGpC,OAAO,SAAS,QAAA;AACjB;MCrBa,0BAA0B,CACtC,KACA,EAAE,cAAA,EAAgB,GAAG,QAAA,KACT;IACZ,OAAO,eACL,GAAA,CAAI,CAAC,QAAQ;QACb,OAAO,GAAG,SAAS,KAAK;YAAE,GAAG,MAAA;YAAQ;QAAA,CAAK,EAAA,CAAA,EAAK,IAAA,CAAA,CAAA;IAAA,CAC/C,EACA,IAAA,CAAK,IAAI;AACZ;MCZa,mBAAmB,CAC/B,KACA,EAAE,MAAA,EAAQ,GAAG,QAAA,KACD;IACZ,OAAO,OACL,GAAA,CAAI,CAAC,UAAU;QACf,OAAO,GAAG,SAAS,KAAK;YAAE,GAAG,MAAA;YAAQ,GAAG,KAAA;YAAW;QAAA,CAAO,EAAA,CAAA,EAAK,MAAA,CAAA,CAAA;IAAA,CAC/D,EACA,IAAA,CAAK,IAAI;AACZ;MCzCa,OAAO;IAAA;;;;;;GAAA,GAUnB,YAAY,OAAA,CAAwB;QACnC,IAAA,CAAK,OAAA,GAAU,QAAQ,OAAA;IAAA;IACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA8BA,gBAAgB,IAAA,EAAc,SAAyB,CAAA,CAAA,EAAI;QAC1D,OAAO,SAAS,GAAG,IAAI,IAAI,MAAM,IAAA,CAAK,OAAO,GAAA,EAAK,MAAM;IAAA;IACzD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA6CA,wBAAwB,IAAA,EAAc,MAAA,EAAgC;QACrE,OAAO,iBAAiB,GAAG,IAAI,IAAI,MAAM,IAAA,CAAK,OAAO,GAAA,EAAK,MAAM;IAAA;IACjE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA0CA,+BACC,IAAA,EACA,MAAA,EACC;QACD,OAAO,wBAAwB,GAAG,IAAI,IAAI,MAAM,IAAA,CAAK,OAAO,GAAA,EAAK,MAAM;IAAA;AAEzE","ignoreList":[0,1,2,3]}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}