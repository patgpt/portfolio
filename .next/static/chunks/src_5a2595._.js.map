{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/BentoBox.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { type HTMLAttributes } from \"react\";\n\n// Use const assertion for better type inference\nconst SIZES = {\n  small: \"col-span-1 row-span-1\",\n  medium: \"col-span-2 row-span-1\",\n  large: \"col-span-2 row-span-2\",\n} as const;\n\ntype BentoBoxSize = keyof typeof SIZES;\n\nexport interface BentoBoxProps extends HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  size?: BentoBoxSize;\n}\n\nexport const BentoBox = React.memo(({\n  children,\n  className,\n  size = 'small',\n  ...props\n}: BentoBoxProps) => {\n  return (\n    <div\n      className={clsx(\n        \"card transition-all duration-300 group\",\n        \"hover:scale-[1.02] hover:shadow-xl\",\n        \"backdrop-blur-sm bg-opacity-90\",\n        \"border border-base-content/10\",\n        \"break-inside-avoid bg-base-100\",\n        SIZES[size],\n        className\n      )}\n      {...props}\n    >\n      <div className=\"card-body\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nBentoBox.displayName = 'BentoBox';\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,gDAAgD;AAChD,MAAM,QAAQ;IACZ,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AASO,MAAM,yBAAW,6JAAA,CAAA,UAAK,CAAC,IAAI,MAAC,CAAC,EAClC,QAAQ,EACR,SAAS,EACT,OAAO,OAAO,EACd,GAAG,OACW;IACd,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,0CACA,sCACA,kCACA,iCACA,kCACA,KAAK,CAAC,KAAK,EACX;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;;AAEA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/AboutMeSlice/index.tsx"],"sourcesContent":["import { BentoBox } from \"@/components/BentoBox\";\nimport { Content } from \"@prismicio/client\";\nimport { PrismicNextImage, PrismicNextLink } from \"@prismicio/next\";\n\nimport { PrismicRichText, SliceComponentProps } from \"@prismicio/react\";\nimport type { JSX } from \"react\";\n\n/**\n * Props for `AboutMeSlice`.\n */\nexport type AboutMeSliceProps = SliceComponentProps<Content.AboutMeSliceSlice>;\n\n/**\n * Component for \"AboutMeSlice\" Slices.\n */\nconst AboutMeSlice = ({ slice }: AboutMeSliceProps): JSX.Element => {\n  return (\n    <BentoBox size=\"small\" className=\"text-center mb-4 break-inside-avoid\">\n      <div className=\"space-y-4\">\n        <PrismicNextImage field={slice.primary.profile_image} className=\"rounded-full max-w-30 mx-auto\" />\n        <PrismicRichText field={slice.primary.about_me_text} />\n        <PrismicNextLink\n          field={slice.primary.get_in_touch_cta}\n          className=\"btn btn-primary btn-outline prose:a:no-underline\"\n        >\n          {slice.primary.get_in_touch_cta.text}\n        </PrismicNextLink>\n      </div>\n    </BentoBox>\n  );\n};\n\nexport default AboutMeSlice;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;AAFA;;;;;AAUA;;CAEC,GACD,MAAM,eAAe,CAAC,EAAE,KAAK,EAAqB;IAChD,qBACE,6LAAC,iIAAA,CAAA,WAAQ;QAAC,MAAK;QAAQ,WAAU;kBAC/B,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,kKAAA,CAAA,mBAAgB;oBAAC,OAAO,MAAM,OAAO,CAAC,aAAa;oBAAE,WAAU;;;;;;8BAChE,6LAAC,kKAAA,CAAA,kBAAe;oBAAC,OAAO,MAAM,OAAO,CAAC,aAAa;;;;;;8BACnD,6LAAC,iKAAA,CAAA,kBAAe;oBACd,OAAO,MAAM,OAAO,CAAC,gBAAgB;oBACrC,WAAU;8BAET,MAAM,OAAO,CAAC,gBAAgB,CAAC,IAAI;;;;;;;;;;;;;;;;;AAK9C;KAfM;uCAiBS"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}