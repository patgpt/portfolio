{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/BentoBox.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { type HTMLAttributes } from \"react\";\n\n// Use const assertion for better type inference\nconst SIZES = {\n  small: \"col-span-1 row-span-1\",\n  medium: \"col-span-2 row-span-1\",\n  large: \"col-span-2 row-span-2\",\n} as const;\n\nconst VARIANTS = {\n  default: \"\",\n  primary: \"bg-primary text-primary-content\",\n  secondary: \"bg-secondary text-secondary-content\",\n  accent: \"bg-accent text-accent-content\",\n} as const;\n\ntype BentoBoxSize = keyof typeof SIZES;\ntype BentoBoxVariant = keyof typeof VARIANTS;\n\nexport interface BentoBoxProps extends HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  size?: BentoBoxSize;\n  variant?: BentoBoxVariant;\n}\n\nexport const BentoBox = React.memo(({\n  children,\n  className,\n  size = 'small',\n  variant = 'default',\n  ...props\n}: BentoBoxProps) => {\n  return (\n    <div\n      className={clsx(\n        \"card transition-all duration-300 group\",\n        \"hover:scale-[1.02] hover:shadow-xl\",\n        \"backdrop-blur-sm bg-opacity-90\",\n        \"border border-base-content/10\",\n        \"break-inside-avoid bg-base-100\",\n        SIZES[size],\n        VARIANTS[variant],\n        className\n      )}\n      {...props}\n    >\n      <div className=\"card-body\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nBentoBox.displayName = 'BentoBox';\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,gDAAgD;AAChD,MAAM,QAAQ;IACZ,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,WAAW;IACf,SAAS;IACT,SAAS;IACT,WAAW;IACX,QAAQ;AACV;AAWO,MAAM,yBAAW,6JAAA,CAAA,UAAK,CAAC,IAAI,MAAC,CAAC,EAClC,QAAQ,EACR,SAAS,EACT,OAAO,OAAO,EACd,UAAU,SAAS,EACnB,GAAG,OACW;IACd,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,0CACA,sCACA,kCACA,iCACA,kCACA,KAAK,CAAC,KAAK,EACX,QAAQ,CAAC,QAAQ,EACjB;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;;AAEA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/PfpSlice/index.tsx"],"sourcesContent":["import { BentoBox } from \"@/components/BentoBox\";\nimport { Content } from \"@prismicio/client\";\nimport { PrismicNextImage } from \"@prismicio/next\";\nimport { SliceComponentProps } from \"@prismicio/react\";\nimport type { JSX } from \"react\";\n\n/**\n * Props for `PfpSlice`.\n */\nexport type PfpSliceProps = SliceComponentProps<Content.PfpSliceSlice>;\n\n/**\n * Component for \"PfpSlice\" Slices.\n */\nconst PfpSlice = ({ slice }: PfpSliceProps): JSX.Element => {\n  return (\n    <BentoBox  size=\"small\" className=\"mx-auto\">\n      <PrismicNextImage field={slice.primary.profile_image} className=\"rounded-full max-w-10 mx-auto\" />\n    </BentoBox>\n  );\n};\n\nexport default PfpSlice;\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AASA;;CAEC,GACD,MAAM,WAAW,CAAC,EAAE,KAAK,EAAiB;IACxC,qBACE,6LAAC,iIAAA,CAAA,WAAQ;QAAE,MAAK;QAAQ,WAAU;kBAChC,cAAA,6LAAC,kKAAA,CAAA,mBAAgB;YAAC,OAAO,MAAM,OAAO,CAAC,aAAa;YAAE,WAAU;;;;;;;;;;;AAGtE;KANM;uCAQS"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}