{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/components/BentoBox.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { type JSX } from \"react\";\n\ninterface BentoBoxProps {\n  children?: React.ReactNode;\n  variant?: \"primary\" | \"secondary\" | \"accent\" | \"neutral\";\n  size?: \"small\" | \"medium\" | \"large\";\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function BentoBox({\n  children,\n\n  size = \"small\",\n  className,\n  onClick,\n}: BentoBoxProps): JSX.Element {\n  const sizeClasses = {\n    small: \"col-span-1 row-span-1\",\n    medium: \"col-span-2 row-span-1\",\n    large: \"col-span-2 row-span-2\",\n  };\n\n\n\n  return (\n    <div\n      className={clsx(\n        \"card transition-all duration-300 group\",\n        \"hover:scale-[1.02] hover:shadow-xl\",\n        \"backdrop-blur-sm bg-opacity-90\",\n        \"border border-base-content/10\",\n        \"break-inside-avoid bg-base-100\",\n        sizeClasses[size],\n\n        className\n      )}\n      onClick={onClick}\n    >\n      <div className=\"card-body\">\n        {children}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAWO,SAAS,SAAS,EACvB,QAAQ,EAER,OAAO,OAAO,EACd,SAAS,EACT,OAAO,EACO;IACd,MAAM,cAAc;QAClB,OAAO;QACP,QAAQ;QACR,OAAO;IACT;IAIA,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,0CACA,sCACA,kCACA,iCACA,kCACA,WAAW,CAAC,KAAK,EAEjB;QAEF,SAAS;kBAET,cAAA,6LAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT;KAlCgB"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/agimanifesto/_dev/portfolio/src/slices/CompaniesIHaveWorkedWithSlice/index.tsx"],"sourcesContent":["\"use client\"\nimport { Content } from \"@prismicio/client\";\nimport { PrismicNextImage } from \"@prismicio/next\";\nimport { PrismicRichText, SliceComponentProps } from \"@prismicio/react\";\nimport { BentoBox } from \"@/components/BentoBox\";\nimport { useEffect, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport type { JSX } from \"react\";\n\n/**\n * Props for `CompaniesIHaveWorkedWithSlice`.\n */\nexport type CompaniesIHaveWorkedWithSliceProps =\n  SliceComponentProps<Content.CompaniesIHaveWorkedWithSliceSlice>;\n\n/**\n * Component for \"CompaniesIHaveWorkedWithSlice\" Slices.\n */\nconst CompaniesIHaveWorkedWithSlice = ({\n  slice,\n}: CompaniesIHaveWorkedWithSliceProps): JSX.Element => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentIndex((prevIndex) =>\n        prevIndex === slice.primary.logo.length - 1 ? 0 : prevIndex + 1\n      );\n    }, 3000); // Change slide every 3 seconds\n\n    return () => clearInterval(timer);\n  }, [slice.primary.logo.length]);\n\n  return (\n    <section\n      data-slice-type={slice.slice_type}\n      data-slice-variation={slice.variation}\n      className=\"col-span-1 lg:col-span-2\"\n    >\n      <BentoBox variant=\"primary\" size=\"medium\">\n        <PrismicRichText field={slice.primary.title} />\n        <div className=\"relative h-60 overflow-hidden\">\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={currentIndex}\n              initial={{ x: 300, opacity: 0 }}\n              animate={{ x: 0, opacity: 1 }}\n              exit={{ x: -300, opacity: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"flex items-center justify-center w-full h-full\"\n            >\n              <PrismicNextImage\n                field={slice.primary.logo[currentIndex].company_logo}\n                className=\"h-60 w-auto object-contain\"\n              />\n            </motion.div>\n          </AnimatePresence>\n        </div>\n      </BentoBox>\n    </section>\n  );\n};\n\nexport default CompaniesIHaveWorkedWithSlice;\n"],"names":[],"mappings":";;;;AAIA;AACA;AAFA;AAGA;AAAA;AAJA;;;AAFA;;;;;;AAeA;;CAEC,GACD,MAAM,gCAAgC,CAAC,EACrC,KAAK,EAC8B;;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mDAAE;YACR,MAAM,QAAQ;iEAAY;oBACxB;yEAAgB,CAAC,YACf,cAAc,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,YAAY;;gBAElE;gEAAG,OAAO,+BAA+B;YAEzC;2DAAO,IAAM,cAAc;;QAC7B;kDAAG;QAAC,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM;KAAC;IAE9B,qBACE,6LAAC;QACC,mBAAiB,MAAM,UAAU;QACjC,wBAAsB,MAAM,SAAS;QACrC,WAAU;kBAEV,cAAA,6LAAC,iIAAA,CAAA,WAAQ;YAAC,SAAQ;YAAU,MAAK;;8BAC/B,6LAAC,kKAAA,CAAA,kBAAe;oBAAC,OAAO,MAAM,OAAO,CAAC,KAAK;;;;;;8BAC3C,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,4LAAA,CAAA,kBAAe;wBAAC,MAAK;kCACpB,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;4BAET,SAAS;gCAAE,GAAG;gCAAK,SAAS;4BAAE;4BAC9B,SAAS;gCAAE,GAAG;gCAAG,SAAS;4BAAE;4BAC5B,MAAM;gCAAE,GAAG,CAAC;gCAAK,SAAS;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;4BAC5B,WAAU;sCAEV,cAAA,6LAAC,kKAAA,CAAA,mBAAgB;gCACf,OAAO,MAAM,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY;gCACpD,WAAU;;;;;;2BATP;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBnB;GA3CM;KAAA;uCA6CS"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}